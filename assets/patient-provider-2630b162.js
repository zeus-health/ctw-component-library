import{r as u,R as d}from"./index-6f814c40.js";import{F as U,b as M,d as O,e as $,g as B,h as k,i as H,j as V,k as q,o as y,n as v,T as Y,p as F,q as P,S as L,u as m,r as N,t as R}from"./patient-helper-33893341.js";import"./_baseToString-7c0e3f59.js";import"./_castSlice-1b11acd9.js";import"./sortBy-7fc077e6.js";import"./_baseClone-3ae78372.js";import"./sortBy-6a38afc6.js";import"./_equalByTag-eda72788.js";import"./_baseForOwn-03e9c2f3.js";import{u as Q}from"./uniq-8676ca12.js";import"./_createSet-6ff8e1d4.js";import{q as h}from"./request-5d5ec5f4.js";import{c as j}from"./_basePickBy-b5376a08.js";const S=u.createContext(void 0),z=e=>d.createElement("div",null);function f({children:e}){const[t,r]=u.useState(!1),[a,n]=u.useState({component:z}),i=u.useMemo(()=>({openModal:o=>{n(o),r(!1),setTimeout(()=>{r(!0)})}}),[]);return d.createElement(S.Provider,{value:i},a.component({isOpen:t,onClose:()=>r(!1)}),e)}const ve=()=>{const e=u.useContext(S);if(!e)throw new Error("useModal must be used within a ModalProvider");return e};try{f.displayName="ModalProvider",f.__docgenInfo={description:"",displayName:"ModalProvider",props:{}}}catch{}const C=u.createContext(void 0),G=e=>d.createElement("div",null);function g({children:e}){const[t,r]=u.useState(!1),[a,n]=u.useState({component:G}),i=u.useMemo(()=>({openDrawer:o=>{n(o),r(!1),setTimeout(()=>{r(!0)})}}),[]);return d.createElement(C.Provider,{value:i},a.component({isOpen:t,onClose:()=>r(!1)}),e)}const _e=()=>{const e=u.useContext(C);if(!e)throw new Error("useDrawer must be used within a DrawerProvider");return e};try{g.displayName="DrawerProvider",g.__docgenInfo={description:"",displayName:"DrawerProvider",props:{}}}catch{}class W extends U{get fullName(){var a,n;const t=(a=this.resource.name)==null?void 0:a[0];return[(n=t==null?void 0:t.given)!=null&&n.length?t.given[0]:"",t==null?void 0:t.family].filter(i=>i).join(" ")}}const Z=async(e,t)=>{let r=[];try{const{resources:a}=await $("Practitioner",t,{_id:e});r=a}catch(a){throw new Error(`Failed fetching practitioner with an id of: ${e}. ${a}`)}if(!r[0])throw new Error(`No practitioner found with an id of: ${e}`);return new W(r[0])};async function I(e){const t=M(e.authToken);if(t){const r=await Z(t,e);return{reference:`Practitioner/${t}`,type:"Practitioner",display:r.fullName}}return{display:O(e.authToken)}}const b={system:H,code:"assembler",display:"Assembler"},D={coding:[{system:V,code:"CREATE",display:"create"}]},K={coding:[{system:V,code:"UPDATE",display:"revise"}]},J=async(e,t,r)=>{var l;const{fhirClient:a}=r,n=q(r.authToken),i=parseInt(((l=t.meta)==null?void 0:l.versionId)||"0",10),o={resourceType:"Provenance",agent:[{who:await I(r),onBehalfOf:{display:n}},{type:{coding:[b]},who:{display:"Zus Health"}}],recorded:new Date().toISOString(),target:[{reference:`${t.resourceType}/${t.id}/_history/${i}`,type:t.resourceType}]};return o.activity=e==="CREATE"?D:K,a.create({resourceType:"Provenance",body:o})};async function we(e,t){const r=Q(t.map(n=>`${n.resourceType}/${n.id}`)).join(","),{resources:a}=await h.fetchQuery([B,r],async()=>k("Provenance",e,{target:r}));return a}let c;const X=new Uint8Array(16);function ee(){if(!c&&(c=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!c))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return c(X)}const s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).slice(1));function te(e,t=0){return(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase()}const ne=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),_={randomUUID:ne};function w(e,t,r){if(_.randomUUID&&!t&&!e)return _.randomUUID();e=e||{};const a=e.random||(e.rng||ee)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,t){r=r||0;for(let n=0;n<16;++n)t[r+n]=a[n];return t}return te(a)}async function re(e,t){const{fhirClient:r}=t,a=e;try{if(e.id){const i=await r.update({resourceType:e.resourceType,id:e.id,body:y(e)});return v(i)||await J("UPDATE",i,t),i}const n=await r.create({resourceType:e.resourceType,body:y(e)});return v(n)||(a.id=n.id),n}catch(n){return Y.logError(n),n}}async function Te(e,t){const{fhirClient:r}=t,a=q(t.authToken),n=e.id||w(),i=w(),o={resourceType:"Bundle",type:"transaction",entry:[{request:{method:"POST",url:e.resourceType},fullUrl:n,resource:e},{request:{method:"POST",url:"Provenance"},fullUrl:i,resource:{resourceType:"Provenance",activity:D,agent:[{who:await I(t),onBehalfOf:{display:a}},{type:{coding:[b]},who:{display:"Zus Health"}}],recorded:new Date().toISOString(),target:[{reference:`${e.resourceType}/${n}`,type:e.resourceType}]}}]};return r.transaction({body:y({...o,type:"transaction"})})}const ae=async(e,t,r)=>{const a=await r(),n=j(e.resource);n.gender=t.gender,n.birthDate=F(t.dateOfBirth),n.name=[{use:"official",family:t.lastName,given:[t.firstName]}],n.address=[{line:[t.address],city:t.city,state:t.state,postalCode:t.zipCode}];const i=[];t.phone&&i.push({system:"phone",value:t.phone}),t.email&&i.push({system:"email",value:t.email}),n.telecom=i;const o=await re(n,a);return await h.invalidateQueries([P]),o},p=u.createContext(void 0),x=1e3*60*5;function T({children:e,patientUPID:t,patientID:r,systemURL:a,tags:n,onPatientSave:i}){const o=u.useMemo(()=>({patientID:t||r,systemURL:t?L:a,tags:n,onPatientSave:i}),[r,t,a,n,i]);return d.createElement(p.Provider,{value:o},d.createElement(f,null,d.createElement(g,null,e)))}function ie(){const{getRequestContext:e}=m(),t=u.useContext(p);if(!t)throw new Error("usePatient must be used within a PatientProvider");const{patientID:r,systemURL:a,tags:n}=t;return N([P,r,a,n],async()=>{const i=await e();return R(i,r,a,{_tag:(n==null?void 0:n.map(o=>`${o.system}|${o.code}`))??[]})},{staleTime:x})}function Ee(){const{getRequestContext:e}=m(),t=u.useContext(p);return{getPatient:u.useCallback(()=>{if(!t)throw new Error("usePatient must be used within a PatientProvider");const{patientID:r,systemURL:a,tags:n}=t;return h.fetchQuery([P,r,a,n],async()=>{const i=await e();return R(i,r,a,{_tag:(n==null?void 0:n.map(o=>`${o.system}|${o.code}`))??[]})},{staleTime:x})},[t,e])}}function E(e){const{getRequestContext:t}=m(),r=u.useContext(p);if(!r)throw new Error("usePatient must be used within a PatientProvider");const{onPatientSave:a}=r;return u.useCallback(async n=>a?a(n):ae(e,n,t),[a,e,t])}function Ve(e,t,r,a=!0){var o,l;const{getRequestContext:n}=m(),i=ie();return N([e,(o=i.data)==null?void 0:o.UPID,...t],async()=>{const A=await n();return r(A,i.data,t)},{enabled:!!((l=i.data)!=null&&l.UPID)&&a})}try{T.displayName="PatientProvider",T.__docgenInfo={description:"",displayName:"PatientProvider",props:{tags:{defaultValue:null,description:"",name:"tags",required:!1,type:{name:"Tag[]"}},onPatientSave:{defaultValue:null,description:"",name:"onPatientSave",required:!1,type:{name:"((data: PatientFormData) => Promise<void>)"}},patientUPID:{defaultValue:null,description:"",name:"patientUPID",required:!1,type:{name:"string"}},patientID:{defaultValue:null,description:"",name:"patientID",required:!1,type:{name:"string"}},systemURL:{defaultValue:null,description:"",name:"systemURL",required:!1,type:{name:"string"}}}}}catch{}try{E.displayName="useHandlePatientSave",E.__docgenInfo={description:"",displayName:"useHandlePatientSave",props:{active:{defaultValue:null,description:"",name:"active",required:!0,type:{name:"boolean | undefined"}},contact:{defaultValue:null,description:"",name:"contact",required:!0,type:{name:"PatientContact[] | undefined"}},dob:{defaultValue:null,description:"",name:"dob",required:!0,type:{name:"string | undefined"}},age:{defaultValue:null,description:"",name:"age",required:!0,type:{name:"number | undefined"}},gender:{defaultValue:null,description:"",name:"gender",required:!0,type:{name:"string | undefined"}},maritalStatus:{defaultValue:null,description:"",name:"maritalStatus",required:!0,type:{name:"string | undefined"}},organization:{defaultValue:null,description:"",name:"organization",required:!0,type:{name:"OrganizationModel | undefined"}},use:{defaultValue:null,description:"",name:"use",required:!0,type:{name:"enum",value:[{value:"undefined"},{value:'"usual"'},{value:'"official"'},{value:'"temp"'},{value:'"nickname"'},{value:'"anonymous"'},{value:'"old"'},{value:'"maiden"'}]}},UPID:{defaultValue:null,description:"",name:"UPID",required:!0,type:{name:"string"}},getPhoneNumber:{defaultValue:null,description:"",name:"getPhoneNumber",required:!0,type:{name:'(use?: "temp" | "old" | "home" | "work" | "mobile" | undefined) => string | undefined'}},phoneNumber:{defaultValue:null,description:"",name:"phoneNumber",required:!0,type:{name:"string | undefined"}},email:{defaultValue:null,description:"",name:"email",required:!0,type:{name:"string | undefined"}},bestHomeAddress:{defaultValue:null,description:"",name:"bestHomeAddress",required:!0,type:{name:"Address | undefined"}},homeAddress:{defaultValue:null,description:"",name:"homeAddress",required:!0,type:{name:"Address | undefined"}},bestName:{defaultValue:null,description:"",name:"bestName",required:!0,type:{name:"HumanName"}},additionalNames:{defaultValue:null,description:"",name:"additionalNames",required:!0,type:{name:"string | undefined"}},display:{defaultValue:null,description:"",name:"display",required:!0,type:{name:"string"}},firstName:{defaultValue:null,description:"",name:"firstName",required:!0,type:{name:"string"}},fullName:{defaultValue:null,description:"",name:"fullName",required:!0,type:{name:"string"}},lastName:{defaultValue:null,description:"",name:"lastName",required:!0,type:{name:"string | undefined"}},nickname:{defaultValue:null,description:"",name:"nickname",required:!0,type:{name:"string | undefined"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!0,type:{name:"string | undefined"}},suffix:{defaultValue:null,description:"",name:"suffix",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"Patient"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},resourceTypeTitle:{defaultValue:null,description:"",name:"resourceTypeTitle",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}export{T as P,_e as a,ve as b,ie as c,re as d,E as e,Ee as f,I as g,W as h,Te as i,we as s,Ve as u,w as v};
//# sourceMappingURL=patient-provider-2630b162.js.map
