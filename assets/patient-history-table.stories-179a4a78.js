var v=Object.defineProperty;var I=(t,e,r)=>e in t?v(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var p=(t,e,r)=>(I(t,typeof e!="symbol"?e+"":e,r),r);import{r as m,R as a}from"./index-6f814c40.js";import{c as N}from"./index-74f03c09.js";import{g as _,h as T,u as H,i as S,j as b,T as R,Q as k,w as M,k as x,H as D,l as A,m as B,C,a as q,S as L}from"./patient-allergies-8acdf444.js";import"./_baseForOwn-10376b4b.js";import"./_baseIsEqual-a4ed7fae.js";import"./_baseClone-72ef38a3.js";import{c as V}from"./action-list-471edd10.js";import"./sortBy-eef2ec28.js";import{T as U}from"./table-82fc3d88.js";import{u as F}from"./uniq-512c0c4d.js";import"./_createSet-e03e7f83.js";import"./request-02bc8afe.js";import"./drawer-86b55368.js";import"./spinner-66aa4ba7.js";import{s as Y}from"./requests-60702e4a.js";import"./_commonjsHelpers-042e6b4d.js";import"./extends-8de4c56c.js";import"./_basePickBy-8e839ef7.js";import"./toNumber-54b1e0c0.js";import"./index-b03e455b.js";import"./mapValues-0be0e26b.js";import"./index-6de6b113.js";import"./debounce-e90b6304.js";import"./data-list-254aa0b0.js";import"./isPlainObject-832b1a67.js";import"./index-135b3e83.js";class Q{constructor(e,r){p(this,"kind","PatientHistory");p(this,"historyInfo");p(this,"patient");this.patient=e,this.historyInfo=r}get messages(){var e;return(e=this.historyInfo)==null?void 0:e._messages}get key(){var e;return((e=this.historyInfo)==null?void 0:e.uuid)||""}get lastRetrievedAt(){var e;return _((e=this.historyInfo)==null?void 0:e._lastUpdated)}get createdAt(){var e;return T((e=this.historyInfo)==null?void 0:e._createdAt,"MM/dd/yy HH:mm")}get retrievedStatus(){var e;return(e=this.historyInfo)==null?void 0:e.status}}function W(t,e){return H(k,[t,e],async r=>{try{const s=await S(r),d=e*t,y=d+t,o=s.data.slice(d,y),f=F(V(o.map(i=>i.initialData.patientId))),c=(await b(r,void 0,f)).patients.map(i=>{const n=o.filter(l=>l.initialData.patientId===i.id);return new Q(i,n[0])});return{total:s.data.length,patients:c}}catch(s){throw R.logError(s,"Failed fetching patient history patients."),new Error(`Failed fetching patient history patients: ${s}`)}})}const E=M(({className:t,pageSize:e=20,title:r="Patient History Request"})=>{const[s,d]=m.useState(1),[y,o]=m.useState(0),[f,h]=m.useState([]),{data:{patients:c,total:i}={},isFetching:n,isError:l}=W(e,s-1);return m.useEffect(()=>{!n&&c&&(o(i??0),h(c))},[c,i,l,n]),m.useEffect(()=>{l&&(o(0),h([]))},[l,n]),a.createElement(x,{className:N("ctw-patients-table",t),"data-zus-telemetry-namespace":"PatientsTable"},a.createElement(D,{title:r},a.createElement("div",{className:"ctw-relative"},a.createElement("div",{className:"ctw-search-icon-wrapper"},a.createElement(A,{className:"ctw-search-icon"})),a.createElement("input",{type:"text",className:"ctw-patients-table-search",placeholder:"Search",name:"searchPatientName"}))),a.createElement("div",{className:"ctw-overflow-hidden"},a.createElement(U,{records:f,columns:$,pageSize:e,hidePagination:!0},a.createElement(B,{setCurrentPage:d,total:y,currentPage:s,pageSize:e,isLoading:n}))))},"PatientsHistoryTable"),$=[{title:"Name",render:t=>a.createElement(O,{data:t})},{title:"Initiated",render:t=>a.createElement("div",null,t.createdAt)},{title:"Status",render:t=>{var e;return a.createElement(a.Fragment,null,(e=t.messages)==null?void 0:e.map(r=>{var s;return a.createElement("div",{className:"ctw-status-column",key:`${(s=t.historyInfo)==null?void 0:s.uuid}-${r.service}`},a.createElement("div",{className:"ctw-capitalize"},r.service),a.createElement("div",null,"-"),a.createElement("div",null,r.status))}))}}],O=({data:t})=>a.createElement("div",{className:"ctw-flex ctw-items-center"},a.createElement("div",{className:"ctw-ml-4"},a.createElement("div",{className:"ctw-flex ctw-font-medium"},a.createElement("div",{className:"ctw-max-w-xs"},t.patient.fullName),t.patient.resource.gender&&a.createElement("div",{className:"ctw-uppercase"},"(",t.patient.resource.gender[0],")")),a.createElement("div",{className:"ctw-text-content-lighter"},t.patient.dob," (",t.patient.age,")")));try{E.displayName="PatientHistoryTable",E.__docgenInfo={description:"",displayName:"PatientHistoryTable",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"Argument"}},pageSize:{defaultValue:null,description:"",name:"pageSize",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},getRowClasses:{defaultValue:null,description:"",name:"getRowClasses",required:!1,type:{name:"((row: PatientModel) => Argument)"}},onRowClick:{defaultValue:null,description:"",name:"onRowClick",required:!1,type:{name:"((row: PatientModel) => void)"}}}}}catch{}const Pe={component:E,tags:["autodocs"],args:{},decorators:[(t,{args:e})=>a.createElement(C,{env:"dev",authToken:"dummy-token",builderId:"b123"},a.createElement(q,{patientID:"u12345",systemURL:L},a.createElement(t,{args:e})))]},u={...Y()};var g,w,P;u.parameters={...u.parameters,docs:{...(g=u.parameters)==null?void 0:g.docs,source:{originalSource:`{
  ...setupPatientHistoryMocks()
}`,...(P=(w=u.parameters)==null?void 0:w.docs)==null?void 0:P.source}}};const ve=["Basic"];export{u as Basic,ve as __namedExportsOrder,Pe as default};
