import{r as y,R as e}from"./index-6f814c40.js";import{c as H}from"./index-74f03c09.js";import{O,B as D}from"./other-provider-meds-table-88c5db10.js";import{u as A}from"./dropdown-action-menu-a1855eee.js";import"./_baseToString-7c0e3f59.js";import{d as N}from"./sortBy-3347ffe9.js";import"./_baseClone-3ae78372.js";import"./sortBy-ee350c06.js";import"./_equalByTag-eda72788.js";import"./_baseForOwn-03e9c2f3.js";import"./_createSet-6ff8e1d4.js";import{u as v,S as b,m as T,d as s,P as E}from"./provider-meds-table-037316a7.js";import{u as S,a as _,M as q}from"./use-medications-4de61b0b.js";import{h as V,g as P,y as F,i as h}from"./values-28adb33b.js";import{s as k}from"./sort-618282df.js";import{S as R}from"./error-boundary-3c619f42.js";import{T as x,F as z}from"./tab-group-e985f29f.js";function m(r){const t=A(r,"lastPrescriber");return N([{key:"isArchived",type:"tag",icon:"eye",display:({active:a})=>a?"dismissed records":"show dismissed records"},t.length<2?null:{key:"lastPrescriber",type:"checkbox",icon:"clipboard",values:t,display:"prescriber"}])}try{m.displayName="medicationFilters",m.__docgenInfo={description:"",displayName:"medicationFilters",props:{}}}catch{}function u({className:r,onAfterOpenHistoryDrawer:t,onOpenHistoryDrawer:a}){const[i,o]=y.useState([]),d=S(),{builderMedications:l,isLoading:c}=_(),{data:n,setSort:g}=v({defaultFilters:{},defaultSort:s,records:l});function M(p){h(a)&&a(),d({medication:p}),setTimeout(()=>{h(t)&&t()},0)}return y.useEffect(()=>{o(k(n.filter(p=>p.displayStatus!=="Active"),V(P("display"),F),"asc"))},[n]),e.createElement(e.Fragment,null,e.createElement("div",{className:"ctw-flex ctw-flex-wrap ctw-gap-x-2"},e.createElement(b,{className:"ctw-my-2",options:T,onChange:g,defaultSort:s})),e.createElement(q,{className:r,medicationStatements:i,isLoading:c,handleRowClick:M}))}try{u.displayName="ProviderInactiveMedicationsTable",u.__docgenInfo={description:`Displays a table of inactive medication records. These are builder-owned medications
that have a status other than "active". These are not to be confused with "dismissed" or "archived"
medication records pulled from the network of other providers.`,displayName:"ProviderInactiveMedicationsTable",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},onOpenHistoryDrawer:{defaultValue:null,description:"",name:"onOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}},onAfterOpenHistoryDrawer:{defaultValue:null,description:"",name:"onAfterOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}}}}}catch{}const I=r=>[{key:"medication-list",display:()=>"medication list",render:()=>e.createElement(E,{onOpenHistoryDrawer:r.onOpenHistoryDrawer,onAfterOpenHistoryDrawer:r.onAfterOpenHistoryDrawer})},{key:"inactive-provider-records",display:()=>"inactive",render:()=>e.createElement(u,{onOpenHistoryDrawer:r.onOpenHistoryDrawer,onAfterOpenHistoryDrawer:r.onAfterOpenHistoryDrawer})},{key:"other-provider-records",display:()=>e.createElement(e.Fragment,null,e.createElement("span",{className:"ctw-pr-2 ctw-capitalize"},"other provider records"),e.createElement(D,null)),render:()=>e.createElement(f,{...r})}];function f({handleAddToRecord:r,hideAddToRecord:t,onOpenHistoryDrawer:a,onAfterOpenHistoryDrawer:i}){const{otherProviderMedications:o}=_(),{data:d,filters:l,setFilters:c,setSort:n}=v({defaultFilters:{},defaultSort:s,records:o});return e.createElement(e.Fragment,null,e.createElement("div",{className:"ctw-flex ctw-flex-wrap ctw-gap-x-2"},e.createElement(b,{className:"ctw-my-2",options:T,onChange:n,defaultSort:s}),e.createElement(z,{filters:m(o??[]),onChange:c,defaultState:{}})),e.createElement(O,{records:d,showDismissed:!!l.isArchived,handleAddToRecord:r,hideAddToRecord:t,onOpenHistoryDrawer:a,onAfterOpenHistoryDrawer:i}))}function w({className:r,forceHorizontalTabs:t=!1,...a}){const i=I(a);return e.createElement(R,{className:H("ctw-patient-medications ctw-space-y-3 ctw-bg-white",r)},e.createElement(x,{content:i,forceHorizontalTabs:t,className:r}))}try{f.displayName="OtherProviderMedsTableTab",f.__docgenInfo={description:"",displayName:"OtherProviderMedsTableTab",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},forceHorizontalTabs:{defaultValue:null,description:"",name:"forceHorizontalTabs",required:!1,type:{name:"boolean"}},hideAddToRecord:{defaultValue:null,description:"",name:"hideAddToRecord",required:!1,type:{name:"boolean"}},handleAddToRecord:{defaultValue:null,description:"",name:"handleAddToRecord",required:!1,type:{name:"((m: MedicationStatementModel) => void)"}},onOpenHistoryDrawer:{defaultValue:null,description:"",name:"onOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}},onAfterOpenHistoryDrawer:{defaultValue:null,description:"",name:"onAfterOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}}}}}catch{}try{w.displayName="PatientMedications",w.__docgenInfo={description:`This component is a tabbed view of patient medications from the current
provider, other providers and historical. When rendered in a small breakpoint
the component will change from horizontal tabs to a vertical dropdown menu.
If this is undesired, you may set the property \`forceHorizontalTabs\` to true
and the tabs will remain visible and horizontal. The \`forceHorizontalTabs\`
prop will not prevent the medication tables from switching to their stacked
view when viewed on smaller screens.`,displayName:"PatientMedications",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},forceHorizontalTabs:{defaultValue:{value:"false"},description:"",name:"forceHorizontalTabs",required:!1,type:{name:"boolean"}},hideAddToRecord:{defaultValue:null,description:"",name:"hideAddToRecord",required:!1,type:{name:"boolean"}},handleAddToRecord:{defaultValue:null,description:"",name:"handleAddToRecord",required:!1,type:{name:"((m: MedicationStatementModel) => void)"}},onOpenHistoryDrawer:{defaultValue:null,description:"",name:"onOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}},onAfterOpenHistoryDrawer:{defaultValue:null,description:"",name:"onAfterOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}}}}}catch{}export{f as O,w as P};
