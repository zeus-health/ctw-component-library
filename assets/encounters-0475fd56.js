var Re=Object.defineProperty;var ve=(r,i,e)=>i in r?Re(r,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[i]=e;var g=(r,i,e)=>(ve(r,typeof i!="symbol"?i+"":i,e),e);import{r as P,R as d}from"./index-6f814c40.js";import{a7 as x,aF as Me,H as R,F as b,al as K,y as m,c as E,o as Ee,aG as W,aH as J,J as Z,aI as ee,aJ as te,aK as re,aL as ne,aM as ie,aN as se,ac as j,ad as Q,ay as V,W as Se,L as D,M as q,aO as ae,aP as De,aQ as qe,S as be,N as _e,T as ue,aR as Ne,aS as Ie,aT as Pe,aU as Te,aV as Ve,O as oe,ab as we,aa as Ae,Y as Oe,aW as xe}from"./patient-provider-d5d45996.js";import{g as Le}from"./_baseForOwn-b2e5e443.js";import"./sortBy-400dab6d.js";import{c as M}from"./sortBy-a6efb69f.js";import"./_baseClone-39df8af0.js";import"./_baseIsEqual-f087c1ca.js";import"./_createSet-fb89f2da.js";import{a as h,d as L,g as T,h as de,o as Ce,j as C,m as F,k as Fe,l as Ue,n as ke,q as ce,r as je,v as Qe,w as $e,e as Be,f as Ye}from"./values-c66b9b7f.js";import{c as z}from"./_basePickBy-9cf4e7d3.js";import{u as He,a as le}from"./view-fhir-78ad4744.js";import"./request-b468d8d1.js";import{s as ze}from"./sort-a6cd1820.js";import{e as Ge}from"./data-list-254aa0b0.js";import{L as Xe}from"./loading-c41f709e.js";import{C as Ke}from"./coding-list-1d7c950f.js";import{i as We}from"./null-flavor-c59991a4.js";import{u as G}from"./uniq-929f35e8.js";const Je={active:"Currently taking","entered-in-error":"Never taken","not-taken":"Prescribed, not taken",completed:"No longer taking","on-hold":"On hold",intended:"Intend to take",stopped:"No longer taking"};function $(r,i){var t;if(r.medicationCodeableConcept)return r.medicationCodeableConcept;const e=R("Medication",r.contained,i,(t=r.medicationReference)==null?void 0:t.reference);return e==null?void 0:e.code}function A(r,i){var e;return(e=B(r,i))==null?void 0:e.code}function B(r,i){var n,s;const e=$(r,i),t=(n=e==null?void 0:e.coding)==null?void 0:n.find(a=>a.system===x&&a.extension===void 0);return t||((s=e==null?void 0:e.coding)==null?void 0:s.find(a=>{var u;return a.system===x&&((u=a.extension)==null?void 0:u.some(o=>o.url===Me&&o.valueString==="Standardization"))}))}function pe(r,i){var n,s,a,u;const e=B(r,i);if(e!=null&&e.display)return e.display;const t=$(r,i);return t!=null&&t.text?t.text:((s=(n=t==null?void 0:t.coding)==null?void 0:n.find(o=>o.display))==null?void 0:s.display)??`${(a=t==null?void 0:t.coding)==null?void 0:a[0].code} (${(u=t==null?void 0:t.coding)==null?void 0:u[0].system})`}function me(r,i){var t,n,s;let e;switch(r.resourceType){case"MedicationAdministration":case"MedicationDispense":e=(n=(t=r.performer)==null?void 0:t[0])==null?void 0:n.actor;break;case"MedicationRequest":e=r.performer||((s=r.dispenseRequest)==null?void 0:s.performer);break;case"MedicationStatement":default:return}if(e!=null&&e.reference&&e.type==="Organization")return R("Organization",r.contained,i,e.reference)}function Ze(r){return Le(Je,r,"")}class Y extends b{constructor(){super(...arguments);g(this,"kind","MedicationDispense")}get includedPerformer(){var n,s,a,u;const e=(s=(n=this.resource.performer)==null?void 0:n[0])==null?void 0:s.actor.reference,t=R("Practitioner",this.resource.contained,this.includedResources,e);return t?new K(t).fullName:(u=(a=this.resource.performer)==null?void 0:a[0])==null?void 0:u.actor.display}get performer(){return me(this.resource,this.includedResources)}get performerDetails(){var t,n;const{performer:e}=this;return{name:(e==null?void 0:e.name)??"",address:((t=e==null?void 0:e.address)==null?void 0:t[0].text)??"",telecom:((n=e==null?void 0:e.telecom)==null?void 0:n[0].value)??""}}get status(){return this.resource.status}get quantityDisplay(){const{value:e,unit:t="units"}=this.resource.quantity||{};return e?`${e} ${t}`:void 0}get rxNorm(){return A(this.resource,this.includedResources)}get supplied(){const{value:e,unit:t="days"}=this.resource.daysSupply||{};return e?`${e} ${t}`:void 0}get medicationDisplayName(){return pe(this.resource,this.includedResources)}get whenHandedOver(){return m(this.resource.whenHandedOver)}get whenPrepared(){return m(this.resource.whenPrepared)}}class fe extends b{constructor(){super(...arguments);g(this,"kind","MedicationAdministration")}get dosageDisplay(){const{text:e,dose:t}=this.resource.dosage||{};return e||h([t==null?void 0:t.value,t==null?void 0:t.unit]).join(" ")}get dosageRoute(){const{route:e}=this.resource.dosage||{};return e==null?void 0:e.text}get effectivePeriod(){const{start:e,end:t}=this.resource.effectivePeriod||{};return{start:e?m(e):"",end:t?m(t):""}}}class H extends b{constructor(){super(...arguments);g(this,"kind","MedicationRequest")}get authoredOn(){return m(this.resource.authoredOn)}get includedRequester(){var n,s;const e=(n=this.resource.requester)==null?void 0:n.reference,t=R("Practitioner",this.resource.contained,this.includedResources,e);return t?new K(t).fullName:(s=this.resource.requester)==null?void 0:s.display}get medicationDisplayName(){return pe(this.resource,this.includedResources)}get pharmacy(){var s,a,u;const{reference:e,display:t}=((s=this.resource.dispenseRequest)==null?void 0:s.performer)||{},n=R("Organization",this.resource.contained,this.includedResources,e);if(n){const o=(a=n.telecom)==null?void 0:a[0].value,{city:c,state:l,postalCode:p,text:v,line:f=[]}=((u=n.address)==null?void 0:u[0])||{},y=h([c,`${l} ${p}`]).join(", ");return{telecom:o,name:n.name,address:v??h([f,y]).join(`
`)}}return{name:t}}get rxNorm(){return A(this.resource,this.includedResources)}}class S extends b{constructor(){super(...arguments);g(this,"kind","MedicationStatement");g(this,"builderPatientRxNormStatus")}get basedOn(){var e,t;return(t=(e=this.resource.basedOn)==null?void 0:e[0])==null?void 0:t.type}get category(){return E(this.resource.category)}get context(){var e;return(e=this.resource.context)==null?void 0:e.display}get dateAsserted(){return m(this.resource.dateAsserted)}set dateAsserted(e){e instanceof Date?this.resource.dateAsserted=Ee(e):this.resource.dateAsserted=e}get derivedFrom(){var e;return((e=this.resource.derivedFrom)==null?void 0:e.map(({display:t})=>t||""))||[]}get aggregatedFrom(){const e=L(t=>t.url===W||t.url===J,this.resource.extension);return e!=null&&e.extension?h(e.extension.map(T("valueReference"))):h(this.resource.derivedFrom)}get display(){return E($(this.resource,this.includedResources))}get dosage(){var e,t;return(t=(e=this.resource.dosage)==null?void 0:e[0])==null?void 0:t.text}get effectiveStart(){var e;return m((e=this.resource.effectivePeriod)==null?void 0:e.start)}get identifier(){var e,t;return(t=(e=this.resource.identifier)==null?void 0:e[0])==null?void 0:t.value}get informationSource(){return this.resource.informationSource||void 0}set informationSource(e){this.resource.informationSource=e}get medicationReference(){var e;return(e=this.resource.medicationReference)==null?void 0:e.display}get notesDisplay(){var e;return((e=this.resource.note)==null?void 0:e.map(({text:t})=>t))||[]}get partOf(){var e,t;return(t=(e=this.resource.partOf)==null?void 0:e[0])==null?void 0:t.display}get patientStatus(){var e;return Ze((e=this.builderPatientRxNormStatus)==null?void 0:e[this.rxNorm??""])}get resourceTypeTitle(){return"Medication"}get rxNorm(){return A(this.resource,this.includedResources)}get rxNormCodeableConcept(){const e=B(this.resource,this.includedResources);return{...e??{},display:(e==null?void 0:e.display)??this.display}}get reason(){var e;return E((e=this.resource.reasonCode)==null?void 0:e[0])}get reasonReference(){return this.resource.reasonReference}get isInactive(){return!["active","intended","unknown"].includes(this.status)}get status(){return this.resource.status}get displayStatus(){return this.isArchived?"Dismissed":de(this.resource.status)}get statusReason(){var e;return E((e=this.resource.statusReason)==null?void 0:e[0])}get subject(){return this.resource.subject}get subjectID(){var t;const[,e]=((t=this.resource.subject.reference)==null?void 0:t.split("/"))||[];return e||""}get patient(){const e=R("Patient",this.resource.contained,this.includedResources,this.resource.subject.reference);if(e)return new Z(e,this.includedResources)}get lastFillDate(){var e,t;return m((t=(e=this.resource.extension)==null?void 0:e.find(n=>n.url===ee))==null?void 0:t.valueDateTime)}get quantity(){var t,n;const e=(n=(t=this.resource.extension)==null?void 0:t.find(s=>s.url===te))==null?void 0:n.valueQuantity;if(e)return`${e.value} ${e.unit||""}`}get daysSupply(){var e,t,n,s;return(s=(n=(t=(e=this.resource.extension)==null?void 0:e.find(a=>a.url===re))==null?void 0:t.valueQuantity)==null?void 0:n.value)==null?void 0:s.toString()}get refills(){var e,t,n;return(n=(t=(e=this.resource.extension)==null?void 0:e.find(s=>s.url===ne))==null?void 0:t.valueUnsignedInt)==null?void 0:n.toString()}get lastPrescriber(){var n,s;const e=(s=(n=this.resource.extension)==null?void 0:n.find(a=>a.url===ie))==null?void 0:s.valueReference;if(!(e!=null&&e.type)||!e.reference)return;const t=R(e.type,this.resource.contained,this.includedResources,e.reference);if(t!=null&&t.name){if(typeof t.name=="string")return t.name;const{family:a,given:u=[]}=t.name[0];return h([a,u[0]]).join(", ")}return e.display}get lastPrescribedDate(){var e,t;return m((t=(e=this.resource.extension)==null?void 0:e.find(n=>n.url===se))==null?void 0:t.valueDateTime)}}class ye extends b{constructor(){super(...arguments);g(this,"kind","Medication")}get performer(){var e;return(e=me(this.resource,this.includedResources))==null?void 0:e.name}get status(){return this.resource.status}get dosage(){var e,t,n;switch(this.resource.resourceType){case"MedicationStatement":return(t=(e=this.resource.dosage)==null?void 0:e[0])==null?void 0:t.text;case"MedicationAdministration":return new fe(this.resource,this.includedResources).dosageDisplay;case"MedicationDispense":case"MedicationRequest":return E((n=this.resource.dosageInstruction)==null?void 0:n[0]);default:return""}}get date(){var e,t,n,s,a,u;switch(this.resource.resourceType){case"MedicationStatement":return this.resource.dateAsserted??((e=this.resource.effectivePeriod)==null?void 0:e.start);case"MedicationAdministration":return(t=this.resource.effectivePeriod)==null?void 0:t.start;case"MedicationDispense":return this.resource.whenHandedOver??this.resource.whenPrepared;case"MedicationRequest":return this.resource.authoredOn??((u=(a=(s=(n=this.resource.dosageInstruction)==null?void 0:n[0].timing)==null?void 0:s.repeat)==null?void 0:a.boundsPeriod)==null?void 0:u.start);default:return""}}get dateLocal(){return m(this.date)}get patient(){var t;const e=R("Patient",this.resource.contained,this.includedResources,(t=this.resource.subject)==null?void 0:t.reference);if(e)return new Z(e,this.includedResources)}get prescriber(){switch(this.resource.resourceType){case"MedicationStatement":return new S(this.resource,this.includedResources).lastPrescriber;case"MedicationDispense":return new Y(this.resource,this.includedResources).includedPerformer;case"MedicationRequest":return new H(this.resource,this.includedResources).includedRequester;default:return}}}const O=Ce(["informationSourceNot","informationSource"]);function ge(r,i={},e=!1){let t=e?st(r.resources,r.bundle):r.resources;return i.informationSource&&(t=t.filter(n=>{var s;return((s=n.informationSource)==null?void 0:s.type)===i.informationSource})),i.informationSourceNot&&(t=t.filter(n=>{var s;return((s=n.informationSource)==null?void 0:s.type)!==i.informationSourceNot})),t}async function et(r,i,e=[]){const[t={}]=e;try{const n=await _e("MedicationStatement",r,{patientUPID:i.UPID,_include:"MedicationStatement:medication",...O(t)}),s=ge(n,t,!1);return{bundle:n.bundle,medications:s}}catch(n){throw V("Failed fetching medications for patient",n)}}async function tt(r,i,e=[]){const[t={}]=e;try{const{bundle:n,resources:s}=await j("MedicationRequest",r,{patientUPID:i.UPID,...O(t)});return s.map(a=>new H(a,Q(n)))}catch(n){throw V("Failed fetching medication requests for patient",n)}}async function rt(r,i,e=[]){const[t={}]=e;try{const{bundle:n,resources:s}=await j("MedicationDispense",r,{patientUPID:i.UPID,...O(t),_include:["MedicationRequest:medication","MedicationDispense:performer"]});return s.map(a=>new Y(a,Q(n)))}catch(n){throw V("Failed fetching medication dispenses for patient",n)}}async function nt(r,i,e=[]){const[t]=e;if(!t)return[];try{const{bundle:n,resources:s}=await Se("MedicationStatement",r,{patientUPID:i.UPID,code:`${x}|${t}`});return s.map(a=>new S(a,Q(n)))}catch(n){throw V("Failed fetching medication statements for patient",n)}}async function it(r,i,e=[]){const[t={}]=e;try{const n=ue.timeMetric("req.active_medications"),s=await Ne("MedicationStatement",r,"ActiveMedications",{patientUPID:i.UPID,_include:"MedicationStatement:medication",...O(t)}),a=ge(s,t,!0);return n(),{bundle:s.bundle,medications:a}}catch(n){throw V("Failed fetching medications for patient",n)}}function st(r,i){const e=Ie(i);return r.filter(t=>A(t,e)!==void 0)}function at(r,i){const e=r.filter(n=>!i.some(s=>s.rxNorm===n.rxNorm));return{builderMedications:i.map(n=>{var c,l;const s=L(p=>p.rxNorm===n.rxNorm,r);if(!s)return n;const a=z(n.resource),u=[ee,se,te,re,ne,ie];a.extension=(c=s.resource.extension)==null?void 0:c.filter(p=>u.includes(p.url));const o=z(L({url:W},s.resource.extension));return o&&(o.url=J,(l=a.extension)==null||l.push(o)),new S(a,n.includedResources,n.revIncludes)}),otherProviderMedications:e}}function he(r){const i=r?new S(r).aggregatedFrom:[],e=C(T("reference"),je("/"),ce),t=C(Qe(T("type")),$e(F(e)))(i);return D(De,[(r==null?void 0:r.id)||"empty"],q(async(n,s)=>{try{if(!r)return{includedResources:{},medications:[]};const[a,u,o,c]=await Promise.all([w("MedicationStatement",n,s.UPID,t.MedicationStatement),w("MedicationAdministration",n,s.UPID,t.MedicationAdministration),w("MedicationRequest",n,s.UPID,t.MedicationRequest,["MedicationRequest:requester"]),w("MedicationDispense",n,s.UPID,t.MedicationDispense,["MedicationDispense:performer","MedicationDispense:prescription"])]),l=ae(h([a.bundle,u.bundle,o.bundle,c.bundle])),p=h([...a.resources,...u.resources,...o.resources,...c.resources]).map(f=>new ye(f,l));return{medications:ze(He(p,(f,y)=>f.date===y.date&&f.resource.resourceType===y.resource.resourceType),"date","desc",!0),includedResources:l}}catch(a){throw new Error(`Failed fetching medication history for medication ${r==null?void 0:r.id}: ${a}`)}},"req.medication_history"))}function ut(r){const[i,e]=P.useState(),t=he(r);return P.useEffect(()=>{const{includedResources:n={},medications:s=[]}=t.data||{};if(i===void 0&&s.length){const a=C(F(T("resource")),Fe(Ue("resourceType","MedicationRequest")),ke(u=>Date.parse(u.authoredOn)),F(u=>new ye(u,n)),ce,T("prescriber"))(s);e(a||"")}},[i,t.data]),{isLoading:t.isFetching,lastPrescriber:i}}function w(r,i,e,t=[],n=[]){return t.length>0?qe(r,i,{_id:t.join(","),_include:[`${r}:patient`,`${r}:medication`,...n],"_include:iterate":"Patient:organization","patient.identifier":`${be}|${e}`}):{resources:[],bundle:void 0}}function U(r){var e;const i=he(r.resource);return{data:(e=i.data)==null?void 0:e.medications.map(ot),isLoading:i.isLoading}}function ot(r){if(r.resourceType==="MedicationStatement")return dt(r);if(r.resourceType==="MedicationRequest")return ct(r);if(r.resourceType==="MedicationDispense")return lt(r);if(r.resourceType==="MedicationAdministration")return pt(r);throw new Error(`Unknown medication resource type "${r.resourceType}"`)}function dt(r){var t,n;const i=r.resource,e=new S(i,r.includedResources);return{date:r.dateLocal,id:r.id,title:"Medication Reviewed",hideEmpty:!1,subtitle:(n=(t=e.patient)==null?void 0:t.organization)==null?void 0:n.name,details:[{label:"Status",value:Be(e.displayStatus)},{label:"Instructions",value:e.dosage}]}}function ct(r){const i=r.resource,{prescriber:e}=r,{name:t,address:n,telecom:s}=new H(i,r.includedResources).pharmacy,{numberOfRepeatsAllowed:a="",initialFill:u}=i.dispenseRequest||{},{value:o="",unit:c=""}=(u==null?void 0:u.quantity)||{};return{date:r.dateLocal,id:r.id,title:"Prescription Ordered",subtitle:e,hideEmpty:!1,details:[{label:"Quantity",value:[o,c].join(" ")},{label:"Refills Allowed",value:a},{label:"Instructions",value:r.dosage},{label:"Prescriber",value:e},{label:"Pharmacy",value:d.createElement(d.Fragment,null,t&&d.createElement("div",null,t),n&&d.createElement("div",null,n),s&&d.createElement("div",null,"T: ",s))}]}}function lt(r){const i=r.resource,e=new Y(i,r.includedResources),{quantityDisplay:t,supplied:n,performerDetails:s}=e,{name:a,address:u,telecom:o}=s;return{date:r.dateLocal,hideEmpty:!1,id:r.id,title:"Medication Filled",subtitle:M([t,n?`${n} supplied`:null]).join(", "),details:[{label:"Quantity",value:t},{label:"Days supply",value:n},{label:"Pharmacy",value:d.createElement(d.Fragment,null,a&&d.createElement("div",null,a),u&&d.createElement("div",null,u),o&&d.createElement("div",null,"T: ",o))}]}}function pt(r){const i=r.resource,e=new fe(i,r.includedResources);return{id:r.id,date:r.dateLocal,hideEmpty:!1,title:"Medication Administered",subtitle:M([e.dosageDisplay,e.dosageRoute]).join(", "),details:[{label:"Dosage",value:e.dosageDisplay},{label:"Route",value:e.dosageRoute},{label:"Start Date",value:e.effectivePeriod.start},{label:"End Date",value:e.effectivePeriod.end}]}}try{U.displayName="useMedicationHistoryEntries",U.__docgenInfo={description:"",displayName:"useMedicationHistoryEntries",props:{kind:{defaultValue:null,description:"",name:"kind",required:!0,type:{name:'"MedicationStatement"'}},builderPatientRxNormStatus:{defaultValue:null,description:"",name:"builderPatientRxNormStatus",required:!1,type:{name:"Record<string, string>"}},basedOn:{defaultValue:null,description:"",name:"basedOn",required:!0,type:{name:"string | undefined"}},category:{defaultValue:null,description:"",name:"category",required:!0,type:{name:"string"}},context:{defaultValue:null,description:"",name:"context",required:!0,type:{name:"string | undefined"}},dateAsserted:{defaultValue:null,description:"",name:"dateAsserted",required:!0,type:{name:"string | undefined"}},derivedFrom:{defaultValue:null,description:"",name:"derivedFrom",required:!0,type:{name:"string[]"}},aggregatedFrom:{defaultValue:null,description:"",name:"aggregatedFrom",required:!0,type:{name:"Reference[]"}},display:{defaultValue:null,description:"",name:"display",required:!0,type:{name:"string"}},dosage:{defaultValue:null,description:"",name:"dosage",required:!0,type:{name:"string | undefined"}},effectiveStart:{defaultValue:null,description:"",name:"effectiveStart",required:!0,type:{name:"string | undefined"}},identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string | undefined"}},informationSource:{defaultValue:null,description:"",name:"informationSource",required:!0,type:{name:"Reference | undefined"}},medicationReference:{defaultValue:null,description:"",name:"medicationReference",required:!0,type:{name:"string | undefined"}},notesDisplay:{defaultValue:null,description:"",name:"notesDisplay",required:!0,type:{name:"string[]"}},partOf:{defaultValue:null,description:"",name:"partOf",required:!0,type:{name:"string | undefined"}},patientStatus:{defaultValue:null,description:"",name:"patientStatus",required:!0,type:{name:"string"}},resourceTypeTitle:{defaultValue:null,description:"",name:"resourceTypeTitle",required:!0,type:{name:"string"}},rxNorm:{defaultValue:null,description:"",name:"rxNorm",required:!0,type:{name:"string | undefined"}},rxNormCodeableConcept:{defaultValue:null,description:'Get RxNorm coding with "display" defaulting to this Med-Statement label.',name:"rxNormCodeableConcept",required:!0,type:{name:"{ display: string; code?: string | undefined; _code?: Element | undefined; _display?: Element | undefined; system?: string | undefined; _system?: Element | undefined; ... 6 more ...; _id?: Element | undefined; }"}},reason:{defaultValue:null,description:"",name:"reason",required:!0,type:{name:"string | undefined"}},reasonReference:{defaultValue:null,description:"",name:"reasonReference",required:!0,type:{name:"Reference[] | undefined"}},isInactive:{defaultValue:null,description:"",name:"isInactive",required:!0,type:{name:"boolean"}},status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"enum",value:[{value:'"active"'},{value:'"entered-in-error"'},{value:'"unknown"'},{value:'"completed"'},{value:'"intended"'},{value:'"stopped"'},{value:'"on-hold"'},{value:'"not-taken"'}]}},displayStatus:{defaultValue:null,description:"",name:"displayStatus",required:!0,type:{name:"string"}},statusReason:{defaultValue:null,description:"",name:"statusReason",required:!0,type:{name:"string | undefined"}},subject:{defaultValue:null,description:"",name:"subject",required:!0,type:{name:"Reference"}},subjectID:{defaultValue:null,description:"",name:"subjectID",required:!0,type:{name:"string"}},patient:{defaultValue:null,description:"",name:"patient",required:!0,type:{name:"PatientModel | undefined"}},lastFillDate:{defaultValue:null,description:"",name:"lastFillDate",required:!0,type:{name:"string | undefined"}},quantity:{defaultValue:null,description:"",name:"quantity",required:!0,type:{name:"string | undefined"}},daysSupply:{defaultValue:null,description:"",name:"daysSupply",required:!0,type:{name:"string | undefined"}},refills:{defaultValue:null,description:"",name:"refills",required:!0,type:{name:"string | undefined"}},lastPrescriber:{defaultValue:null,description:"",name:"lastPrescriber",required:!0,type:{name:"string | undefined"}},lastPrescribedDate:{defaultValue:null,description:"",name:"lastPrescribedDate",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"MedicationStatement"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},key:{defaultValue:null,description:"",name:"key",required:!0,type:{name:"string"}},versionId:{defaultValue:null,description:"",name:"versionId",required:!0,type:{name:"string"}},isArchived:{defaultValue:null,description:"",name:"isArchived",required:!0,type:{name:"boolean"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},isEnriched:{defaultValue:null,description:"",name:"isEnriched",required:!0,type:{name:"() => boolean"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}const mt=()=>le({header:r=>r.display,getHistory:U,details:r=>[{label:"Status",value:r.displayStatus},{label:"Last Fill Date",value:r.lastFillDate},{label:"Quantity",value:r.quantity},{label:"Days Supply",value:r.daysSupply},{label:"Refills",value:r.refills},{label:"Instructions",value:r.dosage},{label:"Prescriber",value:d.createElement(ft,{medication:r})},{label:"Last Prescribed Date",value:r.lastPrescribedDate},...Ge("Note",r.notesDisplay)]});function ft({medication:r}){const{lastPrescriber:i,isLoading:e}=ut(r.resource);return e?d.createElement(Xe,{className:"ctw-h-3",iconClass:"!ctw-w-3 !ctw-h-3",message:""}):d.createElement("span",null,i||"n/a")}function yt(){return D(we,[{informationSourceNot:"Patient"}],q(et,"req.builder_medications"))}function gt(){return D(Ae,[{_revinclude:"Basic:subject"}],q(it,"req.active_medications"))}function kt(){return D(Pe,[{informationSourceNot:"Patient"}],q(tt,"req.medication_requests_common"))}function jt(){return D(Te,[{informationSourceNot:"Patient"}],q(rt,"req.medication_dispense_common"))}function ht(r){return D(Ve,[r],q(nt,"req.medication_statement"))}function Qt(){const[r,i]=P.useState([]),[e,t]=P.useState([]),n=gt(),s=yt();P.useEffect(()=>{var c,l;if((c=n.data)!=null&&c.bundle&&((l=s.data)!=null&&l.bundle)){const{medications:p,bundle:v}=n.data,{medications:f}=s.data,y=oe(v),_=ae([n.data.bundle,s.data.bundle]),N=at(p.map(I=>new S(I,_,y.get(I.id??""))),f.map(I=>new S(I,_,y.get(I.id??""))));i(N.builderMedications),t(N.otherProviderMedications)}},[n.data,s.data]);const a=s.isLoading||n.isLoading,u=s.isFetching||n.isFetching,o=s.isError||n.isError;return{isFetching:u,isLoading:a,isError:o,builderMedications:r,otherProviderMedications:e}}const X=({className:r,items:i,limit:e,total:t})=>d.createElement("div",{className:r},i.slice(0,e).map((n,s)=>d.createElement("div",{key:n+s},d.createElement("div",null,n))),t>e&&d.createElement("div",{className:"ctw-font-medium"},"+ ",t-e," more"));try{X.displayName="SimpleMoreList",X.__docgenInfo={description:"",displayName:"SimpleMoreList",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"string[]"}},limit:{defaultValue:null,description:"",name:"limit",required:!0,type:{name:"number"}},total:{defaultValue:null,description:"",name:"total",required:!0,type:{name:"number"}}}}}catch{}function $t(){return le({header:r=>`${r.periodStart} - ${r.periodEnd}`,subHeader:r=>r.typeDisplay,getSourceDocument:!0,details:k})}const k=r=>{var i;return[{label:"Period Start",value:r.periodStart},{label:"Period End",value:r.periodEnd},{label:"Status",value:de(r.status)},{label:"Class",value:r.class},{label:"Type",value:r.typeCodings.length?d.createElement(Ke,{codings:r.typeCodings}):void 0},{label:"Location",value:r.location},{label:"Participants",value:r.participants},{label:"Reason",value:r.reason},{label:"Diagnosis",value:(i=r.diagnoses)==null?void 0:i.join(", ")},{label:"Discharge Disposition",value:r.dischargeDisposition}]};function Bt(){const{openDrawer:r}=Oe();return i=>{r({component:e=>d.createElement(Rt,{medicationEventModel:i,...e})})}}const Rt=r=>{var n;const{medicationEventModel:i}=r,e=ht(i.rxNorm),t=mt();return(n=e.data)!=null&&n.length&&t(e.data[0]),null};try{k.displayName="encounterData",k.__docgenInfo={description:"",displayName:"encounterData",props:{kind:{defaultValue:null,description:"",name:"kind",required:!0,type:{name:'"Encounter"'}},class:{defaultValue:null,description:"",name:"class",required:!0,type:{name:"string | undefined"}},diagnoses:{defaultValue:null,description:"",name:"diagnoses",required:!0,type:{name:"string[] | undefined"}},dischargeDisposition:{defaultValue:null,description:"",name:"dischargeDisposition",required:!0,type:{name:"string | undefined"}},location:{defaultValue:null,description:"",name:"location",required:!0,type:{name:"string | undefined"}},participants:{defaultValue:null,description:"",name:"participants",required:!0,type:{name:"string | undefined"}},periodEnd:{defaultValue:null,description:"",name:"periodEnd",required:!0,type:{name:"string | undefined"}},periodStart:{defaultValue:null,description:"",name:"periodStart",required:!0,type:{name:"string | undefined"}},reason:{defaultValue:null,description:"",name:"reason",required:!0,type:{name:"string | undefined"}},status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"enum",value:[{value:'"entered-in-error"'},{value:'"planned"'},{value:'"arrived"'},{value:'"triaged"'},{value:'"in-progress"'},{value:'"onleave"'},{value:'"finished"'},{value:'"cancelled"'},{value:'"unknown"'}]}},typeCodings:{defaultValue:null,description:"",name:"typeCodings",required:!0,type:{name:"Coding[]"}},typeDisplay:{defaultValue:null,description:"",name:"typeDisplay",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"Encounter"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},key:{defaultValue:null,description:"",name:"key",required:!0,type:{name:"string"}},versionId:{defaultValue:null,description:"",name:"versionId",required:!0,type:{name:"string"}},isArchived:{defaultValue:null,description:"",name:"isArchived",required:!0,type:{name:"boolean"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},resourceTypeTitle:{defaultValue:null,description:"",name:"resourceTypeTitle",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},isEnriched:{defaultValue:null,description:"",name:"isEnriched",required:!0,type:{name:"() => boolean"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}class vt extends b{constructor(){super(...arguments);g(this,"kind","Encounter")}get class(){const{display:e,code:t}=this.resource.class;return e??t!=="UNK"?t:void 0}get diagnoses(){var e;return M(G((e=this.resource.diagnosis)==null?void 0:e.map(t=>t.condition.display)))}get dischargeDisposition(){var e;return E((e=this.resource.hospitalization)==null?void 0:e.dischargeDisposition)}get location(){var t;const e=M((t=this.resource.location)==null?void 0:t.map(n=>n.location.display));return e.length?e.join(", "):void 0}get participants(){var t;const e=M(G((t=this.resource.participant)==null?void 0:t.map(n=>{var s;return(s=n.individual)==null?void 0:s.display})));return e.length?e.join(", "):void 0}get periodEnd(){var e;return m((e=this.resource.period)==null?void 0:e.end)}get periodStart(){var e;return m((e=this.resource.period)==null?void 0:e.start)}get reason(){var t;const e=M((t=this.resource.reasonCode)==null?void 0:t.map(n=>E(n)));return e.length?e.join(", "):void 0}get status(){return this.resource.status}get typeCodings(){var e;return M(Ye((e=this.resource.type)==null?void 0:e.map(t=>t.coding)))}get typeDisplay(){var v,f,y,_;const{display:e,system:t}=this.resource.class,n=(this.resource.class.code??"").toUpperCase(),s=((y=(f=(v=this.resource.type)==null?void 0:v[0])==null?void 0:f.coding)==null?void 0:y[0])??{},{text:a}=((_=this.resource.type)==null?void 0:_[0])??{},u=(s.code??"").toUpperCase(),o=We(t),c=o?u:n;let l=o?a:e;const p={AMB:"Ambulatory",IMP:"Inpatient",EMER:"Emergency"};if(c&&Object.keys(p).includes(c)){const N=p[c];if(!l)return N;l.toLowerCase()!==N.toLowerCase()&&(l+=`, ${p[c]}`)}return l??"Unknown"}}function Yt(){return D(xe,[],q(async(r,i)=>{try{const{bundle:e,resources:t}=await j("Encounter",r,{patientUPID:i.UPID});return Mt(t,e)}catch(e){throw ue.logError(e,"Failed fetching timeline information for patient"),new Error(`Failed fetching timeline information for patient: ${e}`)}},"req.patient_encounters"))}function Mt(r,i){const e=oe(i);return r.map(t=>new vt(t,void 0,e.get(t.id??"")))}export{vt as E,Y as M,X as S,H as a,kt as b,jt as c,$t as d,Bt as e,mt as f,Qt as g,S as h,Yt as u};
