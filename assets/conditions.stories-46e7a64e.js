import{R as t,r as c}from"./index-6f814c40.js";import{w as p,u as d,a as me,b as E,e as R}from"./index-f5b5f689.js";import{c as ue}from"./index-74f03c09.js";import{b as Ne,D as ke,c as _e,w as pe,g as Ie,e as Pe,u as Me,d as qe,f as De,h as Fe,i as Oe,T as Ve,j as Le,k as We,m as ze,n as Q,o as je,C as Ue,a as Ge,S as $e}from"./patient-allergies-2042f131.js";import{u as Ye,c as _,t as Ze,C as Je,M as Ke,o as Xe,a as Qe,g as et,b as ee,f as tt,s as we,d as nt,p as ot,e as te}from"./requests-dd22b64c.js";import{T as at,f as it}from"./table-7a0d2d89.js";import{P as st}from"./patient-history-request-drawer-1b395442.js";import"./_baseToString-5e23e5e6.js";import"./_baseClone-59dfd81b.js";import{d as rt}from"./sortBy-7530ff7d.js";import"./_equalByTag-2573c09c.js";import"./_baseForOwn-0b302854.js";import"./_createSet-00935424.js";import{h as ct}from"./request-47bfd586.js";import"./_commonjsHelpers-042e6b4d.js";import"./isEqual-1a694167.js";import"./_baseIsEqual-4482d138.js";import"./uniq-38208ea9.js";import"./_baseUniq-701deb29.js";import"./index-63320c34.js";import"./index-356e4a49.js";import"./drawer-39fcad7e.js";import"./index-6de6b113.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./mapValues-3edfa6db.js";import"./action-list-ada7e7df.js";import"./isPlainObject-d68c8411.js";import"./_basePickBy-d4bc7435.js";import"./data-list-254aa0b0.js";import"./extends-298b405d.js";import"./spinner-66aa4ba7.js";import"./isString-45b38206.js";import"./debounce-c94122dc.js";import"./toNumber-4334224f.js";import"./modal-ccda-acd4c415.js";import"./coding-list-1d7c950f.js";function O({className:n}){return t.createElement("div",{className:ue("ctw-conditions",n)},t.createElement("div",{className:"ctw-heading-container"},t.createElement("div",{className:"ctw-title"},"Conditions")),t.createElement("div",{className:"ctw-p-5"},t.createElement(Ne,{header:"Conditions Unavailable"},t.createElement("div",null,"We are unable to access Condition information for this patient."),t.createElement("div",null,"Contact your system administrator or customer service for assistance."))))}try{O.displayName="ConditionsNoPatient",O.__docgenInfo={description:"",displayName:"ConditionsNoPatient",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}function T({className:n,conditions:e,rowMenuActions:a,hideMenu:o,sort:l={columnTitle:"Last Recorded",dir:"desc"},onSort:u,...g}){const s=[{title:"Condition",dataIndex:"display",widthPercent:40,minWidth:320,sortIndices:[{index:"display"},{index:"recorded",dir:"desc"}]},{title:"Category",dataIndex:"ccsGrouping",widthPercent:25,minWidth:192,sortIndices:[{index:"ccsGrouping"},{index:"display",dir:"asc"}]},{title:"Status",render:r=>t.createElement("div",{className:"ctw-capitalize"},t.createElement("div",{className:"ctw-text-content-black"},r.clinicalStatus),t.createElement("div",null,r.isArchived?"Archived":r.verificationStatus)),widthPercent:17.5,minWidth:128,sortIndices:[{index:"clinicalStatus"},{index:"verificationStatus"},{index:"recorded",dir:"desc"}]},{title:"Last Recorded",dataIndex:"recordedDate",widthPercent:17.5,minWidth:132,sortIndices:[{index:"recorded"},{index:"display",dir:"asc"}]}];return o||s.push({className:"ctw-table-action-column",render:r=>t.createElement(ke,{menuItems:a(r),telemetryNamespace:"ConditionsTableBase"},t.createElement(_e,{className:"ctw-w-5"}))}),t.createElement(at,{className:n,records:e,columns:s,sort:l,onSort:u,...g})}try{T.displayName="ConditionsTableBase",T.__docgenInfo={description:"",displayName:"ConditionsTableBase",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | (string & Mapping) | (string & ArgumentArray)"}},conditions:{defaultValue:null,description:"",name:"conditions",required:!0,type:{name:"ConditionModel[]"}},rowMenuActions:{defaultValue:null,description:"",name:"rowMenuActions",required:!0,type:{name:"(condition: ConditionModel) => MenuItem[]"}},hideMenu:{defaultValue:null,description:"",name:"hideMenu",required:!0,type:{name:"boolean"}},handleRowClick:{defaultValue:null,description:"",name:"handleRowClick",required:!1,type:{name:"((record: ConditionModel) => void)"}},RowActions:{defaultValue:null,description:"",name:"RowActions",required:!1,type:{name:"ComponentType<{ record: ConditionModel; }>"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}},emptyMessage:{defaultValue:null,description:"Displayed when we have 0 records.",name:"emptyMessage",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},showTableHead:{defaultValue:null,description:"",name:"showTableHead",required:!1,type:{name:"boolean"}},stacked:{defaultValue:null,description:"",name:"stacked",required:!1,type:{name:"boolean"}},sort:{defaultValue:{value:'{ columnTitle: "Last Recorded", dir: "desc" }'},description:"",name:"sort",required:!1,type:{name:"TableSort"}},onSort:{defaultValue:null,description:"",name:"onSort",required:!1,type:{name:"((sort: TableSort) => void)"}},hidePagination:{defaultValue:null,description:"",name:"hidePagination",required:!1,type:{name:"boolean"}}}}}catch{}const V=pe(({onClick:n})=>t.createElement("div",{className:"ctw-flex ctw-justify-center ctw-space-x-2 ctw-border ctw-border-solid ctw-border-divider-light ctw-p-5","data-zus-telemetry-namespace":"PatientHistoryMessage"},t.createElement("div",{className:"ctw-flex ctw-justify-center ctw-text-icon-default"},"Retrieve patient clinical history."),t.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link",onClick:n,"data-zus-telemetry-click":"Request records"},"Request Records")),"PatientHistoryMessage");try{V.displayName="PatientHistoryMessage",V.__docgenInfo={description:"",displayName:"PatientHistoryMessage",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLButtonElement>"}}}}}catch{}async function dt(n,e){const a=`${Ie(n.env)}/patient-history/messages?patient-id=${e}`;try{const l=await(await ct(a,{headers:{Authorization:`Bearer ${n.authToken}`,...n.contextBuilderId&&{"Zus-Account":n.contextBuilderId}}})).json();return Object.values(l.data)}catch(o){throw Pe("Failed fetching patient refresh history messages",o)}}async function lt(n,e){const a=await dt(n,e);if(a.length===0)return;const o=it(a,{_messages:[{status:"done"}]});return{lastRetrievedAt:o==null?void 0:o._createdAt,status:a[0].status,dateCreated:a[0]._createdAt}}const mt="There are no conditions in this patient's record.",ut="There are no conditions available.",ne="There was an error fetching conditions for this patient. Refresh the page or contact your organization's technical support if this issue persists.",L=pe(({className:n,readOnly:e=!1})=>{const a=c.useRef(null),o=Me(a),[l,u]=c.useState(!1),[g,s]=c.useState(!1),r=Ye(),[ye,A]=c.useState(!1),[ve,z]=c.useState([]),[Re,H]=c.useState([]),[B,fe]=c.useState(!1),[j,U]=c.useState("Add"),[he,S]=c.useState(_),[ge,x]=c.useState(),[h,G]=c.useState(),m=qe(),w=De(),C=Fe(),{getRequestContext:N}=Oe(),[$,Y]=c.useState(),[k,Z]=c.useState(),[pt,Ce]=c.useState(),Ee=w.isError?ne:mt,be=C.isError?ne:ut,Be=i=>{m.data&&(u(!0),U("Edit"),S(Qe),x(et({condition:i})),G(i))},Te=i=>{s(!0),G(i)},Ae=i=>{const y=ze(i.resource);m.data&&(S(_),u(!0),U("Add"),x(ee({condition:new Q(y)})))},J=()=>{if(!m.data)return;const i=je(m.data.id);u(!0),S(_),x(ee({condition:new Q(i)}))},He=t.createElement("button",{className:"ctw-btn-primary",type:"button",onClick:J,"data-zus-telemetry-click":"Add new condition (Empty table)"},"Add Condition"),K=k||C.data&&C.data.length>0,Se=async i=>{const y=await N(),v=await lt(y,i);Z(!!(v!=null&&v.lastRetrievedAt)),Ce(v)};return c.useEffect(()=>{var y;async function i(){const v=w.data,X=C.data;v&&(z(v.filter(xe=>xe.active||B)),H(X?tt(X,v,B):[])),w.error&&(z([]),H([]))}i(),(y=m.data)!=null&&y.id&&k===void 0&&Se(m.data.id)},[B,m.data,w.data,C.data,k,w.error]),m.isError?t.createElement(O,{className:n}):t.createElement("div",{ref:a,"data-zus-telemetry-namespace":"Conditions",className:ue("ctw-conditions",n,{"ctw-conditions-stacked":o.sm})},!e&&t.createElement("div",{className:"ctw-conditions-heading-container"},t.createElement("div",{className:"ctw-title"},"Conditions"),t.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link","data-zus-telemetry-click":"Add new condition",onClick:J},"+ Add Condition")),t.createElement("div",{className:"ctw-conditions-body-container"},t.createElement("div",{className:"ctw-space-y-3"},t.createElement("div",{className:"ctw-conditions-title-container"},t.createElement("div",{className:"ctw-title"},"Patient Record"),t.createElement(Ve,{onFormChange:()=>fe(!B),toggleProps:{name:"conditions",text:"Include Inactive"}})),t.createElement(T,{stacked:o.sm,conditions:ve,isLoading:w.isLoading,hideMenu:e,sort:$,onSort:i=>Y(i),emptyMessage:t.createElement(t.Fragment,null,t.createElement("div",null,Ee),!w.isError&&!e&&t.createElement("div",{className:"ctw-mt-5"},He)),rowMenuActions:i=>[{name:"Edit",action:async()=>{Be(i)}},{name:"View History",action:async()=>{r({condition:i,readOnly:e})}},{name:"Delete",className:"dangerous",action:async()=>{Te(i)}}]})),t.createElement("div",{className:"ctw-space-y-3"},t.createElement("div",{className:"ctw-conditions-title-container"},t.createElement("div",{className:"ctw-title"},"Other Provider Records"),K&&t.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link",onClick:()=>A(!0),"data-zus-telemetry-click":"Request records"},"Request Records")),K?t.createElement(T,{className:"ctw-conditions-not-reviewed",stacked:o.sm,conditions:Re,sort:$,onSort:i=>Y(i),isLoading:C.isLoading||w.isLoading,hideMenu:e,emptyMessage:be,rowMenuActions:i=>[{name:"Add",action:async()=>{Ae(i)}},{name:"View History",action:async()=>{r({condition:i,readOnly:!0})}},{name:i.isArchived?"Un-Archive":"Archive",action:async()=>{const y=await N();await Ze(i,y)}}]}):t.createElement(V,{onClick:()=>A(!0)}))),m.data&&t.createElement(Le,{title:`${j} Condition`,header:j==="Edit"&&h&&t.createElement(Je,{condition:h}),action:rt(We)(h,m.data.id),data:ge,schema:he,isOpen:l,onClose:()=>u(!1)}),m.data&&t.createElement(st,{header:t.createElement("div",{className:"ctw-pt-0 ctw-text-base"},"Request patient clinical history from 70K+ providers across the nation. No changes will be made to your patient record."),patient:m.data,isOpen:ye,onClose:()=>A(!1),setClinicalHistoryExists:Z}),h&&m.data&&t.createElement(Ke,{resource:h,resourceName:h.display||"unnamed condition",onClose:()=>s(!1),isOpen:g,onDelete:async()=>{const i=await N();await Xe(h.resource,i)}}))},"Conditions");try{L.displayName="Conditions",L.__docgenInfo={description:"",displayName:"Conditions",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}}}}}catch{}function W(n){const e=p(n),a=p(e.getByRole("dialog"));return{conditionSearch:o=>d.type(a.getByPlaceholderText("Type to search"),o),selectCondition:async o=>d.click(await a.findByRole("option",{name:o})),status:o=>d.selectOptions(a.getByTestId("form-field-status"),o),onset:o=>d.type(a.getByTestId("form-field-onset"),o),abatement:o=>d.type(a.getByTestId("form-field-abatement"),o),note:o=>d.type(a.getByTestId("form-field-note"),o),cancel:()=>d.click(a.getByRole("button",{name:"Cancel"})),save:async()=>{d.click(a.getByRole("button",{name:"Save"})),await me(()=>e.queryByRole("dialog"))}}}function oe(n,e){const a=p(n),o=p(e);async function l(s){d.click(g(s).getByRole("button",{name:/dropdown/i})),await a.findAllByRole("menuitem")}function u(s){d.click(a.getByRole("menuitem",{name:s}))}function g(s){const r=o.getAllByRole("rowgroup")[1];return p(p(r).queryAllByRole("row")[s])}return{table:o,toHaveRowCount:async s=>{const r=o.getAllByRole("rowgroup")[1];s===0?await E(()=>R(r).toBeFalsy()):await E(()=>R(p(r).queryAllByRole("row")).toHaveLength(s))},toHaveRowWithText:(s,r)=>{g(s).getByText(r)},add:async s=>{await l(s),u("Add")},delete:async s=>{await l(s),u("Delete"),d.click(await a.findByRole("button",{name:/remove/i})),await me(()=>a.queryByRole("dialog"))},edit:async s=>{await l(s),u("Edit")},viewHistory:async s=>{await l(s),u("View History")}}}async function b(n){const e=p(n);await E(()=>R(e.queryAllByRole("table")).toHaveLength(2));const a=e.queryAllByRole("table"),o=oe(n,a[0]),l=oe(n,a[1]);return await o.table.findAllByText("active"),await l.table.findAllByText("active"),{clickAddCondition:()=>d.click(e.getByRole("button",{name:"+ Add Condition"})),toggleInactive:()=>d.click(e.getByLabelText("Include Inactive")),patientRecord:o,otherProvider:l}}const Jt={component:L,tags:["autodocs"],argTypes:{className:{options:["Blank","Fixed Width"],control:"select",mapping:{Blank:"","Fixed Width":"ctw-m-auto ctw-max-w-[600px]"}}},args:{className:"Blank",readOnly:!1},decorators:[(n,{args:e})=>t.createElement(Ue,{env:"dev",authToken:"dummy-token",builderId:"b123"},t.createElement(Ge,{patientID:"u12345",systemURL:$e},t.createElement(n,{args:e})))]},f={...we({otherConditions:nt,patientConditions:ot})},I={...we({otherConditions:te,patientConditions:te})},P={...f,play:async({canvasElement:n})=>{const e=await b(n);await e.patientRecord.toHaveRowCount(2);const a="Heart failure (disorder)";e.clickAddCondition();const o=W(n);o.conditionSearch("heart"),await o.selectCondition(a),o.status("Active"),o.onset("2020-02-14"),await o.save(),await e.patientRecord.toHaveRowCount(3),R(await e.patientRecord.table.findByText(a)).toBeTruthy()}},M={...f,play:async({canvasElement:n})=>{const e=await b(n);await e.patientRecord.toHaveRowCount(2),await e.otherProvider.add(2),await W(n).save(),await e.patientRecord.toHaveRowCount(3),R(await e.patientRecord.table.findByText(/iron deficiency/i)).toBeTruthy()}},q={...f,play:async({canvasElement:n})=>{const e=await b(n);await e.patientRecord.toHaveRowCount(2),await e.patientRecord.edit(0);const a=W(n);a.note("hello world"),await a.save(),e.patientRecord.toHaveRowWithText(0,/confirmed/i)}},D={...f,play:async({canvasElement:n})=>{const e=await b(n);await e.patientRecord.toHaveRowCount(2),await e.patientRecord.delete(0),await e.patientRecord.toHaveRowCount(1),e.toggleInactive(),await e.patientRecord.toHaveRowCount(3),e.patientRecord.toHaveRowWithText(1,/entered-in-error/i),e.toggleInactive(),await e.patientRecord.toHaveRowCount(1)}},F={...f,play:async({canvasElement:n})=>{const e=await b(n);await e.patientRecord.toHaveRowCount(2),await e.patientRecord.viewHistory(0);const a=p(n);await E(()=>R(a.queryAllByRole("dialog")).toHaveLength(1));const o=p(a.getByRole("dialog"));R(await o.findByText(/generalized anxiety disorder/i)).toBeTruthy(),await E(()=>R(o.getAllByRole("button",{name:/details/i})).toHaveLength(3)),d.click(o.getAllByRole("button",{name:/close/i})[0])}};var ae;f.parameters={...f.parameters,storySource:{source:`{
  ...setupConditionMocks({
    otherConditions,
    patientConditions
  })
}`,...(ae=f.parameters)==null?void 0:ae.storySource}};var ie;I.parameters={...I.parameters,storySource:{source:`{
  ...setupConditionMocks({
    otherConditions: emptyConditions,
    patientConditions: emptyConditions
  })
}`,...(ie=I.parameters)==null?void 0:ie.storySource}};var se;P.parameters={...P.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    const newCondition = "Heart failure (disorder)";
    conditions.clickAddCondition();
    const conditionForm = conditionFormDrawer(canvasElement);
    conditionForm.conditionSearch("heart");
    await conditionForm.selectCondition(newCondition);
    conditionForm.status("Active");
    conditionForm.onset("2020-02-14");
    await conditionForm.save();
    await conditions.patientRecord.toHaveRowCount(3);
    expect(await conditions.patientRecord.table.findByText(newCondition)).toBeTruthy();
  }
}`,...(se=P.parameters)==null?void 0:se.storySource}};var re;M.parameters={...M.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.otherProvider.add(2);
    const conditionForm = conditionFormDrawer(canvasElement);
    await conditionForm.save();
    await conditions.patientRecord.toHaveRowCount(3);
    expect(await conditions.patientRecord.table.findByText(/iron deficiency/i)).toBeTruthy();
  }
}`,...(re=M.parameters)==null?void 0:re.storySource}};var ce;q.parameters={...q.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.edit(0);
    const conditionForm = conditionFormDrawer(canvasElement);
    conditionForm.note("hello world");
    await conditionForm.save();
    conditions.patientRecord.toHaveRowWithText(0, /confirmed/i);
  }
}`,...(ce=q.parameters)==null?void 0:ce.storySource}};var de;D.parameters={...D.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.delete(0);
    await conditions.patientRecord.toHaveRowCount(1);
    conditions.toggleInactive();
    await conditions.patientRecord.toHaveRowCount(3);
    conditions.patientRecord.toHaveRowWithText(1, /entered-in-error/i);
    conditions.toggleInactive();
    await conditions.patientRecord.toHaveRowCount(1);
  }
}`,...(de=D.parameters)==null?void 0:de.storySource}};var le;F.parameters={...F.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.viewHistory(0);
    const canvas = within(canvasElement);
    await waitFor(() => expect(canvas.queryAllByRole("dialog")).toHaveLength(1));
    const drawer = within(canvas.getByRole("dialog"));
    expect(await drawer.findByText(/generalized anxiety disorder/i)).toBeTruthy();
    await waitFor(() => expect(drawer.getAllByRole("button", {
      name: /details/i
    })).toHaveLength(3));
    userEvent.click(drawer.getAllByRole("button", {
      name: /close/i
    })[0]);
  }
}`,...(le=F.parameters)==null?void 0:le.storySource}};const Kt=["Basic","Empty","TestAdd","TestAddOther","TestEdit","TestDelete","TestViewHistory"];export{f as Basic,I as Empty,P as TestAdd,M as TestAddOther,D as TestDelete,q as TestEdit,F as TestViewHistory,Kt as __namedExportsOrder,Jt as default};
//# sourceMappingURL=conditions.stories-46e7a64e.js.map
