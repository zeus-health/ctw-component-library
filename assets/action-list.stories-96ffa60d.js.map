{"version":3,"file":"action-list.stories-96ffa60d.js","sources":["../../src/components/core/action-list/action-list.tsx","../../src/components/core/action-list/action-list.stories.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport { isFunction } from \"@/utils/nodash/fp\";\nimport \"./action-list.scss\";\n\nexport type MinActionItem = {\n  complete: boolean;\n  id: string;\n  subtitle?: string;\n  title: string;\n};\n\nexport type ActionItemProps<T extends MinActionItem> = {\n  actionText?: string;\n  activeClassName?: string;\n  className?: string;\n  item: T;\n  onAction?: (i: T) => void;\n  onRowClick?: (i: T) => void;\n  onSecondaryAction?: (i: T) => void;\n  secondaryActionText?: string;\n  onUndoAction?: (i: T) => void;\n  undoActionText?: string;\n};\n\nexport type ActionListProps<T extends MinActionItem> = {\n  items: T[];\n} & Omit<ActionItemProps<T>, \"item\">;\n\n/**\n * Displays a list of action items which reflect whether they are\n * completed or not. List items marked \"active\" will show a (primary)\n * colored border to the left and when hovered will present a button\n * to take action. Use the \"onAction\" handler to mark items as \"complete\".\n *\n * Optionally the opposite can be done for inactive items if an \"onUndoAction\"\n * handler is passed in, but that is not a requirement.\n */\nexport const ActionList = <T extends MinActionItem>({\n  items,\n  className,\n  ...itemProps\n}: ActionListProps<T>) => (\n  <ul\n    className={cx(\"ctw-action-list ctw-rounded-lg\", className, {\n      \"ctw-border-0\": items.length === 0,\n      \"ctw-bg-bg-lighter\": items.length > 0,\n    })}\n  >\n    {items.map((item) => (\n      <ActionListItem key={item.id} item={item} {...itemProps} />\n    ))}\n  </ul>\n);\n\nexport const ActionListItem = <T extends MinActionItem>({\n  item,\n  onRowClick,\n  onAction = () => {},\n  onSecondaryAction,\n  secondaryActionText,\n  actionText = \"Mark Complete\",\n  undoActionText = \"Undo\",\n  onUndoAction,\n  activeClassName = \"active\",\n}: ActionItemProps<T>) => (\n  <li\n    role=\"row\"\n    className={cx(\n      \"ctw-action-list-item\",\n      \"ctw-border-lighter ctw-flex ctw-cursor-pointer ctw-p-4\",\n      {\n        [activeClassName]: !item.complete,\n        undoable: isFunction(onUndoAction),\n      }\n    )}\n    onKeyDown={(event) => {\n      // Visible, non-intercomplete elements with click handlers must have at least 1 keyboard listener\n      if (event.key === \"Enter\") {\n        event.currentTarget.click();\n      }\n    }}\n    onClick={() => onRowClick?.(item)}\n  >\n    <div className=\"ctw-action-list-item-content ctw-flex-grow\">\n      <div className=\"ctw-font-semibold\">{item.title}</div>\n      {item.subtitle && <div className=\"ctw-font-light\">{item.subtitle}</div>}\n    </div>\n    <div className=\"ctw-action-list-item-action\">\n      {!item.complete && (\n        <button\n          type=\"button\"\n          className=\"ctw-btn-primary\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onAction(item);\n          }}\n        >\n          {actionText}\n        </button>\n      )}\n      {onSecondaryAction && secondaryActionText && (\n        <button\n          type=\"button\"\n          className=\"ctw-btn-primary ctw-ml-1\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onSecondaryAction(item);\n          }}\n        >\n          {secondaryActionText}\n        </button>\n      )}\n      {item.complete && !!onUndoAction && (\n        <button\n          type=\"button\"\n          className=\"ctw-btn-default\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onUndoAction(item);\n          }}\n        >\n          {undoActionText}\n        </button>\n      )}\n    </div>\n  </li>\n);\n","import type { Meta, StoryObj } from \"@storybook/react\";\nimport { ActionList, ActionListProps, MinActionItem } from \"@/components/core/action-list/action-list\";\ntype Props = ActionListProps<MinActionItem>;\nexport default ({\n  component: ActionList,\n  tags: [\"autodocs\"],\n  args: {\n    actionText: undefined,\n    activeClassName: undefined,\n    className: undefined,\n    items: [],\n    onAction: undefined,\n    onRowClick: undefined,\n    onUndoAction: undefined,\n    onSecondaryAction: undefined,\n    secondaryActionText: undefined,\n    undoActionText: undefined\n  }\n} as Meta<Props>);\nconst item = (id = \"\", title = \"\", subtitle = \"\", complete = false) => ({\n  id,\n  title,\n  subtitle,\n  complete\n});\nconst items: MinActionItem[] = [item(\"007\", \"Miralax Oral Product\", \"Dissolve 17g in 4â€“8oz liquid and drink once daily for up to 7 days.\"), item(\"123\", \"3 ML insulin glargine 100 UNT/ML Pen Injector [Lantus]\", \"Inject 3 ML with enclosed pen injector every morning.\"), item(\"insulin\", \"3 ML insulin aspart protamine, human 70 UNT/ML / insulin aspart, human 30 UNT/ML Pen Injector [NovoLog Mix] \", \"Inject 3 ML before meals. Quantity: 90 days\"), item(\"next\", \"triamcinolone acetonide 0.147 MG/ML Topical Spray\", \"Apply to affected area as needed for eczema exacerbation.\", true)];\nexport const Basic: StoryObj<Props> = {\n  args: {\n    items\n  }\n};\nexport const WithSecondaryAction: StoryObj<Props> = {\n  args: {\n    items,\n    secondaryActionText: \"Do Something Else\"\n  }\n};\nexport const WithoutUndo: StoryObj<Props> = {\n  args: {\n    items,\n    // Storybook will automatically add action callbacks so we have\n    // to explictily set it to undefined.\n    onUndoAction: undefined\n  }\n};\nexport const Empty: StoryObj<Props> = {\n  args: {\n    items: []\n  }\n};\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    items\\n  }\\n}\",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nWithSecondaryAction.parameters = {\n  ...WithSecondaryAction.parameters,\n  docs: {\n    ...WithSecondaryAction.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    items,\\n    secondaryActionText: \\\"Do Something Else\\\"\\n  }\\n}\",\n      ...WithSecondaryAction.parameters?.docs?.source\n    }\n  }\n};\nWithoutUndo.parameters = {\n  ...WithoutUndo.parameters,\n  docs: {\n    ...WithoutUndo.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    items,\\n    // Storybook will automatically add action callbacks so we have\\n    // to explictily set it to undefined.\\n    onUndoAction: undefined\\n  }\\n}\",\n      ...WithoutUndo.parameters?.docs?.source\n    }\n  }\n};\nEmpty.parameters = {\n  ...Empty.parameters,\n  docs: {\n    ...Empty.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    items: []\\n  }\\n}\",\n      ...Empty.parameters?.docs?.source\n    }\n  }\n};"],"names":["ActionList","items","className","itemProps","React","cx","item","ActionListItem","onRowClick","onAction","onSecondaryAction","secondaryActionText","actionText","undoActionText","onUndoAction","activeClassName","isFunction","event","actionList_stories","id","title","subtitle","complete","Basic","WithSecondaryAction","WithoutUndo","Empty","_a","_c","_b"],"mappings":"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"}