import{r as _}from"./index-6f814c40.js";import{g as Y,f as M,u as E}from"./patient-provider-a6365251.js";import{r as $}from"./medication-history-530a3cf5.js";import{Z as x,n as C,$ as D,a0 as b,a1 as I,a2 as N,F as L,a as d,c as a,M as o,a3 as P,a4 as R,a5 as y,a6 as j,a7 as Q,G,a8 as H,a9 as h,aa as q,ab as X,ac as V,w,e as A,T as g,Y as W,ad as K,s as z,ae as J}from"./patient-helper-0b747938.js";import"./_baseToString-ba0098b0.js";import{f as S,c as O,i as Z,o as ee}from"./sortBy-64fcb484.js";import"./_baseClone-0c3bfcab.js";import{c as B}from"./_basePickBy-a17ae44f.js";import"./sortBy-3860efd7.js";import"./_equalByTag-3aa7c076.js";import{b as te}from"./_baseForOwn-56487e0e.js";import{p as re}from"./pickBy-f8467f8e.js";import"./_createSet-3c80ad01.js";import{q as p}from"./request-5a1df4c1.js";import{u as se}from"./uniqWith-ade993ae.js";function ie(r){return r===void 0}var ne=ie,oe="Expected a function";function ae(r){if(typeof r!="function")throw new TypeError(oe);return function(){var e=arguments;switch(e.length){case 0:return!r.call(this);case 1:return!r.call(this,e[0]);case 2:return!r.call(this,e[0],e[1]);case 3:return!r.call(this,e[0],e[1],e[2])}return!r.apply(this,e)}}var ce=ae,ue=te,de=ce,le=re;function me(r,e){return le(r,de(ue(e)))}var he=me;function fe(r){return B(r)}const F=r=>{let e="",t="";switch(r){case"Active":e="confirmed",t="active";break;case"Inactive":e="confirmed",t="inactive";break;case"Pending":e="unconfirmed",t="active";break;case"Refuted":e="refuted",t="inactive";break;case"Entered In Error":e="entered-in-error";break;default:throw Error("status is should be of type ConditionStatus")}return he({verificationStatus:{coding:[{system:I,code:e}]},...t&&{clinicalStatus:{coding:[{system:N,code:t}]}}},ne)},Ue=async(r,e,t,s)=>{const i=await s(),n={resourceType:"Condition",id:t.id,recorder:await Y(i),...F(t.status),category:t.id&&r?r.resource.category:[{coding:[{system:x,code:"problem-list-item",display:"Problem List Item"}]}],code:t.id&&r?r.codings:{coding:[{system:t.condition.system,code:t.condition.code,display:t.condition.display}],text:t.condition.display},...t.abatement&&{abatementDateTime:C(t.abatement)},onsetDateTime:C(t.onset),recordedDate:C(new Date),subject:{type:"Patient",reference:`Patient/${e}`},note:t.note?[{text:t.note}]:void 0},c=await M(n,i);return await Promise.all([p.invalidateQueries([D]),p.invalidateQueries([b])]),c},ye={INF:{fullName:"Certain Infectious and Parasitic Diseases",shortName:"Infectious and Parasitic Diseases"},NEO:{fullName:"Neoplasms",shortName:"Neoplasms"},BLD:{fullName:"Diseases of the Blood and Blood Forming Organs and Certain Disorders Involving the Immune Mechanism",shortName:"Blood Diseases"},END:{fullName:"Endocrine, Nutritional and Metabolic Diseases",shortName:"Endocrine, Nutritional and Metabolic"},MBD:{fullName:"Mental, Behavioral and Neurodevelopmental Disorders",shortName:"Mental and Behavioral"},NVS:{fullName:"Diseases of the Nervous System",shortName:"Nervous System"},EYE:{fullName:"Diseases of the Eye and Adnexa",shortName:"Eye and Adnexa"},EAR:{fullName:"Diseases of the Ear and Mastoid Process",shortName:"Ear and Mastoid Process"},CIR:{fullName:"Diseases of the Circulatory System",shortName:"Circulatory System"},RSP:{fullName:"Diseases of the Respiratory System",shortName:"Respiratory System"},DIG:{fullName:"Diseases of the Digestive System",shortName:"Digestive System"},SKN:{fullName:"Diseases of the Skin and Subcutaneous Tissue",shortName:"Skin and Subcutaneous Tissue"},MUS:{fullName:"Diseases of the Musculoskeletal System and Connective Tissue",shortName:"Musculoskeletal System"},GEN:{fullName:"Diseases of the Genitourinary System",shortName:"Genitourinary System"},PRG:{fullName:"Pregnancy, Childbirth and the Puerperium",shortName:"Pregnancy & Childbirth"},PNL:{fullName:"Certain Conditions Originating in the Perinatal Period",shortName:"Perinatal Conditions"},MAL:{fullName:"Congenital Malformations, Deformations and Chromosomal Abnormalities",shortName:"Malformations and Chromosomal Abnormalities"},SYM:{fullName:"Symptoms, Signs and Abnormal Clinical and Laboratory Findings",shortName:"Clinical Findings"},INJ:{fullName:"Injury, Poisoning and Certain Other Consequences of External Causes",shortName:"External Causes Injury"},EXT:{fullName:"External Causes of Morbidity",shortName:"External Morbidity"},FAC:{fullName:"Factors Influencing Health Status and Contact with Health Services",shortName:"Health Status Influences"},XXX:{fullName:"Unacceptable principal diagnosis (inpatient data) or first-listed diagnosis (outpatient data)",shortName:"Unacceptable principal diagnosis"}};class ge extends L{get abatement(){var e,t,s;return this.resource.abatementAge?(e=this.resource.abatementAge.value)==null?void 0:e.toString():this.resource.abatementDateTime?d(this.resource.abatementDateTime):this.resource.abatementPeriod?d(this.resource.abatementPeriod.start):this.resource.abatementRange?d((s=(t=this.resource.abatementRange.low)==null?void 0:t.value)==null?void 0:s.toString()):this.resource.abatementString}get active(){var t;const e=S((t=this.resource.clinicalStatus)==null?void 0:t.coding,{system:N});return e!=null&&e.code?["active","recurrence","relapse"].includes(e.code):!1}get isArchived(){return this.getBasicResourceByAction("archive")!==void 0}get asserter(){var e;return(e=this.resource.asserter)==null?void 0:e.display}get bodySites(){var e;return((e=this.resource.bodySite)==null?void 0:e.map(t=>a(t)))||[]}get categories(){var e;return((e=this.resource.category)==null?void 0:e.map(t=>a(t)))||[]}get ccsChapter(){var t;const e=this.ccsChapterCode;if(e)return(t=ye[e])==null?void 0:t.shortName}get ccsChapterCode(){var e,t;return(t=(e=o(P,this.resource.code))==null?void 0:e.code)==null?void 0:t.slice(0,3)}get ccsGrouping(){var e;return(e=o(P,this.resource.code))==null?void 0:e.display}get clinicalStatus(){return a(this.resource.clinicalStatus)}get clinicalStatusCode(){var e,t;return(t=S((e=this.resource.clinicalStatus)==null?void 0:e.coding,{system:N}))==null?void 0:t.code}get codings(){return this.resource.code}get display(){var e;return((e=R(v,this.resource.code))==null?void 0:e.display)??a(this.resource.code)}get encounter(){var e;return(e=this.resource.encounter)==null?void 0:e.display}get evidences(){var e;return((e=this.resource.evidence)==null?void 0:e.map(t=>{var s;return a((s=t.code)==null?void 0:s[0])}))||[]}get icd10Code(){var e;return(e=o(y,this.resource.code))==null?void 0:e.code}get icd10System(){var e;return(e=o(y,this.resource.code))==null?void 0:e.system}get icd10Display(){var e;return(e=o(y,this.resource.code))==null?void 0:e.display}get isDeleted(){return this.verificationStatusCode==="entered-in-error"}get knownCodings(){const e=O(v.map(s=>s.checkForEnrichment?j(s.system,this.resource.code):o(s.system,this.resource.code)));return se(e,(s,i)=>s.system===i.system)}knownCodingsMatch(e){return Z(this.knownCodings,e.knownCodings,(t,s)=>t.code===s.code&&t.system===s.system).length>0}get notes(){var e;return((e=this.resource.note)==null?void 0:e.map(t=>t.text))||[]}get onset(){var e,t,s;return this.resource.onsetAge?(e=this.resource.onsetAge.value)==null?void 0:e.toString():this.resource.onsetDateTime?d(this.resource.onsetDateTime):this.resource.onsetPeriod?d(this.resource.onsetPeriod.start):this.resource.onsetRange?d((s=(t=this.resource.onsetRange.low)==null?void 0:t.value)==null?void 0:s.toString()):Q(this.resource.onsetString)}get patient(){const e=G("Patient",this.resource.contained,this.includedResources,this.resource.subject.reference);if(e)return new H(e,this.includedResources)}get preferredCoding(){return R(v,this.resource.code)}get recordedDate(){return d(this.resource.recordedDate)}get recorded(){return d(this.resource.recordedDate)}get recorder(){var e;return(e=this.resource.recorder)==null?void 0:e.display}get severity(){return a(this.resource.severity)}get snomedCoding(){return o(h,this.resource.code)}get snomedCode(){var e;return(e=o(h,this.resource.code))==null?void 0:e.code}get snomedDisplay(){var e;return(e=o(h,this.resource.code))==null?void 0:e.display}get snomedSystem(){var e;return(e=o(h,this.resource.code))==null?void 0:e.system}get stages(){var e;return((e=this.resource.stage)==null?void 0:e.map(t=>{const s=a(t.summary),i=a(t.type);return`Summary: ${s}, Type: ${i}`}))||[]}get displayStatus(){function e(i){switch(i){case"active":case"recurrence":case"relapse":return"Active";case"inactive":case"remission":case"resolved":return"Inactive";default:return""}}function t(i){switch(i){case"confirmed":return"confirmed";case"unconfirmed":case"provisional":case"differential":return"unconfirmed";case"refuted":return"refuted";case"entered-in-error":return"entered-in-error";default:return""}}const s=t(this.verificationStatusCode)+e(this.clinicalStatusCode).toLowerCase();if(this.isSummaryResource)return this.isArchived?"Dismissed":e(this.clinicalStatusCode)||"Unknown";switch(s){case"unconfirmedactive":return"Pending";case"unconfirmedinactive":case"refutedactive":return"Unknown";case"confirmedinactive":return"Inactive";case"confirmedactive":return"Active";case"refutedinactive":return"Refuted";case"entered-in-error":return"Entered in Error";default:return"Unknown"}}get subjectID(){var t;const[,e]=((t=this.resource.subject.reference)==null?void 0:t.split("/"))||[];return e||""}get verificationStatus(){return a(this.resource.verificationStatus)}get verificationStatusCode(){var e,t;return(t=S((e=this.resource.verificationStatus)==null?void 0:e.coding,{system:I}))==null?void 0:t.code}}const v=[{system:h,checkForEnrichment:!0},{system:y,checkForEnrichment:!0},{system:h},{system:y},{system:q},{system:X},{system:V}];function Ye(r){const e={resourceType:"Condition",subject:{type:"Patient",reference:`Patient/${r}`},...F("Active")};return fe(e)}function pe(){return E(D,[],w(async(r,e)=>{try{const{bundle:t,resources:s}=await A("Condition",r,{patientUPID:e.UPID});return U(k(s,t))}catch(t){throw g.logError(t,"Failed fetching condition information"),new Error(`Failed fetching condition information for patient: ${t}`)}},"req.patient_conditions"))}function Ce(){return E(b,[],w(async(r,e)=>{try{const{bundle:t,resources:s}=await K("Condition",r,{_revinclude:"Basic:subject",patientUPID:e.UPID});return U(k(s,t))}catch(t){throw g.logError(t,`Failed fetching condition information for patient: ${t}`),new Error(`Failed fetching condition information for patient: ${t}`)}},"req.other_provider_conditions"))}function $e(){const[r,e]=_.useState([]),t=pe(),s=Ce();_.useEffect(()=>{const l=t.data??[],m=Ne(s.data??[],l,!0);e(m)},[t.data,s.data]);const i=t.isLoading||s.isLoading,n=t.isError||s.isError,c=t.isFetching||s.isFetching;return{isLoading:i,isError:n,isFetching:c,data:r}}const Se=r=>({request:{method:"GET",url:`/Condition/${r}/_history`}}),ve=async(r,e)=>{const s=(await A("Condition",r,e)).resources.map(n=>n.id);if(!s.length)return;const i={resourceType:"Bundle",id:"bundle-history-conditions",type:"batch",entry:s.map(n=>Se(n))};return r.fhirClient.batch({body:{...i,type:"batch"}})};function xe(r){return E(J,[r],w(async(e,t)=>{if(r){if(r.verificationStatus==="entered-in-error")return{conditions:[],bundle:{resourceType:"Bundle",entry:[]}};try{const s=r.knownCodings.map(u=>`${u.system}|${u.code}`),i={patientUPID:t.UPID,_include:["Condition:patient","Condition:encounter"],"_include:iterate":"Patient:organization"};s.length>0?i.code=s.join(","):i._id=r.id;const{resources:n,bundle:c}=await z("Condition",e,i),l=await ve(e,i),m=[];return l&&l.entry&&l.entry.forEach(u=>{const{resource:f}=u;(f==null?void 0:f.resourceType)==="Bundle"&&f.entry&&m.push(...f.entry)}),{conditions:n.concat(...O(m.map(u=>u.resource))),bundle:c}}catch(s){throw g.logError(s,"Failed fetching condition history information for patient"),new Error(`Failed fetching condition history information for patient: ${s}`)}}},"req.condition_history"),!!r)}function k(r,e){const t=W(e);return r.map(s=>new ge(s,void 0,t.get(s.id??"")))}function U(r){return ee(r.filter(e=>{var t;return((t=e.resource.asserter)==null?void 0:t.type)!=="Patient"}),[e=>e.resource.recordedDate??"",e=>e.display],["desc"])}const Le=async(r,e)=>{const t=r.getBasicResourceByAction("archive")||r.getBasicResourceByAction("unarchive"),s=r.isArchived?"unarchive":"archive";await $(t,r,e,s),await p.invalidateQueries([b])},je=async(r,e)=>{if(!r.id)throw new Error("Tried to edit a resource that hasn't been created yet.");const t=B(r);if(t.verificationStatus={coding:[{code:"entered-in-error",system:I}]},delete t.clinicalStatus,(await M(t,e)).id)g.reportActionSuccess("delete_condition");else throw g.reportActionFailure("delete_condition"),new Error(`Failed to edit resource with id of ${r.id}`);await p.invalidateQueries([D])},Ne=(r,e,t)=>r.filter(s=>s.isArchived&&!t||["FAC","XXX"].includes(s.ccsChapterCode??"")?!1:!e.some(i=>{const n=s.resource.recordedDate,c=i.resource.recordedDate,l=s.knownCodingsMatch(i),m=i.verificationStatus==="entered-in-error",T=!n||c&&n<=c,u=s.clinicalStatus===i.clinicalStatus;return l&&!m&&(T||u)}));export{ge as C,Ye as a,pe as b,Ue as c,je as d,$e as e,fe as g,Le as t,xe as u};
