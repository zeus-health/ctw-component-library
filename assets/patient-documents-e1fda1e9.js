import{R as r,r as D}from"./index-6f814c40.js";import{c as h}from"./index-74f03c09.js";import{D as _,u as f}from"./resource-details-drawer-11a3e21b.js";import{V as y}from"./view-fhir-6266c459.js";import{w}from"./error-boundary-bffcb5f1.js";import{w as g,s as E,ag as P,u as C}from"./patient-helper-7499a61c.js";import{T as v}from"./table-781acd98.js";import"./_baseToString-4993715b.js";import{o as N}from"./sortBy-df4456c4.js";import"./_baseClone-25b1595e.js";import"./sortBy-d677d734.js";import"./_equalByTag-aaf39779.js";import"./_baseForOwn-d8306f34.js";import{i as R}from"./isEqual-b08f36b0.js";import"./_createSet-12ef9b81.js";import{u as b}from"./details-card-fe427194.js";import{u as T}from"./patient-provider-aad0ed3a.js";import{u as I}from"./use-breakpoints-4dbacb86.js";const s=(e=!1)=>{const a=[{widthPercent:20,minWidth:100,title:"Date Created",render:t=>r.createElement("div",{className:"group-hover:ctw-underline"},t.dateCreated)},{widthPercent:30,minWidth:200,title:"Title",render:t=>r.createElement("div",null,t.title)},{widthPercent:30,minWidth:200,title:"Managing Organization",render:t=>r.createElement("div",null,t.custodian)}];return e&&a.push({widthPercent:20,minWidth:150,render:t=>r.createElement(y,{name:"Document Resource",resource:t.resource})}),a};try{s.displayName="patientDocumentColumns",s.__docgenInfo={description:"",displayName:"patientDocumentColumns",props:{}}}catch{}const i=e=>{const a=e.map(n=>new _(n));return b(a,(n,o)=>R(m(n),m(o)))},m=e=>[e.dateCreated,e.custodian,e.title];try{i.displayName="applyDocumentFilters",i.__docgenInfo={description:"",displayName:"applyDocumentFilters",props:{}}}catch{}function W(){return T(P,[],g(async(e,a)=>{try{const{bundle:t,resources:n}=await E("DocumentReference",e,{patientUPID:a.UPID});return N(i(n),[o=>o.resource.content[0].attachment.creation||""],["desc"])}catch(t){throw new Error(`Failed fetching document information for patient: ${t}`)}},"req.patient_document"))}function k({className:e}){const a=D.useRef(null),t=I(a),n=W(),{featureFlags:o}=C(),u=f({header:c=>`${c.dateCreated} - ${c.title}`,details:M}),d=n.data??[],{isLoading:p}=n;return r.createElement("div",{ref:a,"data-zus-telemetry-namespace":"Documents",className:h("ctw-patient-documents ctw-scrollable-pass-through-height ctw-bg-white",e,{"ctw-stacked":t.sm})},r.createElement(v,{stacked:t.sm,isLoading:p,records:d,columns:s(o==null?void 0:o.enableViewFhirButton),handleRowClick:u}))}const l=w(k,"PatientDocuments"),M=e=>[{label:"status",value:e.status},{label:"docStatus",value:e.docStatus},{label:"Managing Organization",value:e.custodian},{label:"Section Display",value:e.sectionDisplays&&r.createElement("div",null,e.sectionDisplays.map((a,t)=>r.createElement("div",{key:a+t},a)))}];try{l.displayName="PatientDocuments",l.__docgenInfo={description:"",displayName:"PatientDocuments",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}export{l as P};
