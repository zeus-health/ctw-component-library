import{r as c,R as r}from"./index-6f814c40.js";import{u as B,a as N,M as k}from"./use-medications-de464378.js";import{b as Y,m as l,D as H}from"./urls-e3325bab.js";import{C as U}from"./combobox-field-881c664c.js";import{u as z,a2 as q,p as L,a8 as Q,q as $,al as K,aq as W}from"./patient-helper-e281ba6b.js";import{y as E,h as Z,g as G,i as A}from"./uniqBy-7bfbe8b6.js";import{i as X,a as J}from"./patient-provider-d8a611e8.js";import{M}from"./medication-4b27da28.js";import{q as ee}from"./request-5d5ec5f4.js";import{B as te}from"./badge-8ef10589.js";import{w as ae}from"./error-boundary-d1aa0574.js";import{u as ne}from"./requests-55b416ba.js";import{s as re}from"./sort-2ee927a0.js";const ie=async(e,a)=>{const{authToken:t,contextBuilderId:i}=e;return(await(await fetch(`${Y(e.env)}?display=${a}`,{headers:{Authorization:`Bearer ${t}`,...i&&{"Zus-Account":i}}})).json()).data},V=({defaultCoding:e,readonly:a,...t})=>{const{getRequestContext:i}=z(),[s,d]=c.useState(!1),[u,m]=c.useState(),o=async p=>{d(!0);const h=await i(),v=await ie(h,p);v&&m(v.map(g=>({value:g,label:g.display}))),d(!1)};return r.createElement(U,{options:u||[],isLoading:s,name:`${t.name}`,defaultSearchTerm:t.defaultValue,readonly:a,onSearchChange:o,defaultValue:e})};try{V.displayName="MedicationsAutoComplete",V.__docgenInfo={description:"",displayName:"MedicationsAutoComplete",props:{defaultCoding:{defaultValue:null,description:"",name:"defaultCoding",required:!1,type:{name:"Coding"}},readonly:{defaultValue:null,description:"",name:"readonly",required:!0,type:{name:"boolean | undefined"}}}}}catch{}const S=e=>[{label:"Subject",value:e.subjectID,field:"subjectID",hidden:!0},{label:"Date Asserted",value:q(new Date,"P"),field:"dateAsserted",hidden:!0},{label:"Medication",field:"medication",value:e.display,render:(a,t)=>r.createElement(V,{readonly:a,...t,defaultCoding:e.rxNormCodeableConcept})},{label:"Latest Status",value:E(e.status),field:"status"},{label:"Instructions",value:e.dosage,field:"dosage"}],se=l.object({subjectID:l.string({required_error:"Patient must be specified."}),dateAsserted:l.date({required_error:"Date asserted is required."}),medication:l.object({code:l.string({required_error:"Please choose a medication."}),display:l.string().optional(),system:l.string().optional()}),dosage:l.string().optional(),status:l.enum(["active","completed","entered-in-error","intended","not-taken","on-hold","stopped","unknown"])});try{S.displayName="getMedicationFormData",S.__docgenInfo={description:"",displayName:"getMedicationFormData",props:{builderPatientRxNormStatus:{defaultValue:null,description:"",name:"builderPatientRxNormStatus",required:!1,type:{name:"Record<string, string>"}},basedOn:{defaultValue:null,description:"",name:"basedOn",required:!0,type:{name:"string | undefined"}},category:{defaultValue:null,description:"",name:"category",required:!0,type:{name:"string"}},context:{defaultValue:null,description:"",name:"context",required:!0,type:{name:"string | undefined"}},dateAsserted:{defaultValue:null,description:"",name:"dateAsserted",required:!0,type:{name:"string | undefined"}},derivedFrom:{defaultValue:null,description:"",name:"derivedFrom",required:!0,type:{name:"string[]"}},aggregatedFrom:{defaultValue:null,description:"",name:"aggregatedFrom",required:!0,type:{name:"Reference[]"}},display:{defaultValue:null,description:"",name:"display",required:!0,type:{name:"string"}},dosage:{defaultValue:null,description:"",name:"dosage",required:!0,type:{name:"string | undefined"}},effectiveStart:{defaultValue:null,description:"",name:"effectiveStart",required:!0,type:{name:"string | undefined"}},identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string | undefined"}},informationSource:{defaultValue:null,description:"",name:"informationSource",required:!0,type:{name:"Reference | undefined"}},medicationReference:{defaultValue:null,description:"",name:"medicationReference",required:!0,type:{name:"string | undefined"}},notesDisplay:{defaultValue:null,description:"",name:"notesDisplay",required:!0,type:{name:"string[]"}},partOf:{defaultValue:null,description:"",name:"partOf",required:!0,type:{name:"string | undefined"}},patientStatus:{defaultValue:null,description:"",name:"patientStatus",required:!0,type:{name:"string"}},rxNorm:{defaultValue:null,description:"",name:"rxNorm",required:!0,type:{name:"string | undefined"}},rxNormCodeableConcept:{defaultValue:null,description:'Get RxNorm coding with "display" defaulting to this Med-Statement label.',name:"rxNormCodeableConcept",required:!0,type:{name:"{ display: string; code?: string | undefined; _code?: Element | undefined; _display?: Element | undefined; system?: string | undefined; _system?: Element | undefined; ... 6 more ...; _id?: Element | undefined; }"}},reason:{defaultValue:null,description:"",name:"reason",required:!0,type:{name:"string | undefined"}},reasonReference:{defaultValue:null,description:"",name:"reasonReference",required:!0,type:{name:"Reference[] | undefined"}},isArchived:{defaultValue:null,description:"",name:"isArchived",required:!0,type:{name:"boolean"}},isInactive:{defaultValue:null,description:"",name:"isInactive",required:!0,type:{name:"boolean"}},status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"enum",value:[{value:'"active"'},{value:'"entered-in-error"'},{value:'"not-taken"'},{value:'"completed"'},{value:'"on-hold"'},{value:'"intended"'},{value:'"stopped"'},{value:'"unknown"'}]}},displayStatus:{defaultValue:null,description:"",name:"displayStatus",required:!0,type:{name:"string"}},statusReason:{defaultValue:null,description:"",name:"statusReason",required:!0,type:{name:"string | undefined"}},subject:{defaultValue:null,description:"",name:"subject",required:!0,type:{name:"Reference"}},subjectID:{defaultValue:null,description:"",name:"subjectID",required:!0,type:{name:"string"}},patient:{defaultValue:null,description:"",name:"patient",required:!0,type:{name:"PatientModel | undefined"}},lastFillDate:{defaultValue:null,description:"",name:"lastFillDate",required:!0,type:{name:"string | undefined"}},quantity:{defaultValue:null,description:"",name:"quantity",required:!0,type:{name:"string | undefined"}},daysSupply:{defaultValue:null,description:"",name:"daysSupply",required:!0,type:{name:"string | undefined"}},refills:{defaultValue:null,description:"",name:"refills",required:!0,type:{name:"string | undefined"}},lastPrescriber:{defaultValue:null,description:"",name:"lastPrescriber",required:!0,type:{name:"string | undefined"}},lastPrescribedDate:{defaultValue:null,description:"",name:"lastPrescribedDate",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"MedicationStatement"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}const de=[$,K,W],le=async(e,a)=>{const t={resourceType:"MedicationStatement",status:e.status,dateAsserted:L(e.dateAsserted),subject:{type:"Patient",reference:`Patient/${e.subjectID}`},medicationCodeableConcept:{text:e.medication.display,coding:[{system:Q,code:e.medication.code}]},...e.dosage&&{dosage:[{text:e.dosage}]}},i=new M(t),s=await X(i.resource,await a());return await Promise.all(de.map(async d=>ee.invalidateQueries([d]))),s},w=({isOpen:e,handleOnClose:a,medication:t,children:i})=>{var o,p;const s=J(),d={reference:`Patient/${(o=s.data)==null?void 0:o.id}`,display:(p=s.data)==null?void 0:p.display};let u;t?u=new M({...t,subject:d,dateAsserted:q(new Date,"yyyy-MM-dd")}):u=new M({resourceType:"MedicationStatement",status:"active",subject:d,dateAsserted:q(new Date,"yyyy-MM-dd")});const m=S(u);return r.createElement(r.Fragment,null,i,r.createElement(H,{title:"Add Medication",action:le,data:m,schema:se,isOpen:e,onClose:()=>a()}))};try{w.displayName="AddNewMedDrawer",w.__docgenInfo={description:"",displayName:"AddNewMedDrawer",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},handleOnClose:{defaultValue:null,description:"",name:"handleOnClose",required:!0,type:{name:"() => void"}},medication:{defaultValue:null,description:"",name:"medication",required:!1,type:{name:"MedicationStatement"}}}}}catch{}const C=ae(({sortOrder:e="asc",sortColumn:a="display",showDismissed:t=!1,showInactive:i=!1,hideAddToRecord:s=!1,handleAddToRecord:d,records:u,onAfterOpenHistoryDrawer:m,onOpenHistoryDrawer:o})=>{const p=ne(),h=B(),[v,g]=c.useState([]),[P,R]=c.useState(!1),[I,O]=c.useState(!1),[b,_]=c.useState(),{otherProviderMedications:D,isLoading:T}=N();function x(n){A(o)&&o(),_(n),h({medication:n}),setTimeout(()=>{A(m)&&m()},0)}function F(n){_(n),R(!0)}return c.useEffect(()=>{const n=u||D;if(!n)return;const f=n.filter(y=>!y.isArchived||t).filter(y=>!y.isInactive||i),j=f.every(y=>y.isArchived);g(re(f,Z(G(a),E),e)),O(s&&j)},[D,a,e,i,t,u,s]),r.createElement("div",{"data-zus-telemetry-namespace":"OtherProviderMedsTable"},r.createElement(k,{getRowClassName:n=>({"ctw-tr-archived":n.isArchived}),emptyMessage:"No records found.",telemetryNamespace:"MedicationsTableBase",medicationStatements:v,isLoading:T,handleRowClick:x,RowActions:I?void 0:({record:n})=>r.createElement("div",{onClick:f=>f.stopPropagation(),onKeyDown:f=>f.stopPropagation()},!n.isArchived&&r.createElement("button",{type:"button",className:"ctw-btn-primary ctw-capitalize","data-zus-telemetry-click":"Dismiss record",onClick:async()=>{await p(n)}},"dismiss"),!s&&r.createElement("button",{type:"button",className:"ctw-btn-primary ctw-ml-1 ctw-capitalize","data-zus-telemetry-click":"Add to record","data-testid":"add-to-record",onClick:()=>{d?d(n):F(n)}},"add to record"))}),r.createElement(w,{medication:b==null?void 0:b.resource,isOpen:P,handleOnClose:()=>R(!1)}))},"OtherProviderMedsTable"),Ve=()=>{const{otherProviderMedications:e=[]}=N(),a=e.filter(t=>!(t.isArchived||t.isInactive));return a.length>0?r.createElement(te,{color:"notification",text:a.length.toString(),className:"ctw-h-5"}):null};try{C.displayName="OtherProviderMedsTable",C.__docgenInfo={description:`Displays a table of medications that are not scoped to the current builder.
This component displays the inverse results of \`ProviderMedsTable\`.

The table has a menu to the right side which will pull out the
history for the medication listed in that row.`,displayName:"OtherProviderMedsTable",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},handleAddToRecord:{defaultValue:null,description:"",name:"handleAddToRecord",required:!1,type:{name:"((m: MedicationStatementModel) => void)"}},hideAddToRecord:{defaultValue:null,description:"",name:"hideAddToRecord",required:!1,type:{name:"boolean"}},showDismissed:{defaultValue:null,description:"",name:"showDismissed",required:!1,type:{name:"boolean"}},showInactive:{defaultValue:null,description:"",name:"showInactive",required:!1,type:{name:"boolean"}},sortColumn:{defaultValue:null,description:"",name:"sortColumn",required:!1,type:{name:"enum",value:[{value:'"builderPatientRxNormStatus"'},{value:'"basedOn"'},{value:'"category"'},{value:'"context"'},{value:'"dateAsserted"'},{value:'"derivedFrom"'},{value:'"aggregatedFrom"'},{value:'"display"'},{value:'"dosage"'},{value:'"effectiveStart"'},{value:'"identifier"'},{value:'"informationSource"'},{value:'"medicationReference"'},{value:'"notesDisplay"'},{value:'"partOf"'},{value:'"patientStatus"'},{value:'"rxNorm"'},{value:'"rxNormCodeableConcept"'},{value:'"reason"'},{value:'"reasonReference"'},{value:'"isArchived"'},{value:'"isInactive"'},{value:'"status"'},{value:'"displayStatus"'},{value:'"statusReason"'},{value:'"subject"'},{value:'"subjectID"'},{value:'"patient"'},{value:'"lastFillDate"'},{value:'"quantity"'},{value:'"daysSupply"'},{value:'"refills"'},{value:'"lastPrescriber"'},{value:'"lastPrescribedDate"'},{value:'"resource"'},{value:'"includedResources"'},{value:'"revIncludes"'},{value:'"id"'},{value:'"isSummaryResource"'},{value:'"resourceType"'},{value:'"getBasicResourceByAction"'},{value:'"toString"'}]}},sortOrder:{defaultValue:null,description:"",name:"sortOrder",required:!1,type:{name:"enum",value:[{value:'"asc"'},{value:'"desc"'}]}},records:{defaultValue:null,description:"",name:"records",required:!1,type:{name:"MedicationStatementModel[]"}},onOpenHistoryDrawer:{defaultValue:null,description:"",name:"onOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}},onAfterOpenHistoryDrawer:{defaultValue:null,description:"",name:"onAfterOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}}}}}catch{}export{w as A,Ve as B,C as O};
//# sourceMappingURL=other-provider-meds-table-ee396c63.js.map
