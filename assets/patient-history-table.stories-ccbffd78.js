var A=Object.defineProperty;var C=(e,t,r)=>t in e?A(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var d=(e,t,r)=>(C(e,typeof t!="symbol"?t+"":t,r),r);import{r as l,R as a}from"./index-9f32f44c.js";import{c as S}from"./index-a587463d.js";import{s as D,t as F,v as P,x as L,m as M,y as U,z as q,T as B,A as V,w as j,B as z,H as W,R as $,D as K,C as Y,F as O,a as Q,b as J,c as Z,S as G}from"./patient-allergies-271e7bfd.js";import"./_baseForOwn-2c8afc2d.js";import"./uniqWith-5ea28b10.js";import{c as X,T as ee}from"./table-d177eff4.js";import"./_baseClone-058b2292.js";import"./_baseIsEqual-51bafb81.js";import"./_baseUniq-df086167.js";import{u as te}from"./uniq-95c702ad.js";import"./action-list-613913db.js";import"./drawer-1f44527c.js";import"./request-1cbd9ad0.js";import"./spinner-096fc82a.js";import{s as ae}from"./requests-4b0b6cde.js";import"./_commonjsHelpers-de833af9.js";import"./extends-d3510bf0.js";import"./_basePickBy-c1a75bb1.js";import"./index-553ab251.js";import"./debounce-afba8bf8.js";import"./toNumber-0c016d7c.js";import"./index-9c2d1831.js";import"./mapValues-ceea932c.js";import"./data-list-2854f463.js";import"./isEqual-55976ea2.js";import"./isPlainObject-eb99f80b.js";import"./index-e0a0619e.js";import"./requests-45f29a68.js";function re(){const e=[];return e.push({key:"status",type:"select",icon:D,values:["initialize",{key:"in_progress",name:"in progress"},"error","done",{key:"done_with_errors",name:"done with errors "}],display:"status"},{key:"future_jobs",type:"tag",icon:F,display:"Exclude Future Jobs"}),e}const se={future_jobs:{key:"future_jobs",selected:!0,type:"tag"}};class ie{constructor(t,r){d(this,"kind","PatientHistory");d(this,"historyInfo");d(this,"patient");this.patient=t,this.historyInfo=r}get providers(){var t;return(t=this.historyInfo)==null?void 0:t.attributes.providers}get lastUpdatedAt(){var t;return P(new Date(Number((t=this.historyInfo)==null?void 0:t.attributes.lastUpdatedAt)*1e3),"M/d/yy h:mm a")}get key(){var t;return((t=this.historyInfo)==null?void 0:t.id)||""}get targetDate(){var t;return L((t=this.historyInfo)==null?void 0:t.attributes.targetDate)}get createdAt(){var t;if((t=this.historyInfo)!=null&&t.attributes.createdAt)return P(new Date(Number(this.historyInfo.attributes.createdAt)*1e3),"M/d/yy h:mm a")}}function ne(e,t,r,s){return M(V,[e,t,r,s],async n=>{try{const i=await U({requestContext:n,count:e,offset:t,status:r,excludeFutureJobs:s}),m=te(X(i.data.map(o=>o.relationships.patient.data.id)));if(!m.length)return{total:0,patients:[]};const u=await q(n,void 0,m),y=i.data.map(o=>{const w=u.patients.filter(h=>h.id===o.relationships.patient.data.id);return new ie(w[0],o)});return{hasNext:!!i.links.next,total:i.data.length,patients:y}}catch(i){throw B.logError(i,"Failed fetching patient history patients."),new Error(`Failed fetching patient history patients: ${i}`)}})}const v=j(({className:e,handleRowClick:t,pageSize:r=10,title:s="Patient History Request"})=>{const[n,i]=l.useState(1),[m,u]=l.useState([]),[y,o]=l.useState(),[w,h]=l.useState(!0),{data:{patients:g,total:k,hasNext:x}={},isFetching:E,isError:_}=ne(r,n-1,y,w),R=c=>{var b,N;h(!!((b=c.future_jobs)!=null&&b.selected)),(N=c.status)!=null&&N.selected&&typeof c.status.selected=="string"?o(c.status.selected.split(" ").join("_")):o(void 0)};return l.useEffect(()=>{!E&&g&&u(g.filter(c=>c.patient))},[g,k,_,E]),l.useEffect(()=>{_&&u([])},[_,E]),a.createElement(z,{className:S("ctw-patients-table",e)},a.createElement(W,{title:s}),a.createElement($,{filterOptions:{onChange:R,filters:re(),defaultState:se},className:"ctw-ml-2"}),a.createElement("div",{className:"ctw-overflow-hidden"},a.createElement(ee,{records:m,columns:oe,pageSize:r,handleRowClick:t,hidePagination:!0},a.createElement(K,{currentPage:n,setCurrentPage:i,hasNext:x}))))},"PatientsHistoryTable"),oe=[{title:"Last Queried",render:e=>a.createElement("div",null,e.lastUpdatedAt)},{title:"Target Date",render:e=>a.createElement("div",null,e.targetDate)},{title:"Name",render:e=>a.createElement(ce,{data:e})},{title:"Source",render:e=>{var t;return a.createElement("div",{className:"ctw-space-y-2"},(t=e.providers)==null?void 0:t.map(r=>{var s;return a.createElement("div",{key:`${(s=e.historyInfo)==null?void 0:s.id}-${r.service}`},a.createElement("div",{className:"ctw-w-fit  ctw-py-1	ctw-capitalize"},le(r.service)))}))}},{title:"Status",render:e=>{var t;return a.createElement("div",{className:"ctw-space-y-2"},(t=e.providers)==null?void 0:t.map(r=>a.createElement("div",{key:`${e.key}-${r.service}`},a.createElement("div",{className:"ctw-capitalize"},a.createElement(me,{status:r.status})))))}}],ce=({data:e})=>{var t,r,s,n;return a.createElement("div",{className:"ctw-flex ctw-items-center"},a.createElement("div",null,a.createElement("div",{className:"ctw-flex ctw-space-x-1 ctw-font-medium"},a.createElement("div",{className:"ctw-max-w-xs"},(t=e.patient)==null?void 0:t.fullName),((r=e.patient)==null?void 0:r.resource.gender)&&a.createElement("div",{className:"ctw-uppercase"},"(",e.patient.resource.gender[0],")")),a.createElement("div",{className:"ctw-text-content-lighter"},(s=e.patient)==null?void 0:s.dob," (",(n=e.patient)==null?void 0:n.age,")")))},le=e=>{switch(e.toLowerCase()){case"commonwell":return"EHR Network";case"surescripts":return"Medication History";default:return e}},me=({status:e})=>{switch(e){case"initialize":case"in_progress":return a.createElement(p,{status:e,className:"ctw-bg-caution-light ctw-text-caution-heading"});case"done":return a.createElement(p,{status:e,className:"ctw-bg-success-light ctw-text-success-dark"});case"error":case"done_with_errors":return a.createElement(p,{status:e,className:"ctw-bg-error-light ctw-text-error-text"});default:return a.createElement(p,{status:e})}},p=({status:e,className:t})=>a.createElement("div",{className:S("ctw-w-fit ctw-rounded-2xl ctw-px-3 ctw-py-1 ctw-font-medium",t)},e.split("_").join(" "));try{v.displayName="PatientHistoryTable",v.__docgenInfo={description:"",displayName:"PatientHistoryTable",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"Argument"}},handleRowClick:{defaultValue:null,description:"",name:"handleRowClick",required:!1,type:{name:"((row: PatientHistoryRequestModel) => void)"}},pageSize:{defaultValue:null,description:"",name:"pageSize",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},getRowClasses:{defaultValue:null,description:"",name:"getRowClasses",required:!1,type:{name:"((row: PatientModel) => Argument)"}},onRowClick:{defaultValue:null,description:"",name:"onRowClick",required:!1,type:{name:"((row: PatientModel) => void)"}}}}}catch{}const Be={component:v,tags:["autodocs"],args:{},decorators:[(e,{args:t})=>a.createElement(Y,{env:"dev",authToken:O,builderId:Q},a.createElement(J,{patientID:Z,systemURL:G},a.createElement(e,{args:t})))]},f={...ae()};var T,H,I;f.parameters={...f.parameters,docs:{...(T=f.parameters)==null?void 0:T.docs,source:{originalSource:`{
  ...setupPatientHistoryMocks()
}`,...(I=(H=f.parameters)==null?void 0:H.docs)==null?void 0:I.source}}};const Ve=["Basic"];export{f as Basic,Ve as __namedExportsOrder,Be as default};
