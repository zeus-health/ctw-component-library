{"version":3,"file":"medication-05c7aacc.js","sources":["../../node_modules/@heroicons/react/outline/esm/ChevronRightIcon.js","../../src/fhir/basic.ts","../../src/components/core/collapsible-data-list.tsx","../../src/components/core/collapsible-data-list-stack.tsx","../../src/fhir/medication.ts","../../src/fhir/models/medication-administration.ts","../../src/fhir/models/medication-dispense.ts","../../src/fhir/models/medication-request.ts","../../src/fhir/models/medication-statement.ts","../../src/fhir/models/medication.ts"],"sourcesContent":["import * as React from \"react\";\n\nfunction ChevronRightIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 5l7 7-7 7\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import { FhirResource } from \"fhir-kit-client\";\nimport { Basic } from \"fhir/r4\";\nimport { createOrEditFhirResource } from \"./action-helper\";\nimport { FHIRModel } from \"./models/fhir-model\";\nimport { getUsersPractitionerReference } from \"./practitioner\";\nimport {\n  SYSTEM_BASIC_RESOURCE_TYPE,\n  SYSTEM_ZUS_PROFILE_ACTION,\n} from \"./system-urls\";\nimport { CTWRequestContext } from \"@/components/core/providers/ctw-context\";\n\nexport async function recordProfileAction<T extends fhir4.Resource>(\n  existingBasic: Basic | undefined,\n  model: FHIRModel<T>,\n  requestContext: CTWRequestContext,\n  profileAction: string\n) {\n  if (!model.id) {\n    throw new Error(\n      `Tried to ${profileAction} a resource that hasn't been created yet.`\n    );\n  }\n\n  if (!model.isSummaryResource) {\n    throw new Error(`Tried to ${profileAction} a patient record resource.`);\n  }\n\n  const basic: fhir4.Basic = {\n    resourceType: \"Basic\",\n    id: existingBasic?.id,\n    code: {\n      coding: [\n        {\n          system: SYSTEM_BASIC_RESOURCE_TYPE,\n          code: \"adminact\",\n          display: \"Administrative Activity\",\n        },\n        {\n          system: SYSTEM_ZUS_PROFILE_ACTION,\n          code: profileAction,\n        },\n      ],\n    },\n    subject: {\n      reference: `${model.resourceType}/${model.id}`,\n      type: model.resourceType,\n    },\n    author: await getUsersPractitionerReference(requestContext),\n  };\n\n  const response = (await createOrEditFhirResource(\n    basic,\n    requestContext\n  )) as FhirResource;\n\n  if (!response.id) {\n    throw new Error(\n      `Failed to ${profileAction} resource with id of ${model.id}`\n    );\n  }\n}\n","import { ChevronRightIcon } from \"@heroicons/react/outline\";\nimport cx from \"classnames\";\nimport { ReactNode, useState } from \"react\";\nimport { Details } from \"./collapsible-data-list-details\";\nimport \"./collapsible-data-list.scss\";\nimport { DocumentIcon } from \"@/components/core/document-icon\";\n\nexport type CollapsibleDataListEntry = {\n  label: string;\n  value: ReactNode;\n};\n\nexport type CollapsibleDataListProps = {\n  id: string;\n  date?: string;\n  title?: string;\n  subtitle?: string;\n  data: CollapsibleDataListEntry[];\n  hideEmpty?: boolean;\n  documentButton?: ReactNode;\n  binaryId?: string;\n};\n\nexport const CollapsibleDataList = ({\n  date,\n  title,\n  subtitle,\n  data,\n  hideEmpty,\n  documentButton,\n}: CollapsibleDataListProps) => {\n  const [isDetailShown, setIsDetailShown] = useState(false);\n\n  return (\n    <div\n      className=\"ctw-collapsible-data-list ctw-space-y-1\"\n      data-zus-telemetry-namespace=\"CollapsibleDataList\"\n    >\n      <DetailSummary\n        date={date}\n        title={title}\n        subtitle={subtitle}\n        isDetailShown={isDetailShown}\n        setIsDetailShown={setIsDetailShown}\n        hasDocument={!!documentButton}\n      />\n      {isDetailShown && (\n        <Details\n          data={data}\n          hideEmpty={hideEmpty}\n          documentButton={documentButton}\n        />\n      )}\n    </div>\n  );\n};\n\nconst DetailSummary = ({\n  date,\n  title,\n  subtitle,\n  isDetailShown,\n  hasDocument = false,\n  setIsDetailShown,\n}: {\n  date?: string;\n  title?: string;\n  subtitle?: string;\n  isDetailShown: boolean;\n  hasDocument?: boolean;\n  setIsDetailShown: React.Dispatch<React.SetStateAction<boolean>>;\n}) => (\n  <button\n    type=\"button\"\n    aria-label=\"details\"\n    onClick={() => setIsDetailShown(!isDetailShown)}\n    data-zus-telemetry-namespace=\"DetailSummary\"\n    data-zus-telemetry-click={isDetailShown ? \"Collapse\" : \"Expand\"}\n    className=\"ctw-w-full ctw-cursor-pointer ctw-border-none ctw-bg-transparent ctw-p-0 ctw-text-base ctw-outline-none\"\n  >\n    <div className=\"ctw-flex ctw-items-center ctw-justify-between ctw-rounded-lg ctw-bg-bg-white ctw-p-3 ctw-text-left ctw-outline ctw-outline-1 ctw-outline-bg-dark\">\n      <div className=\"ctw-flex ctw-space-x-3\">\n        {date && <div className=\"ctw-min-w-[5rem]\">{date}</div>}\n        <div>\n          <div className=\"ctw-font-semibold ctw-text-content-black\">\n            {title}\n          </div>\n          <div className=\"ctw-text-content-light\">{subtitle}</div>\n        </div>\n      </div>\n      <div className=\"ctw-flex ctw-items-center ctw-space-x-3\">\n        {hasDocument && (\n          <DocumentIcon\n            className=\"ctw-fill-content-light hover:ctw-fill-content-light\"\n            height={16}\n          />\n        )}\n        <div className=\"ctw-justify-right ctw-flex\">\n          <ChevronRightIcon\n            className={cx(\"ctw-h-5 ctw-w-5 ctw-text-primary-dark\", {\n              \"ctw-rotate-90\": isDetailShown,\n            })}\n          />\n        </div>\n      </div>\n    </div>\n  </button>\n);\n","import { useState } from \"react\";\nimport {\n  CollapsibleDataList,\n  CollapsibleDataListProps,\n} from \"./collapsible-data-list\";\n\nexport type CollapsibleDataListStackEntries = CollapsibleDataListProps[];\n\nexport type CollapsibleListProp = {\n  entries: CollapsibleDataListStackEntries;\n  limit?: number;\n};\n\nexport const CollapsibleDataListStack = ({\n  entries,\n  limit,\n}: CollapsibleListProp) => {\n  const [showAll, setShowAll] = useState(!limit || entries.length <= limit);\n  const displayedEntries =\n    showAll || !limit ? entries : entries.slice(0, limit);\n  return (\n    <div\n      className=\"ctw-space-y-3\"\n      data-zus-telemetry-namespace=\"CollapsibleDataListStack\"\n    >\n      <div className=\"ctw-text-base ctw-font-medium ctw-uppercase ctw-text-content-light\">\n        History\n      </div>\n      {displayedEntries.map((entry, idx) => (\n        // We can have multiple items with the same condition id\n        // eslint-disable-next-line react/no-array-index-key\n        <div key={`${entry.id}-${idx}`}>\n          <CollapsibleDataList\n            id={entry.id}\n            date={entry.date}\n            title={entry.title}\n            subtitle={entry.subtitle}\n            data={entry.data}\n            hideEmpty={entry.hideEmpty}\n            documentButton={entry.documentButton}\n          />\n        </div>\n      ))}\n      {!showAll && (\n        <div className=\"ctw-text-center\">\n          <button\n            type=\"button\"\n            className=\"ctw-btn-primary\"\n            onClick={() => setShowAll(true)}\n          >\n            {/* We know limit must be set if showAll is false. */}\n            {/* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */}\n            Load {entries.length - limit!} More\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import type { ResourceMap } from \"./types\";\nimport { findReference } from \"./resource-helper\";\nimport { SYSTEM_ENRICHMENT, SYSTEM_RXNORM } from \"./system-urls\";\nimport { get, sortBy } from \"@/utils/nodash\";\n\nexport type Medication =\n  | fhir4.MedicationStatement\n  | fhir4.MedicationAdministration\n  | fhir4.MedicationRequest\n  | fhir4.MedicationDispense;\n\nexport type ClinicalStatus =\n  | \"active\"\n  | \"entered-in-error\"\n  | \"not-taken\"\n  | \"completed\"\n  | \"on-hold\"\n  | \"intended\"\n  | \"stopped\";\n\n// Hardcoded aliased display statuses for patient-reported statuses.\nconst medStatusDisplays: Record<ClinicalStatus, string> = {\n  active: \"Currently taking\",\n  \"entered-in-error\": \"Never taken\",\n  \"not-taken\": \"Prescribed, not taken\",\n  completed: \"No longer taking\",\n  \"on-hold\": \"On hold\",\n  intended: \"Intend to take\",\n  stopped: \"No longer taking\",\n};\n\n// Medications can have either a medicationCodeableConcept or a\n// medicationReference. This helper grabs the codeable concept\n// from wherever it exists.\nexport function getMedicationCodeableConcept(\n  medication: Medication,\n  includedResources?: ResourceMap\n): fhir4.CodeableConcept | undefined {\n  if (medication.medicationCodeableConcept) {\n    return medication.medicationCodeableConcept;\n  }\n\n  const medicationResource = findReference(\n    \"Medication\",\n    medication.contained,\n    includedResources,\n    medication.medicationReference?.reference\n  );\n\n  return medicationResource?.code;\n}\n\n// Returns the best RxNorm code for uniquely identifying a medication.\nexport function getIdentifyingRxNormCode(\n  medication: Medication,\n  includedResources?: ResourceMap\n): string | undefined {\n  return getIdentifyingRxNormCoding(medication, includedResources)?.code;\n}\n\n// Returns the best RxNorm code for uniquely identifying a medication.\nexport function getIdentifyingRxNormCoding(\n  medication: Medication,\n  includedResources?: ResourceMap\n): fhir4.Coding | undefined {\n  const codeableConcept = getMedicationCodeableConcept(\n    medication,\n    includedResources\n  );\n\n  // first check to see if the med has an RxNorm coding that wasn't provided via enrichment\n  const rxNorm = codeableConcept?.coding?.find(\n    (code) =>\n      // must be an RxNorm code\n      code.system === SYSTEM_RXNORM && code.extension === undefined\n  );\n\n  if (rxNorm) {\n    return rxNorm;\n  }\n\n  // otherwise look for an RxNorm provided via the enrichment process\n  return codeableConcept?.coding?.find(\n    (code) =>\n      // must be an RxNorm code\n      code.system === SYSTEM_RXNORM &&\n      // must have no extensions\n      code.extension?.some(\n        (e) =>\n          e.url === SYSTEM_ENRICHMENT && e.valueString === \"Standardization\"\n      )\n  );\n}\n\n// Returns the organization name of any performer for the medication.\nexport function getPerformingOrganization(\n  resource: Medication,\n  includedResources?: ResourceMap\n): fhir4.Organization | undefined {\n  let reference;\n\n  switch (resource.resourceType) {\n    case \"MedicationAdministration\":\n    case \"MedicationDispense\":\n      reference = resource.performer?.[0]?.actor;\n      break;\n\n    case \"MedicationRequest\":\n      reference = resource.performer || resource.dispenseRequest?.performer;\n      break;\n\n    // MedicationStatements don't have a performer.\n    case \"MedicationStatement\":\n    default:\n      return undefined;\n  }\n\n  if (reference?.reference && reference.type === \"Organization\") {\n    return findReference(\n      \"Organization\",\n      resource.contained,\n      includedResources,\n      reference.reference\n    );\n  }\n\n  return undefined;\n}\n\nexport function createPatientStatusMap(\n  medications: fhir4.MedicationStatement[],\n  includedResources?: ResourceMap\n): Record<string, string> {\n  let patientMedications = medications.filter(\n    (medication) => medication.informationSource?.type === \"Patient\"\n  );\n\n  /* Sort the medications by asserted date, which we will then loop and\n     set the last instance of whatever rxCode we see as the source of truth. */\n  patientMedications = sortBy(patientMedications, (medication) =>\n    medication.dateAsserted ? medication.dateAsserted : \"\"\n  );\n\n  const rxNormStatusMap: Record<string, string> = {};\n  patientMedications.forEach((medication) => {\n    const rxNormCode =\n      getIdentifyingRxNormCode(medication, includedResources) ?? \"\";\n    rxNormStatusMap[rxNormCode] = medication.status;\n  });\n\n  return rxNormStatusMap;\n}\n\nexport function patientStatus(status?: string): string {\n  return get(medStatusDisplays, status as string, \"\");\n}\n","import { FHIRModel } from \"./fhir-model\";\nimport { formatDateISOToLocal } from \"@/fhir/formatters\";\nimport { compact } from \"@/utils/nodash/fp\";\n\nexport class MedicationAdministrationModel extends FHIRModel<fhir4.MedicationAdministration> {\n  get dosageDisplay(): string {\n    const { text, route, dose } = this.resource.dosage || {};\n    if (text) {\n      return text;\n    }\n\n    return compact([dose?.value, dose?.unit]).join(\" \");\n  }\n\n  get dosageRoute(): string | undefined {\n    const { route } = this.resource.dosage || {};\n    return route?.text;\n  }\n\n  get effectivePeriod() {\n    const { start, end } = this.resource.effectivePeriod || {};\n\n    return {\n      start: start ? formatDateISOToLocal(start) : \"\",\n      end: end ? formatDateISOToLocal(end) : \"\",\n    };\n  }\n}\n","import { FHIRModel } from \"./fhir-model\";\nimport { getPerformingOrganization } from \"@/fhir/medication\";\nimport { PractitionerModel } from \"@/fhir/models/practitioner\";\nimport { findReference } from \"@/fhir/resource-helper\";\n\nexport class MedicationDispenseModel extends FHIRModel<fhir4.MedicationDispense> {\n  get includedPerformer(): string | undefined {\n    const reference = this.resource.performer?.[0]?.actor.reference;\n\n    const practitioner = findReference(\n      \"Practitioner\",\n      this.resource.contained,\n      this.includedResources,\n      reference\n    );\n\n    if (practitioner) {\n      return new PractitionerModel(practitioner).fullName;\n    }\n    return this.resource.performer?.[0]?.actor.display;\n  }\n\n  get performer(): fhir4.Organization | undefined {\n    return getPerformingOrganization(this.resource, this.includedResources);\n  }\n\n  get performerDetails() {\n    const { performer } = this;\n    return {\n      name: performer?.name ?? \"\",\n      address: performer?.address?.[0].text ?? \"\",\n      telecom: performer?.telecom?.[0].value ?? \"\",\n    };\n  }\n\n  get status(): string {\n    return this.resource.status;\n  }\n\n  get quantityDisplay(): string | undefined {\n    const { value, unit = \"units\" } = this.resource.quantity || {};\n    return value ? `${value} ${unit}` : undefined;\n  }\n\n  get supplied(): string | undefined {\n    const { value, unit = \"days\" } = this.resource.daysSupply || {};\n    return value ? `${value} ${unit}` : undefined;\n  }\n}\n","import { FHIRModel } from \"./fhir-model\";\nimport { PractitionerModel } from \"@/fhir/models/practitioner\";\nimport { findReference } from \"@/fhir/resource-helper\";\nimport { compact } from \"@/utils/nodash/fp\";\n\nexport class MedicationRequestModel extends FHIRModel<fhir4.MedicationRequest> {\n  get includedRequester() {\n    const reference = this.resource.requester?.reference;\n\n    const practitioner = findReference(\n      \"Practitioner\",\n      this.resource.contained,\n      this.includedResources,\n      reference\n    );\n\n    if (practitioner) {\n      return new PractitionerModel(practitioner).fullName;\n    }\n    return this.resource.requester?.display;\n  }\n\n  get pharmacy() {\n    const { reference, display } =\n      this.resource.dispenseRequest?.performer || {};\n    const organization = findReference(\n      \"Organization\",\n      this.resource.contained,\n      this.includedResources,\n      reference\n    );\n    if (organization) {\n      const telecom = organization.telecom?.[0].value;\n      const {\n        city,\n        state,\n        postalCode,\n        text,\n        line = [],\n      } = organization.address?.[0] || {};\n      const cityStatePostal = compact([city, `${state} ${postalCode}`]).join(\n        \", \"\n      );\n\n      return {\n        telecom,\n        name: organization.name,\n        address: text ?? compact([line, cityStatePostal]).join(\"\\n\"),\n      };\n    }\n    return { name: display };\n  }\n}\n","import type { Reference } from \"fhir/r4\";\nimport { FHIRModel } from \"./fhir-model\";\nimport { PatientModel } from \"./patient\";\nimport { codeableConceptLabel } from \"@/fhir/codeable-concept\";\nimport { dateToISO, formatDateISOToLocal } from \"@/fhir/formatters\";\nimport {\n  getIdentifyingRxNormCode,\n  getIdentifyingRxNormCoding,\n  getMedicationCodeableConcept,\n  patientStatus,\n} from \"@/fhir/medication\";\nimport { findReference } from \"@/fhir/resource-helper\";\nimport {\n  CTW_EXTENSION_LENS_AGGREGATED_FROM,\n  LENS_EXTENSION_AGGREGATED_FROM,\n  LENS_EXTENSION_MEDICATION_DAYS_SUPPLY,\n  LENS_EXTENSION_MEDICATION_LAST_FILL_DATE,\n  LENS_EXTENSION_MEDICATION_LAST_PRESCRIBED_DATE,\n  LENS_EXTENSION_MEDICATION_LAST_PRESCRIBER,\n  LENS_EXTENSION_MEDICATION_QUANTITY,\n  LENS_EXTENSION_MEDICATION_REFILLS,\n} from \"@/fhir/system-urls\";\nimport { capitalize, compact, find, get } from \"@/utils/nodash/fp\";\n\nexport class MedicationStatementModel extends FHIRModel<fhir4.MedicationStatement> {\n  readonly builderPatientRxNormStatus?: Record<string, string>;\n\n  get basedOn(): string | undefined {\n    return this.resource.basedOn?.[0]?.type;\n  }\n\n  get category(): string {\n    return codeableConceptLabel(this.resource.category);\n  }\n\n  get context(): string | undefined {\n    return this.resource.context?.display;\n  }\n\n  get dateAsserted(): string | undefined {\n    return formatDateISOToLocal(this.resource.dateAsserted);\n  }\n\n  set dateAsserted(dateAsserted: Date | string | undefined) {\n    if (dateAsserted instanceof Date) {\n      this.resource.dateAsserted = dateToISO(dateAsserted);\n    } else {\n      this.resource.dateAsserted = dateAsserted;\n    }\n  }\n\n  get derivedFrom(): string[] {\n    return this.resource.derivedFrom?.map(({ display }) => display || \"\") || [];\n  }\n\n  get aggregatedFrom(): Reference[] {\n    const extension = find(\n      (x) =>\n        x.url === LENS_EXTENSION_AGGREGATED_FROM ||\n        x.url === CTW_EXTENSION_LENS_AGGREGATED_FROM,\n      this.resource.extension\n    );\n    if (!extension?.extension) {\n      return compact(this.resource.derivedFrom);\n    }\n    return compact(extension.extension.map(get(\"valueReference\")));\n  }\n\n  get display() {\n    return codeableConceptLabel(\n      getMedicationCodeableConcept(this.resource, this.includedResources)\n    );\n  }\n\n  get dosage(): string | undefined {\n    return this.resource.dosage?.[0]?.text;\n  }\n\n  get effectiveStart(): string | undefined {\n    return formatDateISOToLocal(this.resource.effectivePeriod?.start);\n  }\n\n  get identifier(): string | undefined {\n    return this.resource.identifier?.[0]?.value;\n  }\n\n  get informationSource(): Reference | undefined {\n    return this.resource.informationSource || undefined;\n  }\n\n  set informationSource(informationSource: Reference | undefined) {\n    this.resource.informationSource = informationSource;\n  }\n\n  get medicationReference(): string | undefined {\n    return this.resource.medicationReference?.display;\n  }\n\n  get notesDisplay(): string[] {\n    return this.resource.note?.map(({ text }) => text) || [];\n  }\n\n  get partOf(): string | undefined {\n    return this.resource.partOf?.[0]?.display;\n  }\n\n  get patientStatus(): string {\n    return patientStatus(this.builderPatientRxNormStatus?.[this.rxNorm ?? \"\"]);\n  }\n\n  get rxNorm(): string | undefined {\n    return getIdentifyingRxNormCode(this.resource, this.includedResources);\n  }\n\n  /**\n   * Get RxNorm coding with \"display\" defaulting to this Med-Statement label.\n   */\n  get rxNormCodeableConcept() {\n    const coding = getIdentifyingRxNormCoding(\n      this.resource,\n      this.includedResources\n    );\n\n    return {\n      ...(coding ?? {}),\n      display: coding?.display ?? this.display,\n    };\n  }\n\n  get reason(): string | undefined {\n    return codeableConceptLabel(this.resource.reasonCode?.[0]);\n  }\n\n  get reasonReference():\n    | fhir4.MedicationStatement[\"reasonReference\"]\n    | undefined {\n    return this.resource.reasonReference;\n  }\n\n  get isArchived(): boolean {\n    return !!this.getBasicResourceByAction(\"archive\");\n  }\n\n  get isInactive(): boolean {\n    return ![\"active\", \"intended\", \"unknown\"].includes(this.status);\n  }\n\n  get status() {\n    return this.resource.status;\n  }\n\n  get displayStatus() {\n    if (this.isArchived) {\n      return \"Dismissed\";\n    }\n    return capitalize(this.resource.status);\n  }\n\n  get statusReason(): string | undefined {\n    return codeableConceptLabel(this.resource.statusReason?.[0]);\n  }\n\n  get subject(): Reference {\n    return this.resource.subject;\n  }\n\n  get subjectID(): string {\n    const [, subjectID] = this.resource.subject.reference?.split(\"/\") || [];\n    return subjectID || \"\";\n  }\n\n  get patient(): PatientModel | undefined {\n    const reference = findReference(\n      \"Patient\",\n      this.resource.contained,\n      this.includedResources,\n      this.resource.subject.reference\n    );\n\n    if (reference) {\n      return new PatientModel(reference, this.includedResources);\n    }\n\n    return undefined;\n  }\n\n  // lens extensions\n\n  get lastFillDate(): string | undefined {\n    return formatDateISOToLocal(\n      this.resource.extension?.find(\n        (x) => x.url === LENS_EXTENSION_MEDICATION_LAST_FILL_DATE\n      )?.valueDateTime\n    );\n  }\n\n  get quantity(): string | undefined {\n    const quantity = this.resource.extension?.find(\n      (x) => x.url === LENS_EXTENSION_MEDICATION_QUANTITY\n    )?.valueQuantity;\n\n    if (quantity) {\n      return `${quantity.value} ${quantity.unit || \"\"}`;\n    }\n    return undefined;\n  }\n\n  get daysSupply(): string | undefined {\n    return this.resource.extension\n      ?.find((x) => x.url === LENS_EXTENSION_MEDICATION_DAYS_SUPPLY)\n      ?.valueQuantity?.value?.toString();\n  }\n\n  get refills(): string | undefined {\n    return this.resource.extension\n      ?.find((x) => x.url === LENS_EXTENSION_MEDICATION_REFILLS)\n      ?.valueUnsignedInt?.toString();\n  }\n\n  get lastPrescriber(): string | undefined {\n    const reference = this.resource.extension?.find(\n      (x) => x.url === LENS_EXTENSION_MEDICATION_LAST_PRESCRIBER\n    )?.valueReference;\n\n    if (!reference?.type || !reference.reference) {\n      return undefined;\n    }\n    const resource = findReference(\n      reference.type as \"Practitioner\" | \"Organization\",\n      this.resource.contained,\n      this.includedResources,\n      reference.reference\n    );\n    if (resource?.name) {\n      if (typeof resource.name === \"string\") {\n        return resource.name;\n      }\n      const { family, given = [] } = resource.name[0];\n      return compact([family, given[0]]).join(\", \");\n    }\n    return reference.display;\n  }\n\n  get lastPrescribedDate(): string | undefined {\n    return formatDateISOToLocal(\n      this.resource.extension?.find(\n        (x) => x.url === LENS_EXTENSION_MEDICATION_LAST_PRESCRIBED_DATE\n      )?.valueDateTime\n    );\n  }\n}\n","import type { Medication } from \"@/fhir/medication\";\nimport { FHIRModel } from \"./fhir-model\";\nimport { PatientModel } from \"./patient\";\nimport { codeableConceptLabel } from \"@/fhir/codeable-concept\";\nimport { formatDateISOToLocal } from \"@/fhir/formatters\";\nimport { getPerformingOrganization } from \"@/fhir/medication\";\nimport { MedicationAdministrationModel } from \"@/fhir/models/medication-administration\";\nimport { MedicationDispenseModel } from \"@/fhir/models/medication-dispense\";\nimport { MedicationRequestModel } from \"@/fhir/models/medication-request\";\nimport { MedicationStatementModel } from \"@/fhir/models/medication-statement\";\nimport { findReference } from \"@/fhir/resource-helper\";\n\nexport class MedicationModel extends FHIRModel<Medication> {\n  get performer(): string | undefined {\n    return getPerformingOrganization(this.resource, this.includedResources)\n      ?.name;\n  }\n\n  get status(): string {\n    return this.resource.status;\n  }\n\n  get dosage(): string | undefined {\n    switch (this.resource.resourceType) {\n      case \"MedicationStatement\":\n        return this.resource.dosage?.[0]?.text;\n      case \"MedicationAdministration\":\n        return new MedicationAdministrationModel(\n          this.resource,\n          this.includedResources\n        ).dosageDisplay;\n      case \"MedicationDispense\":\n      case \"MedicationRequest\":\n        return codeableConceptLabel(this.resource.dosageInstruction?.[0]);\n      default:\n        return \"\";\n    }\n  }\n\n  get date(): string | undefined {\n    switch (this.resource.resourceType) {\n      case \"MedicationStatement\":\n        return (\n          this.resource.dateAsserted ?? this.resource.effectivePeriod?.start\n        );\n      case \"MedicationAdministration\":\n        return this.resource.effectivePeriod?.start;\n      case \"MedicationDispense\":\n        return this.resource.whenHandedOver ?? this.resource.whenPrepared;\n      case \"MedicationRequest\":\n        return (\n          this.resource.authoredOn ??\n          this.resource.dosageInstruction?.[0].timing?.repeat?.boundsPeriod\n            ?.start\n        );\n      default:\n        return \"\";\n    }\n  }\n\n  get dateLocal(): string | undefined {\n    return formatDateISOToLocal(this.date);\n  }\n\n  get patient(): PatientModel | undefined {\n    const reference = findReference(\n      \"Patient\",\n      this.resource.contained,\n      this.includedResources,\n      this.resource.subject?.reference\n    );\n\n    if (reference) {\n      return new PatientModel(reference, this.includedResources);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * This accessor will try to get the prescriber for the underlying medication\n   * models resource. Depending on the type of fhir resource, it will delegate\n   * the work to a more specific fhir/model/*.ts class before simply grabbing\n   * the `display` property from an actor/performer/requester. If all else\n   * should fail, the accessor returns an empty string.\n   */\n  get prescriber(): string | undefined {\n    switch (this.resource.resourceType) {\n      case \"MedicationStatement\":\n        return new MedicationStatementModel(\n          this.resource,\n          this.includedResources\n        ).lastPrescriber;\n      case \"MedicationDispense\":\n        return new MedicationDispenseModel(\n          this.resource,\n          this.includedResources\n        ).includedPerformer;\n      case \"MedicationRequest\":\n        return new MedicationRequestModel(this.resource, this.includedResources)\n          .includedRequester;\n      default:\n        return undefined;\n    }\n  }\n}\n"],"names":["ChevronRightIcon","props","svgRef","React.createElement","ForwardRef","React.forwardRef","ChevronRightIcon$1","recordProfileAction","existingBasic","model","requestContext","profileAction","basic","SYSTEM_BASIC_RESOURCE_TYPE","SYSTEM_ZUS_PROFILE_ACTION","getUsersPractitionerReference","createOrEditFhirResource","CollapsibleDataList","date","title","subtitle","data","hideEmpty","documentButton","isDetailShown","setIsDetailShown","useState","React","DetailSummary","Details","hasDocument","DocumentIcon","cx","CollapsibleDataListStack","entries","limit","showAll","setShowAll","displayedEntries","entry","idx","medStatusDisplays","getMedicationCodeableConcept","medication","includedResources","medicationResource","findReference","_a","getIdentifyingRxNormCode","getIdentifyingRxNormCoding","codeableConcept","rxNorm","code","SYSTEM_RXNORM","_b","e","SYSTEM_ENRICHMENT","getPerformingOrganization","resource","reference","_c","patientStatus","status","get","MedicationAdministrationModel","FHIRModel","text","route","dose","compact","start","end","formatDateISOToLocal","MedicationDispenseModel","practitioner","PractitionerModel","_d","performer","value","unit","MedicationRequestModel","display","organization","telecom","city","state","postalCode","line","cityStatePostal","MedicationStatementModel","__publicField","codeableConceptLabel","dateAsserted","dateToISO","extension","find","x","LENS_EXTENSION_AGGREGATED_FROM","CTW_EXTENSION_LENS_AGGREGATED_FROM","informationSource","coding","capitalize","subjectID","PatientModel","LENS_EXTENSION_MEDICATION_LAST_FILL_DATE","quantity","LENS_EXTENSION_MEDICATION_QUANTITY","LENS_EXTENSION_MEDICATION_DAYS_SUPPLY","LENS_EXTENSION_MEDICATION_REFILLS","LENS_EXTENSION_MEDICATION_LAST_PRESCRIBER","family","given","LENS_EXTENSION_MEDICATION_LAST_PRESCRIBED_DATE","MedicationModel","_f","_e"],"mappings":"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"}