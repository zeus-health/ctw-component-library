import{g as a}from"./_commonjsHelpers-de833af9.js";import{_ as f,e as y,i as u}from"./_baseIsEqual-74322f1d.js";var l=f,b=y,m=u,g="[object String]";function T(e){return typeof e=="string"||!b(e)&&m(e)&&l(e)==g}var O=T;const W=a(O);var s={exports:{}},_="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",h=_,P=h;function i(){}function p(){}p.resetWarningCache=i;var S=function(){function e(d,R,x,E,k,c){if(c!==P){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}e.isRequired=e;function r(){return e}var t={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:r,element:e,elementType:e,instanceOf:r,node:e,objectOf:r,oneOf:r,oneOfType:r,shape:r,exact:r,checkPropTypes:p,resetWarningCache:i};return t.PropTypes=t,t};s.exports=S();var j=s.exports;const w=a(j);/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */function n(e){return Object.prototype.toString.call(e)==="[object Object]"}function v(e){var r,t;return n(e)===!1?!1:(r=e.constructor,r===void 0?!0:(t=r.prototype,!(n(t)===!1||t.hasOwnProperty("isPrototypeOf")===!1)))}const I=Object.freeze(Object.defineProperty({__proto__:null,isPlainObject:v},Symbol.toStringTag,{value:"Module"}));export{w as P,W as a,I as b,v as i};
