import{r as u,R as r}from"./index-6f814c40.js";import{u as x,a as C,M as F}from"./use-medications-4de61b0b.js";import{b as j,m as l,D as B}from"./drawer-form-with-fields-015f9f96.js";import{C as k,B as Y}from"./badge-048a5819.js";import{u as H,z as b,p as z,aa as U,q as L,ao as Q,at as $}from"./patient-helper-0f09a661.js";import{y as K,i as D}from"./values-28adb33b.js";import{i as W,d as Z}from"./patient-provider-36691a31.js";import{M as v}from"./sort-618282df.js";import{q as G}from"./request-5d5ec5f4.js";import{w as X}from"./error-boundary-3c619f42.js";import{u as J}from"./requests-1e8d4ddf.js";const ee=async(e,a)=>{const{authToken:t,contextBuilderId:i}=e;return(await(await fetch(`${j(e.env)}?display=${a}`,{headers:{Authorization:`Bearer ${t}`,...i&&{"Zus-Account":i}}})).json()).data},V=({defaultCoding:e,readonly:a,...t})=>{const{getRequestContext:i}=H(),[s,d]=u.useState(!1),[o,f]=u.useState(),c=async m=>{d(!0);const q=await i(),h=await ee(q,m);h&&f(h.map(y=>({value:y,label:y.display}))),d(!1)};return r.createElement(k,{options:o||[],isLoading:s,name:`${t.name}`,defaultSearchTerm:t.defaultValue,readonly:a,onSearchChange:c,defaultValue:e})};try{V.displayName="MedicationsAutoComplete",V.__docgenInfo={description:"",displayName:"MedicationsAutoComplete",props:{defaultCoding:{defaultValue:null,description:"",name:"defaultCoding",required:!1,type:{name:"Coding"}},readonly:{defaultValue:null,description:"",name:"readonly",required:!0,type:{name:"boolean | undefined"}}}}}catch{}const w=e=>[{label:"Subject",value:e.subjectID,field:"subjectID",hidden:!0},{label:"Date Asserted",value:b(new Date,"P"),field:"dateAsserted",hidden:!0},{label:"Medication",field:"medication",value:e.display,render:(a,t)=>r.createElement(V,{readonly:a,...t,defaultCoding:e.rxNormCodeableConcept})},{label:"Latest Status",value:K(e.status),field:"status"},{label:"Instructions",value:e.dosage,field:"dosage"}],te=l.object({subjectID:l.string({required_error:"Patient must be specified."}),dateAsserted:l.date({required_error:"Date asserted is required."}),medication:l.object({code:l.string({required_error:"Please choose a medication."}),display:l.string().optional(),system:l.string().optional()}),dosage:l.string().optional(),status:l.enum(["active","completed","entered-in-error","intended","not-taken","on-hold","stopped","unknown"])});try{w.displayName="getMedicationFormData",w.__docgenInfo={description:"",displayName:"getMedicationFormData",props:{builderPatientRxNormStatus:{defaultValue:null,description:"",name:"builderPatientRxNormStatus",required:!1,type:{name:"Record<string, string>"}},basedOn:{defaultValue:null,description:"",name:"basedOn",required:!0,type:{name:"string | undefined"}},category:{defaultValue:null,description:"",name:"category",required:!0,type:{name:"string"}},context:{defaultValue:null,description:"",name:"context",required:!0,type:{name:"string | undefined"}},dateAsserted:{defaultValue:null,description:"",name:"dateAsserted",required:!0,type:{name:"string | undefined"}},derivedFrom:{defaultValue:null,description:"",name:"derivedFrom",required:!0,type:{name:"string[]"}},aggregatedFrom:{defaultValue:null,description:"",name:"aggregatedFrom",required:!0,type:{name:"Reference[]"}},display:{defaultValue:null,description:"",name:"display",required:!0,type:{name:"string"}},dosage:{defaultValue:null,description:"",name:"dosage",required:!0,type:{name:"string | undefined"}},effectiveStart:{defaultValue:null,description:"",name:"effectiveStart",required:!0,type:{name:"string | undefined"}},identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string | undefined"}},informationSource:{defaultValue:null,description:"",name:"informationSource",required:!0,type:{name:"Reference | undefined"}},medicationReference:{defaultValue:null,description:"",name:"medicationReference",required:!0,type:{name:"string | undefined"}},notesDisplay:{defaultValue:null,description:"",name:"notesDisplay",required:!0,type:{name:"string[]"}},partOf:{defaultValue:null,description:"",name:"partOf",required:!0,type:{name:"string | undefined"}},patientStatus:{defaultValue:null,description:"",name:"patientStatus",required:!0,type:{name:"string"}},rxNorm:{defaultValue:null,description:"",name:"rxNorm",required:!0,type:{name:"string | undefined"}},rxNormCodeableConcept:{defaultValue:null,description:'Get RxNorm coding with "display" defaulting to this Med-Statement label.',name:"rxNormCodeableConcept",required:!0,type:{name:"{ display: string; code?: string | undefined; _code?: Element | undefined; _display?: Element | undefined; system?: string | undefined; _system?: Element | undefined; ... 6 more ...; _id?: Element | undefined; }"}},reason:{defaultValue:null,description:"",name:"reason",required:!0,type:{name:"string | undefined"}},reasonReference:{defaultValue:null,description:"",name:"reasonReference",required:!0,type:{name:"Reference[] | undefined"}},isArchived:{defaultValue:null,description:"",name:"isArchived",required:!0,type:{name:"boolean"}},isInactive:{defaultValue:null,description:"",name:"isInactive",required:!0,type:{name:"boolean"}},status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"enum",value:[{value:'"active"'},{value:'"unknown"'},{value:'"completed"'},{value:'"entered-in-error"'},{value:'"intended"'},{value:'"stopped"'},{value:'"on-hold"'},{value:'"not-taken"'}]}},displayStatus:{defaultValue:null,description:"",name:"displayStatus",required:!0,type:{name:"string"}},statusReason:{defaultValue:null,description:"",name:"statusReason",required:!0,type:{name:"string | undefined"}},subject:{defaultValue:null,description:"",name:"subject",required:!0,type:{name:"Reference"}},subjectID:{defaultValue:null,description:"",name:"subjectID",required:!0,type:{name:"string"}},patient:{defaultValue:null,description:"",name:"patient",required:!0,type:{name:"PatientModel | undefined"}},lastFillDate:{defaultValue:null,description:"",name:"lastFillDate",required:!0,type:{name:"string | undefined"}},quantity:{defaultValue:null,description:"",name:"quantity",required:!0,type:{name:"string | undefined"}},daysSupply:{defaultValue:null,description:"",name:"daysSupply",required:!0,type:{name:"string | undefined"}},refills:{defaultValue:null,description:"",name:"refills",required:!0,type:{name:"string | undefined"}},lastPrescriber:{defaultValue:null,description:"",name:"lastPrescriber",required:!0,type:{name:"string | undefined"}},lastPrescribedDate:{defaultValue:null,description:"",name:"lastPrescribedDate",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"MedicationStatement"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},resourceTypeTitle:{defaultValue:null,description:"",name:"resourceTypeTitle",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}const ae=[L,Q,$],ne=async(e,a)=>{const t={resourceType:"MedicationStatement",status:e.status,dateAsserted:z(e.dateAsserted),subject:{type:"Patient",reference:`Patient/${e.subjectID}`},medicationCodeableConcept:{text:e.medication.display,coding:[{system:U,code:e.medication.code}]},...e.dosage&&{dosage:[{text:e.dosage}]}},i=new v(t),s=await W(i.resource,await a());return await Promise.all(ae.map(async d=>G.invalidateQueries([d]))),s},_=({isOpen:e,handleOnClose:a,medication:t,children:i})=>{var c,m;const s=Z(),d={reference:`Patient/${(c=s.data)==null?void 0:c.id}`,display:(m=s.data)==null?void 0:m.display};let o;t?o=new v({...t,subject:d,dateAsserted:b(new Date,"yyyy-MM-dd")}):o=new v({resourceType:"MedicationStatement",status:"active",subject:d,dateAsserted:b(new Date,"yyyy-MM-dd")});const f=w(o);return r.createElement(r.Fragment,null,i,r.createElement(B,{title:"Add Medication",action:ne,data:f,schema:te,isOpen:e,onClose:()=>a()}))};try{_.displayName="AddNewMedDrawer",_.__docgenInfo={description:"",displayName:"AddNewMedDrawer",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},handleOnClose:{defaultValue:null,description:"",name:"handleOnClose",required:!0,type:{name:"() => void"}},medication:{defaultValue:null,description:"",name:"medication",required:!1,type:{name:"MedicationStatement"}}}}}catch{}const A=X(({showDismissed:e=!1,showInactive:a=!1,hideAddToRecord:t=!1,handleAddToRecord:i,records:s,onAfterOpenHistoryDrawer:d,onOpenHistoryDrawer:o})=>{const f=J(),c=x(),[m,q]=u.useState([]),[h,y]=u.useState(!1),[N,E]=u.useState(!1),[M,S]=u.useState(),{otherProviderMedications:R,isLoading:T}=C();function P(n){D(o)&&o(),S(n),c({medication:n}),setTimeout(()=>{D(d)&&d()},0)}function I(n){S(n),y(!0)}return u.useEffect(()=>{const n=s||R;if(!n)return;const p=n.filter(g=>!g.isArchived||e).filter(g=>!g.isInactive||a),O=p.every(g=>g.isArchived);q(p),E(t&&O)},[R,a,e,s,t]),r.createElement("div",{"data-zus-telemetry-namespace":"OtherProviderMedsTable"},r.createElement(F,{getRowClassName:n=>({"ctw-tr-archived":n.isArchived}),emptyMessage:"No records found.",telemetryNamespace:"MedicationsTableBase",medicationStatements:m,isLoading:T,handleRowClick:P,RowActions:N?void 0:({record:n})=>r.createElement("div",{onClick:p=>p.stopPropagation(),onKeyDown:p=>p.stopPropagation()},!n.isArchived&&r.createElement("button",{type:"button",className:"ctw-btn-primary ctw-capitalize","data-zus-telemetry-click":"Dismiss record",onClick:async()=>{await f(n)}},"dismiss"),!t&&r.createElement("button",{type:"button",className:"ctw-btn-primary ctw-ml-1 ctw-capitalize","data-zus-telemetry-click":"Add to record","data-testid":"add-to-record",onClick:()=>{i?i(n):I(n)}},"add to record"))}),r.createElement(_,{medication:M==null?void 0:M.resource,isOpen:h,handleOnClose:()=>y(!1)}))},"OtherProviderMedsTable"),ye=()=>{const{otherProviderMedications:e=[]}=C(),a=e.filter(t=>!(t.isArchived||t.isInactive));return a.length>0?r.createElement(Y,{color:"notification",text:a.length.toString(),className:"ctw-h-5"}):null};try{A.displayName="OtherProviderMedsTable",A.__docgenInfo={description:`Displays a table of medications that are not scoped to the current builder.
This component displays the inverse results of \`ProviderMedsTable\`.

The table has a menu to the right side which will pull out the
history for the medication listed in that row.`,displayName:"OtherProviderMedsTable",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},handleAddToRecord:{defaultValue:null,description:"",name:"handleAddToRecord",required:!1,type:{name:"((m: MedicationStatementModel) => void)"}},hideAddToRecord:{defaultValue:null,description:"",name:"hideAddToRecord",required:!1,type:{name:"boolean"}},showDismissed:{defaultValue:null,description:"",name:"showDismissed",required:!1,type:{name:"boolean"}},showInactive:{defaultValue:null,description:"",name:"showInactive",required:!1,type:{name:"boolean"}},records:{defaultValue:null,description:"",name:"records",required:!1,type:{name:"MedicationStatementModel[]"}},onOpenHistoryDrawer:{defaultValue:null,description:"",name:"onOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}},onAfterOpenHistoryDrawer:{defaultValue:null,description:"",name:"onAfterOpenHistoryDrawer",required:!1,type:{name:"(() => void)"}}}}}catch{}export{ye as B,A as O};
