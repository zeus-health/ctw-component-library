import{r as u,R as d}from"./index-6f814c40.js";import{F as O,w as N,b as $,d as B,e as F,g as k,h as H,i as Y,j as R,k as S,T as p,o as g,l as T,n as L,p as v,S as Q,u as y,q as I,r as C}from"./patient-helper-bee16dce.js";import"./_baseToString-ba0098b0.js";import"./sortBy-64fcb484.js";import"./_baseClone-0c3bfcab.js";import"./sortBy-3860efd7.js";import"./_equalByTag-3aa7c076.js";import"./_baseForOwn-56487e0e.js";import{u as j}from"./uniq-f1be3f26.js";import"./_createSet-3c80ad01.js";import{q as _}from"./request-5a1df4c1.js";import{c as z}from"./_basePickBy-a17ae44f.js";const b=u.createContext(void 0),G=e=>d.createElement("div",null);function P({children:e}){const[t,r]=u.useState(!1),[a,n]=u.useState({component:G}),i=u.useMemo(()=>({openModal:o=>{n(o),r(!1),setTimeout(()=>{r(!0)})}}),[]);return d.createElement(b.Provider,{value:i},a.component({isOpen:t,onClose:()=>r(!1)}),e)}const _e=()=>{const e=u.useContext(b);if(!e)throw new Error("useModal must be used within a ModalProvider");return e};try{P.displayName="ModalProvider",P.__docgenInfo={description:"",displayName:"ModalProvider",props:{}}}catch{}const A=u.createContext(void 0),W=e=>d.createElement("div",null);function h({children:e}){const[t,r]=u.useState(!1),[a,n]=u.useState({component:W}),i=u.useMemo(()=>({openDrawer:o=>{n(o),r(!1),setTimeout(()=>{r(!0)})}}),[]);return d.createElement(A.Provider,{value:i},a.component({isOpen:t,onClose:()=>r(!1)}),e)}const Te=()=>{const e=u.useContext(A);if(!e)throw new Error("useDrawer must be used within a DrawerProvider");return e};try{h.displayName="DrawerProvider",h.__docgenInfo={description:"",displayName:"DrawerProvider",props:{}}}catch{}class Z extends O{get fullName(){var a,n;const t=(a=this.resource.name)==null?void 0:a[0];return[(n=t==null?void 0:t.given)!=null&&n.length?t.given[0]:"",t==null?void 0:t.family].filter(i=>i).join(" ")}}const K=async(e,t)=>{let r=[];try{const{resources:a}=await F("Practitioner",t,{_id:e});r=a}catch(a){throw new Error(`Failed fetching practitioner with an id of: ${e}. ${a}`)}if(!r[0])throw new Error(`No practitioner found with an id of: ${e}`);return new Z(r[0])};async function J(e){const t=$(e.authToken);if(t){const r=await K(t,e);return{reference:`Practitioner/${t}`,type:"Practitioner",display:r.fullName}}return{display:B(e.authToken)}}const D=N(J,"req.get_users_practitioner_reference"),U={system:Y,code:"assembler",display:"Assembler"},x={coding:[{system:R,code:"CREATE",display:"create"}]},X={coding:[{system:R,code:"UPDATE",display:"revise"}]},ee=async(e,t,r)=>{var l;const{fhirClient:a}=r,n=S(r.authToken),i=parseInt(((l=t.meta)==null?void 0:l.versionId)||"0",10),o={resourceType:"Provenance",agent:[{who:await D(r),onBehalfOf:{display:n}},{type:{coding:[U]},who:{display:"Zus Health"}}],recorded:new Date().toISOString(),target:[{reference:`${t.resourceType}/${t.id}/_history/${i}`,type:t.resourceType}]};o.activity=e==="CREATE"?x:X;try{const c=a.create({resourceType:"Provenance",body:o});return p.reportActionSuccess(`${t.resourceType}.provenance`),c}catch(c){throw p.reportActionFailure(`${t.resourceType}.provenance`),c}};async function we(e,t){const r=j(t.map(n=>`${n.resourceType}/${n.id}`)).join(","),{resources:a}=await _.fetchQuery([k,r],async()=>H("Provenance",e,{target:r}));return a}let m;const te=new Uint8Array(16);function ne(){if(!m&&(m=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!m))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return m(te)}const s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).slice(1));function re(e,t=0){return(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase()}const ae=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),w={randomUUID:ae};function E(e,t,r){if(w.randomUUID&&!t&&!e)return w.randomUUID();e=e||{};const a=e.random||(e.rng||ne)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,t){r=r||0;for(let n=0;n<16;++n)t[r+n]=a[n];return t}return re(a)}async function ie(e,t){const{fhirClient:r}=t,a=e;let n="create",i;try{return e.id?(n="update",i=await r.update({resourceType:e.resourceType,id:e.id,body:g(e)}),T(i)||await ee("UPDATE",i,t)):(i=await r.create({resourceType:e.resourceType,body:g(e)}),T(i)||(a.id=i.id)),p.reportActionSuccess(`${e.resourceType}.${n}`),i}catch(o){return p.reportActionFailure(`${e.resourceType}.${n}`),p.logError(o),o}}async function Ee(e,t){const{fhirClient:r}=t,a=S(t.authToken),n=e.id||E(),i=E(),o={resourceType:"Bundle",type:"transaction",entry:[{request:{method:"POST",url:e.resourceType},fullUrl:n,resource:e},{request:{method:"POST",url:"Provenance"},fullUrl:i,resource:{resourceType:"Provenance",activity:x,agent:[{who:await D(t),onBehalfOf:{display:a}},{type:{coding:[U]},who:{display:"Zus Health"}}],recorded:new Date().toISOString(),target:[{reference:`${e.resourceType}/${n}`,type:e.resourceType}]}}]};return r.transaction({body:g({...o,type:"transaction"})})}const oe=async(e,t,r)=>{const a=await r(),n=z(e.resource);n.gender=t.gender,n.birthDate=L(t.dateOfBirth),n.name=[{use:"official",family:t.lastName,given:[t.firstName]}],n.address=[{line:[t.address],city:t.city,state:t.state,postalCode:t.zipCode}];const i=[];t.phone&&i.push({system:"phone",value:t.phone}),t.email&&i.push({system:"email",value:t.email}),n.telecom=i;const o=await ie(n,a);return await _.invalidateQueries([v]),o},f=u.createContext(void 0),M=1e3*60*5;function q({children:e,patientUPID:t,patientID:r,systemURL:a,tags:n,onPatientSave:i}){const o=u.useMemo(()=>({patientID:t||r,systemURL:t?Q:a,tags:n,onPatientSave:i}),[r,t,a,n,i]);return d.createElement(f.Provider,{value:o},d.createElement(P,null,d.createElement(h,null,e)))}function se(){const{getRequestContext:e}=y(),t=u.useContext(f);if(!t)throw new Error("usePatient must be used within a PatientProvider");const{patientID:r,systemURL:a,tags:n}=t;return I([v,r,a,n],N(async()=>{const i=await e();return C(i,r,a,{_tag:(n==null?void 0:n.map(o=>`${o.system}|${o.code}`))??[]})},"req.get_builder_fhir_patient"),{staleTime:M})}function qe(){const{getRequestContext:e}=y(),t=u.useContext(f);return{getPatient:u.useCallback(()=>{if(!t)throw new Error("usePatient must be used within a PatientProvider");const{patientID:r,systemURL:a,tags:n}=t;return _.fetchQuery([v,r,a,n],async()=>{const i=await e();return C(i,r,a,{_tag:(n==null?void 0:n.map(o=>`${o.system}|${o.code}`))??[]})},{staleTime:M})},[t,e])}}function V(e){const{getRequestContext:t}=y(),r=u.useContext(f);if(!r)throw new Error("usePatient must be used within a PatientProvider");const{onPatientSave:a}=r;return u.useCallback(async n=>a?a(n):oe(e,n,t),[a,e,t])}function Ve(e,t,r,a=!0){var o,l;const{getRequestContext:n}=y(),i=se();return I([e,(o=i.data)==null?void 0:o.UPID,...t],async()=>{const c=await n();return r(c,i.data,t)},{enabled:!!((l=i.data)!=null&&l.UPID)&&a})}try{q.displayName="PatientProvider",q.__docgenInfo={description:"",displayName:"PatientProvider",props:{tags:{defaultValue:null,description:"",name:"tags",required:!1,type:{name:"Tag[]"}},onPatientSave:{defaultValue:null,description:"",name:"onPatientSave",required:!1,type:{name:"((data: PatientFormData) => Promise<void>)"}},patientUPID:{defaultValue:null,description:"",name:"patientUPID",required:!1,type:{name:"string"}},patientID:{defaultValue:null,description:"",name:"patientID",required:!1,type:{name:"string"}},systemURL:{defaultValue:null,description:"",name:"systemURL",required:!1,type:{name:"string"}}}}}catch{}try{V.displayName="useHandlePatientSave",V.__docgenInfo={description:"",displayName:"useHandlePatientSave",props:{active:{defaultValue:null,description:"",name:"active",required:!0,type:{name:"boolean | undefined"}},contact:{defaultValue:null,description:"",name:"contact",required:!0,type:{name:"PatientContact[] | undefined"}},dob:{defaultValue:null,description:"",name:"dob",required:!0,type:{name:"string | undefined"}},age:{defaultValue:null,description:"",name:"age",required:!0,type:{name:"number | undefined"}},gender:{defaultValue:null,description:"",name:"gender",required:!0,type:{name:"string | undefined"}},maritalStatus:{defaultValue:null,description:"",name:"maritalStatus",required:!0,type:{name:"string | undefined"}},organization:{defaultValue:null,description:"",name:"organization",required:!0,type:{name:"OrganizationModel | undefined"}},use:{defaultValue:null,description:"",name:"use",required:!0,type:{name:"enum",value:[{value:"undefined"},{value:'"usual"'},{value:'"official"'},{value:'"temp"'},{value:'"nickname"'},{value:'"anonymous"'},{value:'"old"'},{value:'"maiden"'}]}},officialOrUsualIdentifier:{defaultValue:null,description:"",name:"officialOrUsualIdentifier",required:!0,type:{name:"string"}},UPID:{defaultValue:null,description:"",name:"UPID",required:!0,type:{name:"string"}},getPhoneNumber:{defaultValue:null,description:"",name:"getPhoneNumber",required:!0,type:{name:'(use?: "temp" | "old" | "home" | "work" | "mobile" | undefined) => string | undefined'}},phoneNumber:{defaultValue:null,description:"",name:"phoneNumber",required:!0,type:{name:"string | undefined"}},email:{defaultValue:null,description:"",name:"email",required:!0,type:{name:"string | undefined"}},bestHomeAddress:{defaultValue:null,description:"",name:"bestHomeAddress",required:!0,type:{name:"Address | undefined"}},homeAddress:{defaultValue:null,description:"",name:"homeAddress",required:!0,type:{name:"Address | undefined"}},bestName:{defaultValue:null,description:"",name:"bestName",required:!0,type:{name:"HumanName"}},additionalNames:{defaultValue:null,description:"",name:"additionalNames",required:!0,type:{name:"string | undefined"}},display:{defaultValue:null,description:"",name:"display",required:!0,type:{name:"string"}},firstName:{defaultValue:null,description:"",name:"firstName",required:!0,type:{name:"string"}},fullName:{defaultValue:null,description:"",name:"fullName",required:!0,type:{name:"string"}},lastName:{defaultValue:null,description:"",name:"lastName",required:!0,type:{name:"string | undefined"}},nickname:{defaultValue:null,description:"",name:"nickname",required:!0,type:{name:"string | undefined"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!0,type:{name:"string | undefined"}},suffix:{defaultValue:null,description:"",name:"suffix",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"Patient"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},resourceTypeTitle:{defaultValue:null,description:"",name:"resourceTypeTitle",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}export{q as P,_e as a,Te as b,Z as c,se as d,Ee as e,ie as f,D as g,V as h,qe as i,we as s,Ve as u,E as v};
