import{r as d,R as i}from"./index-6f814c40.js";import{n as $,w as H,aP as B,aN as X,h as j,S as Y,s as A,I,ah as y,ax as z,a2 as G,aC as Q,aD as W,e as K,T as J,aQ as Z,aE as ee,aJ as te,aF as ae,aG as ne,aH as se,aI as re,aR as ie}from"./patient-helper-0838fee9.js";import{k as g,l as x,m as M,n as D,q as oe,r as ce,g as m,o as le,v as de,w as P,x as _,b as T,y as ue,z as me,A as pe,f as v,d as fe}from"./values-66360932.js";import{c as ye}from"./index-74f03c09.js";import{D as Ee,u as we}from"./collapsible-data-list-details-b542a54e.js";import{D as Me}from"./document-icon-581c51b2.js";import{w as ge}from"./error-boundary-4a876c30.js";import{L as he}from"./loading-c7ff698a.js";import{M as h,j as q,s as be,k as O,l as F,m as De,n as _e}from"./sort-013eed15.js";import{u as Ne}from"./patient-provider-d1b391ca.js";import"./_baseToString-4993715b.js";import{c as k}from"./sortBy-df4456c4.js";import"./_baseClone-25b1595e.js";import{c as L}from"./_basePickBy-239377e6.js";import"./sortBy-d677d734.js";import"./_equalByTag-aaf39779.js";import"./_baseForOwn-d8306f34.js";import"./_createSet-12ef9b81.js";function Se(e,a){return d.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:2,stroke:"currentColor","aria-hidden":"true",ref:a},e),d.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M9 5l7 7-7 7"}))}const Ie=d.forwardRef(Se),Re=Ie;const N=({date:e,title:a,subtitle:r,data:n,hideEmpty:t,documentButton:s})=>{const[o,c]=d.useState(!1);return i.createElement("div",{className:"ctw-collapsible-data-list ctw-space-y-1","data-zus-telemetry-namespace":"CollapsibleDataList"},i.createElement(Te,{date:e,title:a,subtitle:r,isDetailShown:o,setIsDetailShown:c,hasDocument:!!s}),o&&i.createElement(Ee,{data:n,hideEmpty:t,documentButton:s}))},Te=({date:e,title:a,subtitle:r,isDetailShown:n,hasDocument:t=!1,setIsDetailShown:s})=>i.createElement("button",{type:"button","aria-label":"details",onClick:()=>s(!n),"data-zus-telemetry-namespace":"DetailSummary","data-zus-telemetry-click":n?"Collapse":"Expand",className:"ctw-w-full ctw-cursor-pointer ctw-border-none ctw-bg-transparent ctw-p-0 ctw-text-base ctw-outline-none"},i.createElement("div",{className:"ctw-flex ctw-items-center ctw-justify-between ctw-rounded-lg ctw-bg-bg-white ctw-p-3 ctw-text-left ctw-outline ctw-outline-1 ctw-outline-bg-dark"},i.createElement("div",{className:"ctw-flex ctw-space-x-3"},e&&i.createElement("div",{className:"ctw-min-w-[5rem]"},e),i.createElement("div",null,i.createElement("div",{className:"ctw-font-semibold ctw-text-content-black"},a),i.createElement("div",{className:"ctw-text-content-light"},r))),i.createElement("div",{className:"ctw-flex ctw-items-center ctw-space-x-3"},t&&i.createElement(Me,{className:"ctw-fill-content-light hover:ctw-fill-content-light",height:16}),i.createElement("div",{className:"ctw-justify-right ctw-flex"},i.createElement(Re,{className:ye("ctw-h-5 ctw-w-5 ctw-text-primary-dark",{"ctw-rotate-90":n})})))));try{N.displayName="CollapsibleDataList",N.__docgenInfo={description:"",displayName:"CollapsibleDataList",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},date:{defaultValue:null,description:"",name:"date",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},subtitle:{defaultValue:null,description:"",name:"subtitle",required:!1,type:{name:"string"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"CollapsibleDataListEntry[]"}},hideEmpty:{defaultValue:null,description:"",name:"hideEmpty",required:!1,type:{name:"boolean"}},documentButton:{defaultValue:null,description:"",name:"documentButton",required:!1,type:{name:"ReactNode"}},binaryId:{defaultValue:null,description:"",name:"binaryId",required:!1,type:{name:"string"}}}}}catch{}const S=({entries:e,limit:a})=>{const[r,n]=d.useState(!a||e.length<=a),t=r||!a?e:e.slice(0,a);return i.createElement("div",{className:"ctw-space-y-3","data-zus-telemetry-namespace":"CollapsibleDataListStack"},i.createElement("div",{className:"ctw-text-base ctw-font-medium ctw-uppercase ctw-text-content-light"},"History"),t.map((s,o)=>i.createElement("div",{key:`${s.id}-${o}`},i.createElement(N,{id:s.id,date:s.date,title:s.title,subtitle:s.subtitle,data:s.data,hideEmpty:s.hideEmpty,documentButton:s.documentButton}))),!r&&i.createElement("div",{className:"ctw-text-center"},i.createElement("button",{type:"button",className:"ctw-btn-primary",onClick:()=>n(!0)},"Load ",e.length-a," More")))};try{S.displayName="CollapsibleDataListStack",S.__docgenInfo={description:"",displayName:"CollapsibleDataListStack",props:{entries:{defaultValue:null,description:"",name:"entries",required:!0,type:{name:"CollapsibleDataListStackEntries"}},limit:{defaultValue:null,description:"",name:"limit",required:!1,type:{name:"number"}}}}}catch{}const ve=e=>{const a=m("resource.medicationCodeableConcept.coding.0",e);return a?`${a.system}_${a.code}`:""},Le=e=>{const a=new Date(e.dateLocal??0);return $(a)},Ce=e=>{const a=new Date(e.date??0);return e.resourceType==="MedicationRequest"?a.getTime()-1:a.getTime()},Ae=e=>{if(e.length===0)return e;const a=(t,s)=>[t,t.resourceType,s],r=g(x(Le),M(t=>D(Ce,"asc",t)),M(t=>t.map(a)),M(xe))(e);return D(t=>new Date(t).getTime(),"desc",oe(r)).map(t=>r[t]).reduce(ce)};function xe(e=[]){const a=new Map,r=e.map(([n,t,s])=>{const o=ve(n);if(t==="MedicationDispense")a.set(o,s);else if(a.has(o)&&t==="MedicationRequest"){const c=a.get(o);return{model:n,type:t,sortOrder:c-.1}}return{model:n,type:t,sortOrder:s}});return D(m("sortOrder"),"desc",r).map(m("model"))}const b=le(["informationSourceNot","informationSource"]);function U(e,a={},r=!1){let n=r?Pe(e.resources,e.bundle):e.resources;return a.informationSource&&(n=n.filter(t=>{var s;return((s=t.informationSource)==null?void 0:s.type)===a.informationSource})),a.informationSourceNot&&(n=n.filter(t=>{var s;return((s=t.informationSource)==null?void 0:s.type)!==a.informationSourceNot})),n}async function it(e,a,r=[]){const[n={}]=r;try{const t=await K("MedicationStatement",e,{patientUPID:a.UPID,_include:"MedicationStatement:medication",...b(n)}),s=U(t,n,!1);return{bundle:t.bundle,medications:s}}catch(t){throw y("Failed fetching medications for patient",t)}}async function ot(e,a,r=[]){const[n={}]=r;try{const{bundle:t,resources:s}=await A("MedicationRequest",e,{patientUPID:a.UPID,...b(n)});return s.map(o=>new O(o,I(t)))}catch(t){throw y("Failed fetching medication requests for patient",t)}}async function ct(e,a,r=[]){const[n={}]=r;try{const{bundle:t,resources:s}=await A("MedicationDispense",e,{patientUPID:a.UPID,...b(n),_include:["MedicationRequest:medication","MedicationDispense:performer"]});return s.map(o=>new F(o,I(t)))}catch(t){throw y("Failed fetching medication dispenses for patient",t)}}async function lt(e,a,r=[]){const[n]=r;if(!n)return[];try{const{bundle:t,resources:s}=await z("MedicationStatement",e,{patientUPID:a.UPID,code:`${G}|${n}`});return s.map(o=>new h(o,I(t)))}catch(t){throw y("Failed fetching medication statements for patient",t)}}async function dt(e,a,r=[]){const[n={}]=r;try{const t=J.timeMetric("req.active_medications"),s=await Z("MedicationStatement",e,"ActiveMedications",{patientUPID:a.UPID,_include:"MedicationStatement:medication",...b(n)}),o=U(s,n,!0);return t(),{bundle:s.bundle,medications:o}}catch(t){throw y("Failed fetching medications for patient",t)}}function Pe(e,a){const r=ie(a);return e.filter(n=>De(n,r)!==void 0)}function ut(e,a){const r=e.filter(t=>!a.some(s=>s.rxNorm===t.rxNorm));return{builderMedications:a.map(t=>{var u,p;const s=v(f=>f.rxNorm===t.rxNorm,e);if(!s)return t;const o=L(t.resource),c=[ee,te,ae,ne,se,re];o.extension=(u=s.resource.extension)==null?void 0:u.filter(f=>c.includes(f.url));const l=L(v({url:Q},s.resource.extension));return l&&(l.url=W,(p=o.extension)==null||p.push(l)),new h(o,t.includedResources,t.revIncludes)}),otherProviderMedications:r}}function V(e){const a=e?new h(e).aggregatedFrom:[],r=g(m("reference"),de("/"),P),n=g(x(m("type")),M(_(r)))(a);return Ne(B,[(e==null?void 0:e.id)||"empty"],H(async(t,s)=>{try{if(!e)return{includedResources:{},medications:[]};const[o,c,l,u]=await Promise.all([w("MedicationStatement",t,s.UPID,n.MedicationStatement),w("MedicationAdministration",t,s.UPID,n.MedicationAdministration),w("MedicationRequest",t,s.UPID,n.MedicationRequest,["MedicationRequest:requester"]),w("MedicationDispense",t,s.UPID,n.MedicationDispense,["MedicationDispense:performer","MedicationDispense:prescription"])]),p=X(T([o.bundle,c.bundle,l.bundle,u.bundle])),f=T([...o.resources,...c.resources,...l.resources,...u.resources]).map(E=>new q(E,p));return{medications:be(we(f,(E,R)=>E.date===R.date&&E.resource.resourceType===R.resource.resourceType),"date","desc",!0),includedResources:p}}catch(o){throw new Error(`Failed fetching medication history for medication ${e==null?void 0:e.id}: ${o}`)}},"req.medication_history"))}function mt(e){const[a,r]=d.useState(),n=V(e);return d.useEffect(()=>{const{includedResources:t={},medications:s=[]}=n.data||{};if(a===void 0&&s.length){const o=g(_(m("resource")),ue(me("resourceType","MedicationRequest")),pe(c=>Date.parse(c.authoredOn)),_(c=>new q(c,t)),P,m("prescriber"))(s);r(o||"")}},[a,n.data]),{isLoading:n.isFetching,lastPrescriber:a}}function w(e,a,r,n=[],t=[]){return n.length>0?j(e,a,{_id:n.join(","),_include:[`${e}:patient`,`${e}:medication`,...t],"_include:iterate":"Patient:organization","patient.identifier":`${Y}|${r}`}):{resources:[],bundle:void 0}}const qe=10,C=ge(({medication:e})=>{const[a,r]=d.useState([]),n=V(e.resource),t=n.isLoading;return d.useEffect(()=>{if(n.data){const{medications:s}=n.data;r(Ae(s).map(Fe))}},[n.data]),t?i.createElement(i.Fragment,null,i.createElement("h2",{className:"ctw-text-lg ctw-font-semibold"},"Medication History"),i.createElement(he,{message:""})):i.createElement(i.Fragment,null,i.createElement("h2",{className:"ctw-text-lg ctw-font-semibold"},"Medication History"),a.length?i.createElement(S,{entries:a,limit:qe}):i.createElement("span",null,"No history available for this medication."))},"MedicationHistory");function Oe(e){var n,t;const a=e.resource,r=new h(a,e.includedResources);return{date:e.dateLocal,id:e.id,title:"Medication Reviewed",hideEmpty:!1,subtitle:(t=(n=r.patient)==null?void 0:n.organization)==null?void 0:t.name,data:[{label:"Status",value:fe(r.displayStatus)},{label:"Instructions",value:r.dosage}]}}function Fe(e){if(e.resourceType==="MedicationStatement")return Oe(e);if(e.resourceType==="MedicationRequest")return ke(e);if(e.resourceType==="MedicationDispense")return Ue(e);if(e.resourceType==="MedicationAdministration")return Ve(e);throw new Error(`Unknown medication resource type "${e.resourceType}"`)}function ke(e){const a=e.resource,{prescriber:r}=e,{name:n,address:t,telecom:s}=new O(a,e.includedResources).pharmacy,{numberOfRepeatsAllowed:o="",initialFill:c}=a.dispenseRequest||{},{value:l="",unit:u=""}=(c==null?void 0:c.quantity)||{};return{date:e.dateLocal,id:e.id,title:"Prescription Ordered",subtitle:r,hideEmpty:!1,data:[{label:"Quantity",value:[l,u].join(" ")},{label:"Refills Allowed",value:o},{label:"Instructions",value:e.dosage},{label:"Prescriber",value:r},{label:"Pharmacy",value:i.createElement(i.Fragment,null,n&&i.createElement("div",null,n),t&&i.createElement("div",null,t),s&&i.createElement("div",null,"T: ",s))}]}}function Ue(e){const a=e.resource,r=new F(a,e.includedResources),{quantityDisplay:n,supplied:t,performerDetails:s}=r,{name:o,address:c,telecom:l}=s;return{date:e.dateLocal,hideEmpty:!1,id:e.id,title:"Medication Filled",subtitle:k([n,t?`${t} supplied`:null]).join(", "),data:[{label:"Quantity",value:n},{label:"Days supply",value:t},{label:"Pharmacy",value:i.createElement(i.Fragment,null,o&&i.createElement("div",null,o),c&&i.createElement("div",null,c),l&&i.createElement("div",null,"T: ",l))}]}}function Ve(e){const a=e.resource,r=new _e(a,e.includedResources);return{id:e.id,date:e.dateLocal,hideEmpty:!1,title:"Medication Administered",subtitle:k([r.dosageDisplay,r.dosageRoute]).join(", "),data:[{label:"Dosage",value:r.dosageDisplay},{label:"Route",value:r.dosageRoute},{label:"Start Date",value:r.effectivePeriod.start},{label:"End Date",value:r.effectivePeriod.end}]}}try{C.displayName="MedicationHistory",C.__docgenInfo={description:"Displays the history of a medication",displayName:"MedicationHistory",props:{medication:{defaultValue:null,description:"",name:"medication",required:!0,type:{name:"MedicationStatementModel"}}}}}catch{}export{S as C,C as M,ct as a,lt as b,it as c,dt as d,ot as g,ut as s,mt as u};
