import{R as o}from"./index-6f814c40.js";import{s,p as a,o as d}from"./requests-9753dbad.js";import{P as c}from"./provider-meds-table-01bd2072.js";import{C as n,S as M}from"./patient-helper-9db8d359.js";import{P as l}from"./patient-provider-a45d74ab.js";import"./_commonjsHelpers-042e6b4d.js";import"./request-5a1df4c1.js";import"./patient-8f4a0ec9.js";import"./values-0b6ffb91.js";import"./_baseForOwn-d8306f34.js";import"./_equalByTag-aaf39779.js";import"./_baseIsEqual-c150f525.js";import"./_baseToString-4993715b.js";import"./sortBy-919d7262.js";import"./_baseClone-25b1595e.js";import"./_createSet-12ef9b81.js";import"./toNumber-9b8ac844.js";import"./_basePickBy-239377e6.js";import"./mapValues-21907523.js";import"./isPlainObject-8e58b46f.js";import"./uniq-f5468222.js";import"./use-medications-f70bdafd.js";import"./data-list-254aa0b0.js";import"./drawer-ed34104d.js";import"./index-74f03c09.js";import"./use-watch-a9671586.js";import"./index-6de6b113.js";import"./medication-history-ac0fd6a9.js";import"./collapsible-data-list-details-f7571cef.js";import"./document-icon-581c51b2.js";import"./error-boundary-4145d802.js";import"./use-breakpoints-61de5753.js";import"./sortBy-be5f7eb4.js";import"./getPrototypeOf-9c757e77.js";import"./loading-c7ff698a.js";import"./spinner-66aa4ba7.js";import"./sort-0f00e62c.js";import"./isString-35d4a3f2.js";import"./uniqWith-f1edcb30.js";import"./table-fb9c18d0.js";import"./use-filtered-sorted-data-7cb89880.js";import"./index-4d501b15.js";import"./extends-98964cd2.js";import"./calculate-active-index-048f6a58.js";import"./_commonjs-dynamic-modules-302442b1.js";const mr={tags:["autodocs"],component:c,args:{sortColumn:"display",sortOrder:"asc"},decorators:[(m,{args:p})=>o.createElement(n,{env:"dev",authToken:"12345",builderId:"12345"},o.createElement(l,{patientID:"007",systemURL:M},o.createElement(m,{args:p})))]},r={...s({providerMedications:a,otherProviderMedications:d})};var t,i,e;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  ...setupMedicationMocks({
    providerMedications,
    otherProviderMedications
  })
}`,...(e=(i=r.parameters)==null?void 0:i.docs)==null?void 0:e.source}}};const pr=["Basic"];export{r as Basic,pr as __namedExportsOrder,mr as default};
