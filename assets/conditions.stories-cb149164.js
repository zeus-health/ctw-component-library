import{r as c,R as e}from"./index-6f814c40.js";import{w as p,u as l,a as me,b as E,e as f}from"./index-9d91a283.js";import{c as B}from"./index-74f03c09.js";import{b as Ne,u as ue,q as He,$ as xe,c as Se,L as ke,d as _e,e as Me,f as Pe,g as qe,w as pe,h as Ie,i as De,j as Fe,k as Ve,T as Le,D as Oe,m as $e,n as ze,o as Q,p as We,C as je,a as Ge,S as Ue}from"./patient-allergies-0ae41700.js";import{u as Ye,c as S,P as Je,t as Xe,C as Ze,M as Ke,o as Qe,a as et,g as tt,b as ee,f as nt,s as we,d as at,p as ot,e as te}from"./requests-1e32c063.js";import{T as it}from"./table-77997dbe.js";import{u as st,P as rt}from"./use-patient-history-e2b8db04.js";import"./_baseToString-7c0e3f59.js";import"./_baseClone-17ec433b.js";import{d as ct}from"./sortBy-a390368e.js";import"./_equalByTag-eda72788.js";import"./_baseForOwn-7324d3a8.js";import"./_createSet-6ff8e1d4.js";import"./_commonjsHelpers-042e6b4d.js";import"./isEqual-298b6ab1.js";import"./_baseIsEqual-7d59e24c.js";import"./uniq-8676ca12.js";import"./index-63320c34.js";import"./index-356e4a49.js";import"./request-47bfd586.js";import"./drawer-39fcad7e.js";import"./index-6de6b113.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./mapValues-13598fe6.js";import"./action-list-fa5a295c.js";import"./isPlainObject-f51be120.js";import"./_basePickBy-fa3aec3b.js";import"./data-list-254aa0b0.js";import"./extends-b0154772.js";import"./spinner-66aa4ba7.js";import"./isString-933c0e0c.js";import"./debounce-5029c56d.js";import"./toNumber-d7ce3bd9.js";import"./modal-ccda-2a764957.js";import"./coding-list-1d7c950f.js";function dt(n,t){return c.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:2,stroke:"currentColor","aria-hidden":"true",ref:t},n),c.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"}))}const lt=c.forwardRef(dt),mt=lt;function D({className:n}){return e.createElement("div",{className:B("ctw-conditions",n)},e.createElement("div",{className:"ctw-heading-container"},e.createElement("div",{className:"ctw-title"},"Conditions")),e.createElement("div",{className:"ctw-p-5"},e.createElement(Ne,{header:"Conditions Unavailable"},e.createElement("div",null,"We are unable to access Condition information for this patient."),e.createElement("div",null,"Contact your system administrator or customer service for assistance."))))}try{D.displayName="ConditionsNoPatient",D.__docgenInfo={description:"",displayName:"ConditionsNoPatient",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}function F({children:n,menuItems:t,triggerClassName:o,telemetryNamespace:a="unknown"}){const{ctwProviderRef:d}=ue(),[u,m]=c.useState(!1);async function i(s){m(!0),await s.action(),m(!1)}return e.createElement(He,null,e.createElement(xe,{modal:!1},e.createElement(Se,{className:B("ctw-btn-clear ctw-link",o),"aria-label":"dropdown"},u&&e.createElement(ke,{message:""}),!u&&n),e.createElement(_e,{container:d.current},e.createElement(Me,{"data-zus-telemetry-namespace":`Menu[${a}]`,onFocusOutside:s=>s.preventDefault(),className:"ctw-dropdown-menu-container",collisionPadding:10},e.createElement(Pe,{asChild:!0},e.createElement("div",{className:"ctw-dropdown-menu-arrow"})),t.map(s=>e.createElement(qe,{"data-zus-telemetry-click":`Item[${s.name}]`,onClick:()=>i(s),key:s.name,className:B(s.className,"ctw-dropdown-menu-item")},s.name))))))}try{F.displayName="DropdownMenu",F.__docgenInfo={description:"",displayName:"DropdownMenu",props:{menuItems:{defaultValue:null,description:"",name:"menuItems",required:!0,type:{name:"MenuItem[]"}},telemetryNamespace:{defaultValue:{value:"unknown"},description:"",name:"telemetryNamespace",required:!1,type:{name:"string"}},triggerClassName:{defaultValue:null,description:"",name:"triggerClassName",required:!1,type:{name:"Argument"}}}}}catch{}function A({className:n,conditions:t,rowMenuActions:o,hideMenu:a,sort:d={columnTitle:"Last Recorded",dir:"desc"},onSort:u,...m}){const i=[{title:"Condition",dataIndex:"display",widthPercent:40,minWidth:320,sortIndices:[{index:"display"},{index:"recorded",dir:"desc"}]},{title:"Category",dataIndex:"ccsGrouping",widthPercent:25,minWidth:192,sortIndices:[{index:"ccsGrouping"},{index:"display",dir:"asc"}]},{title:"Status",render:s=>e.createElement("div",{className:"ctw-capitalize"},e.createElement("div",{className:"ctw-text-content-black"},s.clinicalStatus),e.createElement("div",null,s.isArchived?"Archived":s.verificationStatus)),widthPercent:17.5,minWidth:128,sortIndices:[{index:"clinicalStatus"},{index:"verificationStatus"},{index:"recorded",dir:"desc"}]},{title:"Last Recorded",dataIndex:"recordedDate",widthPercent:17.5,minWidth:132,sortIndices:[{index:"recorded"},{index:"display",dir:"asc"}]}];return a||i.push({className:"ctw-table-action-column",render:s=>e.createElement(F,{menuItems:o(s),telemetryNamespace:"ConditionsTableBase"},e.createElement(mt,{className:"ctw-w-5"}))}),e.createElement(it,{className:n,records:t,columns:i,sort:d,onSort:u,...m})}try{A.displayName="ConditionsTableBase",A.__docgenInfo={description:"",displayName:"ConditionsTableBase",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | (string & Mapping) | (string & ArgumentArray)"}},conditions:{defaultValue:null,description:"",name:"conditions",required:!0,type:{name:"ConditionModel[]"}},rowMenuActions:{defaultValue:null,description:"",name:"rowMenuActions",required:!0,type:{name:"(condition: ConditionModel) => MenuItem[]"}},hideMenu:{defaultValue:null,description:"",name:"hideMenu",required:!0,type:{name:"boolean"}},handleRowClick:{defaultValue:null,description:"",name:"handleRowClick",required:!1,type:{name:"((record: ConditionModel) => void)"}},RowActions:{defaultValue:null,description:"",name:"RowActions",required:!1,type:{name:"ComponentType<{ record: ConditionModel; }>"}},getRowClassName:{defaultValue:null,description:"",name:"getRowClassName",required:!1,type:{name:"((record: ConditionModel) => Argument)"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}},emptyMessage:{defaultValue:null,description:"Displayed when we have 0 records.",name:"emptyMessage",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},showTableHead:{defaultValue:null,description:"",name:"showTableHead",required:!1,type:{name:"boolean"}},stacked:{defaultValue:null,description:"",name:"stacked",required:!1,type:{name:"boolean"}},sort:{defaultValue:{value:'{ columnTitle: "Last Recorded", dir: "desc" }'},description:"",name:"sort",required:!1,type:{name:"TableSort"}},onSort:{defaultValue:null,description:"",name:"onSort",required:!1,type:{name:"((sort: TableSort) => void)"}},hidePagination:{defaultValue:null,description:"",name:"hidePagination",required:!1,type:{name:"boolean"}}}}}catch{}const V=pe(({readOnly:n,onClick:t})=>e.createElement("div",{className:"ctw-flex ctw-justify-center ctw-space-x-2 ctw-border ctw-border-solid ctw-border-divider-light ctw-p-5","data-zus-telemetry-namespace":"PatientHistoryMessage"},n?e.createElement("span",null,"There are no condition records available."):e.createElement(e.Fragment,null,e.createElement("div",{className:"ctw-flex ctw-justify-center ctw-text-icon-default"},"Retrieve patient clinical history."),e.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link",onClick:t,"data-zus-telemetry-click":"Request records"},"Request Records"))),"PatientHistoryMessage");try{V.displayName="PatientHistoryMessage",V.__docgenInfo={description:"",displayName:"PatientHistoryMessage",props:{readOnly:{defaultValue:null,description:"",name:"readOnly",required:!0,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLButtonElement>"}}}}}catch{}const ut="There are no conditions in this patient's record.",pt="There are no conditions available.",ne="There was an error fetching conditions for this patient. Refresh the page or contact your organization's technical support if this issue persists.",L=pe(({className:n,readOnly:t=!1,hideRequestRecords:o=!1})=>{const a=c.useRef(null),d=Ie(a),[u,m]=c.useState(!1),[i,s]=c.useState(!1),$=Ye(),[ye,z]=c.useState([]),[fe,N]=c.useState([]),[T,ve]=c.useState(!1),[W,j]=c.useState("Add"),[Re,H]=c.useState(S),[ge,x]=c.useState(),[R,G]=c.useState(),w=De(),y=Fe(),h=Ve(),{getRequestContext:U}=ue(),[Y,J]=c.useState(),Ce=y.isError?ne:ut,he=h.isError?ne:pt,Ee=r=>{w.data&&(m(!0),j("Edit"),H(et),x(tt({condition:r})),G(r))},be=r=>{s(!0),G(r)},Te=r=>{const C=ze(r.resource);w.data&&(H(S),m(!0),j("Add"),x(ee({condition:new Q(C)})))},X=()=>{if(!w.data)return;const r=We(w.data.id);m(!0),H(S),x(ee({condition:new Q(r)}))},Be=e.createElement("button",{className:"ctw-btn-primary",type:"button",onClick:X,"data-zus-telemetry-click":"Add new condition (Empty table)"},"Add Condition"),g=st(),Z=!!g.lastRetrievedAt||h.data&&h.data.length>0;return c.useEffect(()=>{async function r(){const C=y.data,K=h.data;C&&(z(C.filter(Ae=>Ae.active||T)),N(K?nt(K,C,T):[])),y.error&&(z([]),N([]))}r()},[T,w.data,y.data,h.data,y.error]),w.isError?e.createElement(D,{className:n}):e.createElement("div",{ref:a,"data-zus-telemetry-namespace":"Conditions",className:B("ctw-conditions",n,{"ctw-conditions-stacked":d.sm})},!t&&e.createElement("div",{className:"ctw-conditions-heading-container"},e.createElement("div",{className:"ctw-title"},"Conditions"),e.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link","data-zus-telemetry-click":"Add new condition",onClick:X},"+ Add Condition")),e.createElement("div",{className:"ctw-conditions-body-container"},e.createElement("div",{className:"ctw-space-y-3"},e.createElement("div",{className:"ctw-conditions-title-container"},e.createElement("div",{className:"ctw-title"},"Patient Record"),e.createElement(Le,{onFormChange:()=>ve(!T),toggleProps:{name:"conditions",text:"Include Inactive"}})),e.createElement(A,{stacked:d.sm,conditions:ye,isLoading:y.isLoading,hideMenu:t,sort:Y,onSort:r=>J(r),emptyMessage:e.createElement(e.Fragment,null,e.createElement("div",null,Ce),!y.isError&&!t&&e.createElement("div",{className:"ctw-mt-5"},Be)),rowMenuActions:r=>[{name:"Edit",action:async()=>{Ee(r)}},{name:"View History",action:async()=>{$({condition:r,readOnly:t})}},{name:"Delete",className:"dangerous",action:async()=>{be(r)}}]})),e.createElement("div",{className:"ctw-space-y-3"},e.createElement(rt,{status:g.lastStatus,date:g.dateCreatedAt}),e.createElement("div",{className:"ctw-conditions-title-container"},e.createElement("div",{className:"ctw-title"},"Other Provider Records"),e.createElement("div",{className:"ctw-flex ctw-items-baseline ctw-space-x-2"},g.lastRetrievedAt&&e.createElement(Je,{patientHistory:g,message:"Last Retrieved"}),Z&&!t&&!o&&e.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link",onClick:g.openHistoryRequestDrawer,"data-zus-telemetry-click":"Request records"},"Request Records"))),Z?e.createElement(A,{className:"ctw-conditions-not-reviewed",stacked:d.sm,conditions:fe,sort:Y,onSort:r=>J(r),isLoading:h.isLoading||y.isLoading,hideMenu:t,emptyMessage:he,rowMenuActions:r=>[{name:"Add",action:async()=>{Te(r)}},{name:"View History",action:async()=>{$({condition:r,readOnly:!0})}},{name:r.isArchived?"Un-Archive":"Archive",action:async()=>{const C=await U();await Xe(r,C)}}]}):e.createElement(V,{readOnly:t||o,onClick:g.openHistoryRequestDrawer}))),w.data&&e.createElement(Oe,{title:`${W} Condition`,header:W==="Edit"&&R&&e.createElement(Ze,{condition:R}),action:ct($e)(R,w.data.id),data:ge,schema:Re,isOpen:u,onClose:()=>m(!1)}),R&&w.data&&e.createElement(Ke,{resource:R,resourceName:R.display||"unnamed condition",onClose:()=>s(!1),isOpen:i,onDelete:async()=>{const r=await U();await Qe(R.resource,r)}}))},"Conditions");try{L.displayName="Conditions",L.__docgenInfo={description:"",displayName:"Conditions",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},hideRequestRecords:{defaultValue:null,description:"",name:"hideRequestRecords",required:!1,type:{name:"boolean"}}}}}catch{}function O(n){const t=p(n),o=p(t.getByRole("dialog"));return{conditionSearch:a=>l.type(o.getByPlaceholderText("Type to search"),a),selectCondition:async a=>l.click(await o.findByRole("option",{name:a})),status:a=>l.selectOptions(o.getByTestId("form-field-status"),a),onset:a=>l.type(o.getByTestId("form-field-onset"),a),abatement:a=>l.type(o.getByTestId("form-field-abatement"),a),note:a=>l.type(o.getByTestId("form-field-note"),a),cancel:()=>l.click(o.getByRole("button",{name:"Cancel"})),save:async()=>{l.click(o.getByRole("button",{name:"Save"})),await me(()=>t.queryByRole("dialog"))}}}function ae(n,t){const o=p(n),a=p(t);async function d(i){l.click(m(i).getByRole("button",{name:/dropdown/i})),await o.findAllByRole("menuitem")}function u(i){l.click(o.getByRole("menuitem",{name:i}))}function m(i){const s=a.getAllByRole("rowgroup")[1];return p(p(s).queryAllByRole("row")[i])}return{table:a,toHaveRowCount:async i=>{const s=a.getAllByRole("rowgroup")[1];i===0?await E(()=>f(s).toBeFalsy()):await E(()=>f(p(s).queryAllByRole("row")).toHaveLength(i))},toHaveRowWithText:(i,s)=>{m(i).getByText(s)},add:async i=>{await d(i),u("Add")},delete:async i=>{await d(i),u("Delete"),l.click(await o.findByRole("button",{name:/remove/i})),await me(()=>o.queryByRole("dialog"))},edit:async i=>{await d(i),u("Edit")},viewHistory:async i=>{await d(i),u("View History")}}}async function b(n){const t=p(n);await E(()=>f(t.queryAllByRole("table")).toHaveLength(2));const o=t.queryAllByRole("table"),a=ae(n,o[0]),d=ae(n,o[1]);return await a.table.findAllByText("active"),await d.table.findAllByText("active"),{clickAddCondition:()=>l.click(t.getByRole("button",{name:"+ Add Condition"})),toggleInactive:()=>l.click(t.getByLabelText("Include Inactive")),patientRecord:a,otherProvider:d}}const Jt={component:L,tags:["autodocs"],argTypes:{className:{options:["Blank","Fixed Width"],control:"select",mapping:{Blank:"","Fixed Width":"ctw-m-auto ctw-max-w-[600px]"}}},args:{className:"Blank",readOnly:!1,hideRequestRecords:!1},decorators:[(n,{args:t})=>e.createElement(je,{env:"dev",authToken:"dummy-token",builderId:"b123"},e.createElement(Ge,{patientID:"u12345",systemURL:Ue},e.createElement(n,{args:t})))]},v={...we({otherConditions:at,patientConditions:ot})},k={...we({otherConditions:te,patientConditions:te})},_={...v,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2);const o="Heart failure (disorder)";t.clickAddCondition();const a=O(n);a.conditionSearch("heart"),await a.selectCondition(o),a.status("Active"),a.onset("2020-02-14"),await a.save(),await t.patientRecord.toHaveRowCount(3),f(await t.patientRecord.table.findByText(o)).toBeTruthy()}},M={...v,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2),await t.otherProvider.add(2),await O(n).save(),await t.patientRecord.toHaveRowCount(3),f(await t.patientRecord.table.findByText(/iron deficiency/i)).toBeTruthy()}},P={...v,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2),await t.patientRecord.edit(0);const o=O(n);o.note("hello world"),await o.save(),t.patientRecord.toHaveRowWithText(0,/confirmed/i)}},q={...v,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2),await t.patientRecord.delete(0),await t.patientRecord.toHaveRowCount(1),t.toggleInactive(),await t.patientRecord.toHaveRowCount(3),t.patientRecord.toHaveRowWithText(1,/entered-in-error/i),t.toggleInactive(),await t.patientRecord.toHaveRowCount(1)}},I={...v,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2),await t.patientRecord.viewHistory(0);const o=p(n);await E(()=>f(o.queryAllByRole("dialog")).toHaveLength(1));const a=p(o.getByRole("dialog"));f(await a.findByText(/generalized anxiety disorder/i)).toBeTruthy(),await E(()=>f(a.getAllByRole("button",{name:/details/i})).toHaveLength(3)),l.click(a.getAllByRole("button",{name:/close/i})[0])}};var oe;v.parameters={...v.parameters,storySource:{source:`{
  ...setupConditionMocks({
    otherConditions,
    patientConditions
  })
}`,...(oe=v.parameters)==null?void 0:oe.storySource}};var ie;k.parameters={...k.parameters,storySource:{source:`{
  ...setupConditionMocks({
    otherConditions: emptyConditions,
    patientConditions: emptyConditions
  })
}`,...(ie=k.parameters)==null?void 0:ie.storySource}};var se;_.parameters={..._.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    const newCondition = "Heart failure (disorder)";
    conditions.clickAddCondition();
    const conditionForm = conditionFormDrawer(canvasElement);
    conditionForm.conditionSearch("heart");
    await conditionForm.selectCondition(newCondition);
    conditionForm.status("Active");
    conditionForm.onset("2020-02-14");
    await conditionForm.save();
    await conditions.patientRecord.toHaveRowCount(3);
    expect(await conditions.patientRecord.table.findByText(newCondition)).toBeTruthy();
  }
}`,...(se=_.parameters)==null?void 0:se.storySource}};var re;M.parameters={...M.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.otherProvider.add(2);
    const conditionForm = conditionFormDrawer(canvasElement);
    await conditionForm.save();
    await conditions.patientRecord.toHaveRowCount(3);
    expect(await conditions.patientRecord.table.findByText(/iron deficiency/i)).toBeTruthy();
  }
}`,...(re=M.parameters)==null?void 0:re.storySource}};var ce;P.parameters={...P.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.edit(0);
    const conditionForm = conditionFormDrawer(canvasElement);
    conditionForm.note("hello world");
    await conditionForm.save();
    conditions.patientRecord.toHaveRowWithText(0, /confirmed/i);
  }
}`,...(ce=P.parameters)==null?void 0:ce.storySource}};var de;q.parameters={...q.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.delete(0);
    await conditions.patientRecord.toHaveRowCount(1);
    conditions.toggleInactive();
    await conditions.patientRecord.toHaveRowCount(3);
    conditions.patientRecord.toHaveRowWithText(1, /entered-in-error/i);
    conditions.toggleInactive();
    await conditions.patientRecord.toHaveRowCount(1);
  }
}`,...(de=q.parameters)==null?void 0:de.storySource}};var le;I.parameters={...I.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.viewHistory(0);
    const canvas = within(canvasElement);
    await waitFor(() => expect(canvas.queryAllByRole("dialog")).toHaveLength(1));
    const drawer = within(canvas.getByRole("dialog"));
    expect(await drawer.findByText(/generalized anxiety disorder/i)).toBeTruthy();
    await waitFor(() => expect(drawer.getAllByRole("button", {
      name: /details/i
    })).toHaveLength(3));
    userEvent.click(drawer.getAllByRole("button", {
      name: /close/i
    })[0]);
  }
}`,...(le=I.parameters)==null?void 0:le.storySource}};const Xt=["Basic","Empty","TestAdd","TestAddOther","TestEdit","TestDelete","TestViewHistory"];export{v as Basic,k as Empty,_ as TestAdd,M as TestAddOther,q as TestDelete,P as TestEdit,I as TestViewHistory,Xt as __namedExportsOrder,Jt as default};
//# sourceMappingURL=conditions.stories-cb149164.js.map
