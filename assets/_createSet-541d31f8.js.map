{"version":3,"file":"_createSet-541d31f8.js","sources":["../../node_modules/lodash/_arrayIncludesWith.js","../../node_modules/lodash/_createSet.js"],"sourcesContent":["/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n"],"names":["arrayIncludesWith","array","value","comparator","index","length","_arrayIncludesWith","Set","require$$0","noop","require$$1","setToArray","require$$2","INFINITY","createSet","values","_createSet"],"mappings":"sGASA,SAASA,EAAkBC,EAAOC,EAAOC,EAAY,CAInD,QAHIC,EAAQ,GACRC,EAASJ,GAAS,KAAO,EAAIA,EAAM,OAEhC,EAAEG,EAAQC,GACf,GAAIF,EAAWD,EAAOD,EAAMG,EAAM,EAChC,MAAO,GAGX,MAAO,EACT,CAEA,IAAAE,EAAiBN,ECrBbO,EAAMC,EACNC,EAAOC,EACPC,EAAaC,EAGbC,EAAW,EAAI,EASfC,EAAcP,GAAQ,EAAII,EAAW,IAAIJ,EAAI,CAAE,CAAA,EAAE,CAAC,CAAC,EAAE,IAAOM,EAAmB,SAASE,EAAQ,CAClG,OAAO,IAAIR,EAAIQ,CAAM,CACvB,EAF4EN,EAI5EO,EAAiBF"}