import{r as c,R as e}from"./index-6f814c40.js";import{w as p,u as l,a as ue,b as E,e as f}from"./index-9d91a283.js";import{c as A}from"./index-74f03c09.js";import{b as He,u as pe,q as Se,$ as xe,c as _e,L as ke,d as Me,e as qe,f as Pe,g as Ie,w as we,h as De,i as Fe,j as Ve,k as Le,m as Oe,T as $e,D as ze,n as We,o as je,p as ee,r as Ge,C as Ue,a as Ye,S as Je}from"./patient-allergies-4675059b.js";import{u as Xe,c as x,t as Ze,C as Ke,M as Qe,o as et,a as tt,g as nt,b as te,f as at,s as ye,d as ot,p as it,e as ne}from"./requests-d959a302.js";import{T as st}from"./table-8acfb15e.js";import{u as rt,P as ct}from"./use-patient-history-dc3bd323.js";import"./_baseToString-7c0e3f59.js";import"./_baseClone-17ec433b.js";import{d as dt}from"./sortBy-a390368e.js";import"./_equalByTag-eda72788.js";import"./_baseForOwn-7324d3a8.js";import"./_createSet-6ff8e1d4.js";import"./_commonjsHelpers-042e6b4d.js";import"./isEqual-298b6ab1.js";import"./_baseIsEqual-7d59e24c.js";import"./uniq-8676ca12.js";import"./index-63320c34.js";import"./index-356e4a49.js";import"./request-47bfd586.js";import"./drawer-39fcad7e.js";import"./index-6de6b113.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./mapValues-13598fe6.js";import"./action-list-fa5a295c.js";import"./isPlainObject-f51be120.js";import"./_basePickBy-fa3aec3b.js";import"./data-list-254aa0b0.js";import"./extends-b0154772.js";import"./spinner-66aa4ba7.js";import"./isString-933c0e0c.js";import"./debounce-5029c56d.js";import"./toNumber-d7ce3bd9.js";import"./modal-ccda-31e18a6b.js";import"./coding-list-1d7c950f.js";function lt(n,t){return c.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:2,stroke:"currentColor","aria-hidden":"true",ref:t},n),c.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"}))}const mt=c.forwardRef(lt),ut=mt;function D({className:n}){return e.createElement("div",{className:A("ctw-conditions",n)},e.createElement("div",{className:"ctw-heading-container"},e.createElement("div",{className:"ctw-title"},"Conditions")),e.createElement("div",{className:"ctw-p-5"},e.createElement(He,{header:"Conditions Unavailable"},e.createElement("div",null,"We are unable to access Condition information for this patient."),e.createElement("div",null,"Contact your system administrator or customer service for assistance."))))}try{D.displayName="ConditionsNoPatient",D.__docgenInfo={description:"",displayName:"ConditionsNoPatient",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}function F({children:n,menuItems:t,triggerClassName:o,telemetryNamespace:a="unknown"}){const{ctwProviderRef:d}=pe(),[u,m]=c.useState(!1);async function i(s){m(!0),await s.action(),m(!1)}return e.createElement(Se,null,e.createElement(xe,{modal:!1},e.createElement(_e,{className:A("ctw-btn-clear ctw-link",o),"aria-label":"dropdown"},u&&e.createElement(ke,{message:""}),!u&&n),e.createElement(Me,{container:d.current},e.createElement(qe,{"data-zus-telemetry-namespace":`Menu[${a}]`,onFocusOutside:s=>s.preventDefault(),className:"ctw-dropdown-menu-container",collisionPadding:10},e.createElement(Pe,{asChild:!0},e.createElement("div",{className:"ctw-dropdown-menu-arrow"})),t.map(s=>e.createElement(Ie,{"data-zus-telemetry-click":`Item[${s.name}]`,onClick:()=>i(s),key:s.name,className:A(s.className,"ctw-dropdown-menu-item")},s.name))))))}try{F.displayName="DropdownMenu",F.__docgenInfo={description:"",displayName:"DropdownMenu",props:{menuItems:{defaultValue:null,description:"",name:"menuItems",required:!0,type:{name:"MenuItem[]"}},telemetryNamespace:{defaultValue:{value:"unknown"},description:"",name:"telemetryNamespace",required:!1,type:{name:"string"}},triggerClassName:{defaultValue:null,description:"",name:"triggerClassName",required:!1,type:{name:"Argument"}}}}}catch{}function N({className:n,conditions:t,rowMenuActions:o,hideMenu:a,sort:d={columnTitle:"Last Recorded",dir:"desc"},onSort:u,...m}){const i=[{title:"Condition",dataIndex:"display",widthPercent:40,minWidth:320,sortIndices:[{index:"display"},{index:"recorded",dir:"desc"}]},{title:"Category",dataIndex:"ccsGrouping",widthPercent:25,minWidth:192,sortIndices:[{index:"ccsGrouping"},{index:"display",dir:"asc"}]},{title:"Status",render:s=>e.createElement("div",{className:"ctw-capitalize"},e.createElement("div",{className:"ctw-text-content-black"},s.clinicalStatus),e.createElement("div",null,s.isArchived?"Archived":s.verificationStatus)),widthPercent:17.5,minWidth:128,sortIndices:[{index:"clinicalStatus"},{index:"verificationStatus"},{index:"recorded",dir:"desc"}]},{title:"Last Recorded",dataIndex:"recordedDate",widthPercent:17.5,minWidth:132,sortIndices:[{index:"recorded"},{index:"display",dir:"asc"}]}];return a||i.push({className:"ctw-table-action-column",render:s=>e.createElement(F,{menuItems:o(s),telemetryNamespace:"ConditionsTableBase"},e.createElement(ut,{className:"ctw-w-5"}))}),e.createElement(st,{className:n,records:t,columns:i,sort:d,onSort:u,...m})}try{N.displayName="ConditionsTableBase",N.__docgenInfo={description:"",displayName:"ConditionsTableBase",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | (string & Mapping) | (string & ArgumentArray)"}},conditions:{defaultValue:null,description:"",name:"conditions",required:!0,type:{name:"ConditionModel[]"}},rowMenuActions:{defaultValue:null,description:"",name:"rowMenuActions",required:!0,type:{name:"(condition: ConditionModel) => MenuItem[]"}},hideMenu:{defaultValue:null,description:"",name:"hideMenu",required:!0,type:{name:"boolean"}},handleRowClick:{defaultValue:null,description:"",name:"handleRowClick",required:!1,type:{name:"((record: ConditionModel) => void)"}},RowActions:{defaultValue:null,description:"",name:"RowActions",required:!1,type:{name:"ComponentType<{ record: ConditionModel; }>"}},getRowClassName:{defaultValue:null,description:"",name:"getRowClassName",required:!1,type:{name:"((record: ConditionModel) => Argument)"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}},emptyMessage:{defaultValue:null,description:"Displayed when we have 0 records.",name:"emptyMessage",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},showTableHead:{defaultValue:null,description:"",name:"showTableHead",required:!1,type:{name:"boolean"}},stacked:{defaultValue:null,description:"",name:"stacked",required:!1,type:{name:"boolean"}},sort:{defaultValue:{value:'{ columnTitle: "Last Recorded", dir: "desc" }'},description:"",name:"sort",required:!1,type:{name:"TableSort"}},onSort:{defaultValue:null,description:"",name:"onSort",required:!1,type:{name:"((sort: TableSort) => void)"}},hidePagination:{defaultValue:null,description:"",name:"hidePagination",required:!1,type:{name:"boolean"}}}}}catch{}const V=we(({readOnly:n,onClick:t})=>e.createElement("div",{className:"ctw-flex ctw-justify-center ctw-space-x-2 ctw-border ctw-border-solid ctw-border-divider-light ctw-p-5","data-zus-telemetry-namespace":"PatientHistoryMessage"},n?e.createElement("span",null,"There are no condition records available."):e.createElement(e.Fragment,null,e.createElement("div",{className:"ctw-flex ctw-justify-center ctw-text-icon-default"},"Retrieve patient clinical history."),e.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link",onClick:t,"data-zus-telemetry-click":"Request records"},"Request Records"))),"PatientHistoryMessage");try{V.displayName="PatientHistoryMessage",V.__docgenInfo={description:"",displayName:"PatientHistoryMessage",props:{readOnly:{defaultValue:null,description:"",name:"readOnly",required:!0,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLButtonElement>"}}}}}catch{}const L=({patientHistory:n,message:t})=>{switch(n==null?void 0:n.lastStatus){case"in_progress":return e.createElement("div",{className:"ctw-text-sm ctw-italic ctw-text-black"},t," ",De(n.lastRetrievedAt));default:return null}};try{L.displayName="PatientHistoryTableHeaderMessage",L.__docgenInfo={description:"",displayName:"PatientHistoryTableHeaderMessage",props:{patientHistory:{defaultValue:null,description:"",name:"patientHistory",required:!1,type:{name:"{ openHistoryRequestDrawer: () => Promise<void>; lastRetrievedAt?: string; lastStatus?: string; dateCreatedAt?: string | undefined; } | undefined"}},message:{defaultValue:null,description:"",name:"message",required:!1,type:{name:"string"}}}}}catch{}const pt="There are no conditions in this patient's record.",wt="There are no conditions available.",ae="There was an error fetching conditions for this patient. Refresh the page or contact your organization's technical support if this issue persists.",O=we(({className:n,readOnly:t=!1,hideRequestRecords:o=!1})=>{const a=c.useRef(null),d=Fe(a),[u,m]=c.useState(!1),[i,s]=c.useState(!1),z=Xe(),[fe,W]=c.useState([]),[ge,B]=c.useState([]),[T,ve]=c.useState(!1),[j,G]=c.useState("Add"),[Re,H]=c.useState(x),[Ce,S]=c.useState(),[v,U]=c.useState(),w=Ve(),y=Le(),h=Oe(),{getRequestContext:Y}=pe(),[J,X]=c.useState(),he=y.isError?ae:pt,Ee=h.isError?ae:wt,be=r=>{w.data&&(m(!0),G("Edit"),H(tt),S(nt({condition:r})),U(r))},Te=r=>{s(!0),U(r)},Ae=r=>{const C=je(r.resource);w.data&&(H(x),m(!0),G("Add"),S(te({condition:new ee(C)})))},Z=()=>{if(!w.data)return;const r=Ge(w.data.id);m(!0),H(x),S(te({condition:new ee(r)}))},Ne=e.createElement("button",{className:"ctw-btn-primary",type:"button",onClick:Z,"data-zus-telemetry-click":"Add new condition (Empty table)"},"Add Condition"),R=rt(),K=!!R.lastRetrievedAt||h.data&&h.data.length>0;return c.useEffect(()=>{async function r(){const C=y.data,Q=h.data;C&&(W(C.filter(Be=>Be.active||T)),B(Q?at(Q,C,T):[])),y.error&&(W([]),B([]))}r()},[T,w.data,y.data,h.data,y.error]),w.isError?e.createElement(D,{className:n}):e.createElement("div",{ref:a,"data-zus-telemetry-namespace":"Conditions",className:A("ctw-conditions",n,{"ctw-conditions-stacked":d.sm})},!t&&e.createElement("div",{className:"ctw-conditions-heading-container"},e.createElement("div",{className:"ctw-title"},"Conditions"),e.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link","data-zus-telemetry-click":"Add new condition",onClick:Z},"+ Add Condition")),e.createElement("div",{className:"ctw-conditions-body-container"},e.createElement("div",{className:"ctw-space-y-3"},e.createElement("div",{className:"ctw-conditions-title-container"},e.createElement("div",{className:"ctw-title"},"Patient Record"),e.createElement($e,{onFormChange:()=>ve(!T),toggleProps:{name:"conditions",text:"Include Inactive"}})),e.createElement(N,{stacked:d.sm,conditions:fe,isLoading:y.isLoading,hideMenu:t,sort:J,onSort:r=>X(r),emptyMessage:e.createElement(e.Fragment,null,e.createElement("div",null,he),!y.isError&&!t&&e.createElement("div",{className:"ctw-mt-5"},Ne)),rowMenuActions:r=>[{name:"Edit",action:async()=>{be(r)}},{name:"View History",action:async()=>{z({condition:r,readOnly:t})}},{name:"Delete",className:"dangerous",action:async()=>{Te(r)}}]})),e.createElement("div",{className:"ctw-space-y-3"},e.createElement(ct,{status:R.lastStatus,date:R.dateCreatedAt}),e.createElement("div",{className:"ctw-conditions-title-container"},e.createElement("div",{className:"ctw-title"},"Other Provider Records"),e.createElement("div",{className:"ctw-flex ctw-items-baseline ctw-space-x-2"},R.lastRetrievedAt&&e.createElement(L,{patientHistory:R,message:"Last Retrieved"}),K&&!t&&!o&&e.createElement("button",{type:"button",className:"ctw-btn-clear ctw-link",onClick:R.openHistoryRequestDrawer,"data-zus-telemetry-click":"Request records"},"Request Records"))),K?e.createElement(N,{className:"ctw-conditions-not-reviewed",stacked:d.sm,conditions:ge,sort:J,onSort:r=>X(r),isLoading:h.isLoading||y.isLoading,hideMenu:t,emptyMessage:Ee,rowMenuActions:r=>[{name:"Add",action:async()=>{Ae(r)}},{name:"View History",action:async()=>{z({condition:r,readOnly:!0})}},{name:r.isArchived?"Un-Archive":"Archive",action:async()=>{const C=await Y();await Ze(r,C)}}]}):e.createElement(V,{readOnly:t||o,onClick:R.openHistoryRequestDrawer}))),w.data&&e.createElement(ze,{title:`${j} Condition`,header:j==="Edit"&&v&&e.createElement(Ke,{condition:v}),action:dt(We)(v,w.data.id),data:Ce,schema:Re,isOpen:u,onClose:()=>m(!1)}),v&&w.data&&e.createElement(Qe,{resource:v,resourceName:v.display||"unnamed condition",onClose:()=>s(!1),isOpen:i,onDelete:async()=>{const r=await Y();await et(v.resource,r)}}))},"Conditions");try{O.displayName="Conditions",O.__docgenInfo={description:"",displayName:"Conditions",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},hideRequestRecords:{defaultValue:null,description:"",name:"hideRequestRecords",required:!1,type:{name:"boolean"}}}}}catch{}function $(n){const t=p(n),o=p(t.getByRole("dialog"));return{conditionSearch:a=>l.type(o.getByPlaceholderText("Type to search"),a),selectCondition:async a=>l.click(await o.findByRole("option",{name:a})),status:a=>l.selectOptions(o.getByTestId("form-field-status"),a),onset:a=>l.type(o.getByTestId("form-field-onset"),a),abatement:a=>l.type(o.getByTestId("form-field-abatement"),a),note:a=>l.type(o.getByTestId("form-field-note"),a),cancel:()=>l.click(o.getByRole("button",{name:"Cancel"})),save:async()=>{l.click(o.getByRole("button",{name:"Save"})),await ue(()=>t.queryByRole("dialog"))}}}function oe(n,t){const o=p(n),a=p(t);async function d(i){l.click(m(i).getByRole("button",{name:/dropdown/i})),await o.findAllByRole("menuitem")}function u(i){l.click(o.getByRole("menuitem",{name:i}))}function m(i){const s=a.getAllByRole("rowgroup")[1];return p(p(s).queryAllByRole("row")[i])}return{table:a,toHaveRowCount:async i=>{const s=a.getAllByRole("rowgroup")[1];i===0?await E(()=>f(s).toBeFalsy()):await E(()=>f(p(s).queryAllByRole("row")).toHaveLength(i))},toHaveRowWithText:(i,s)=>{m(i).getByText(s)},add:async i=>{await d(i),u("Add")},delete:async i=>{await d(i),u("Delete"),l.click(await o.findByRole("button",{name:/remove/i})),await ue(()=>o.queryByRole("dialog"))},edit:async i=>{await d(i),u("Edit")},viewHistory:async i=>{await d(i),u("View History")}}}async function b(n){const t=p(n);await E(()=>f(t.queryAllByRole("table")).toHaveLength(2));const o=t.queryAllByRole("table"),a=oe(n,o[0]),d=oe(n,o[1]);return await a.table.findAllByText("active"),await d.table.findAllByText("active"),{clickAddCondition:()=>l.click(t.getByRole("button",{name:"+ Add Condition"})),toggleInactive:()=>l.click(t.getByLabelText("Include Inactive")),patientRecord:a,otherProvider:d}}const Xt={component:O,tags:["autodocs"],argTypes:{className:{options:["Blank","Fixed Width"],control:"select",mapping:{Blank:"","Fixed Width":"ctw-m-auto ctw-max-w-[600px]"}}},args:{className:"Blank",readOnly:!1,hideRequestRecords:!1},decorators:[(n,{args:t})=>e.createElement(Ue,{env:"dev",authToken:"dummy-token",builderId:"b123"},e.createElement(Ye,{patientID:"u12345",systemURL:Je},e.createElement(n,{args:t})))]},g={...ye({otherConditions:ot,patientConditions:it})},_={...ye({otherConditions:ne,patientConditions:ne})},k={...g,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2);const o="Heart failure (disorder)";t.clickAddCondition();const a=$(n);a.conditionSearch("heart"),await a.selectCondition(o),a.status("Active"),a.onset("2020-02-14"),await a.save(),await t.patientRecord.toHaveRowCount(3),f(await t.patientRecord.table.findByText(o)).toBeTruthy()}},M={...g,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2),await t.otherProvider.add(2),await $(n).save(),await t.patientRecord.toHaveRowCount(3),f(await t.patientRecord.table.findByText(/iron deficiency/i)).toBeTruthy()}},q={...g,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2),await t.patientRecord.edit(0);const o=$(n);o.note("hello world"),await o.save(),t.patientRecord.toHaveRowWithText(0,/confirmed/i)}},P={...g,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2),await t.patientRecord.delete(0),await t.patientRecord.toHaveRowCount(1),t.toggleInactive(),await t.patientRecord.toHaveRowCount(3),t.patientRecord.toHaveRowWithText(1,/entered-in-error/i),t.toggleInactive(),await t.patientRecord.toHaveRowCount(1)}},I={...g,play:async({canvasElement:n})=>{const t=await b(n);await t.patientRecord.toHaveRowCount(2),await t.patientRecord.viewHistory(0);const o=p(n);await E(()=>f(o.queryAllByRole("dialog")).toHaveLength(1));const a=p(o.getByRole("dialog"));f(await a.findByText(/generalized anxiety disorder/i)).toBeTruthy(),await E(()=>f(a.getAllByRole("button",{name:/details/i})).toHaveLength(3)),l.click(a.getAllByRole("button",{name:/close/i})[0])}};var ie;g.parameters={...g.parameters,storySource:{source:`{
  ...setupConditionMocks({
    otherConditions,
    patientConditions
  })
}`,...(ie=g.parameters)==null?void 0:ie.storySource}};var se;_.parameters={..._.parameters,storySource:{source:`{
  ...setupConditionMocks({
    otherConditions: emptyConditions,
    patientConditions: emptyConditions
  })
}`,...(se=_.parameters)==null?void 0:se.storySource}};var re;k.parameters={...k.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    const newCondition = "Heart failure (disorder)";
    conditions.clickAddCondition();
    const conditionForm = conditionFormDrawer(canvasElement);
    conditionForm.conditionSearch("heart");
    await conditionForm.selectCondition(newCondition);
    conditionForm.status("Active");
    conditionForm.onset("2020-02-14");
    await conditionForm.save();
    await conditions.patientRecord.toHaveRowCount(3);
    expect(await conditions.patientRecord.table.findByText(newCondition)).toBeTruthy();
  }
}`,...(re=k.parameters)==null?void 0:re.storySource}};var ce;M.parameters={...M.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.otherProvider.add(2);
    const conditionForm = conditionFormDrawer(canvasElement);
    await conditionForm.save();
    await conditions.patientRecord.toHaveRowCount(3);
    expect(await conditions.patientRecord.table.findByText(/iron deficiency/i)).toBeTruthy();
  }
}`,...(ce=M.parameters)==null?void 0:ce.storySource}};var de;q.parameters={...q.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.edit(0);
    const conditionForm = conditionFormDrawer(canvasElement);
    conditionForm.note("hello world");
    await conditionForm.save();
    conditions.patientRecord.toHaveRowWithText(0, /confirmed/i);
  }
}`,...(de=q.parameters)==null?void 0:de.storySource}};var le;P.parameters={...P.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.delete(0);
    await conditions.patientRecord.toHaveRowCount(1);
    conditions.toggleInactive();
    await conditions.patientRecord.toHaveRowCount(3);
    conditions.patientRecord.toHaveRowWithText(1, /entered-in-error/i);
    conditions.toggleInactive();
    await conditions.patientRecord.toHaveRowCount(1);
  }
}`,...(le=P.parameters)==null?void 0:le.storySource}};var me;I.parameters={...I.parameters,storySource:{source:`{
  ...Basic,
  play: async ({
    canvasElement
  }) => {
    const conditions = await conditionsObject(canvasElement);
    await conditions.patientRecord.toHaveRowCount(2);
    await conditions.patientRecord.viewHistory(0);
    const canvas = within(canvasElement);
    await waitFor(() => expect(canvas.queryAllByRole("dialog")).toHaveLength(1));
    const drawer = within(canvas.getByRole("dialog"));
    expect(await drawer.findByText(/generalized anxiety disorder/i)).toBeTruthy();
    await waitFor(() => expect(drawer.getAllByRole("button", {
      name: /details/i
    })).toHaveLength(3));
    userEvent.click(drawer.getAllByRole("button", {
      name: /close/i
    })[0]);
  }
}`,...(me=I.parameters)==null?void 0:me.storySource}};const Zt=["Basic","Empty","TestAdd","TestAddOther","TestEdit","TestDelete","TestViewHistory"];export{g as Basic,_ as Empty,k as TestAdd,M as TestAddOther,P as TestDelete,q as TestEdit,I as TestViewHistory,Zt as __namedExportsOrder,Xt as default};
//# sourceMappingURL=conditions.stories-c5e74bfc.js.map
