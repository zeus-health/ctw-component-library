import{R as o}from"./index-6f814c40.js";import{s,p as a,o as d}from"./requests-c380c1df.js";import{P as c}from"./provider-meds-table-3c3b9e6e.js";import{C as n,S as M}from"./patient-helper-2c738c95.js";import{P as l}from"./patient-provider-d2b81159.js";import"./_commonjsHelpers-042e6b4d.js";import"./request-5a1df4c1.js";import"./patient-8f4a0ec9.js";import"./values-c30f357d.js";import"./_baseForOwn-56487e0e.js";import"./_equalByTag-3aa7c076.js";import"./_baseIsEqual-4b283a92.js";import"./_baseToString-ba0098b0.js";import"./sortBy-3860efd7.js";import"./_baseClone-0c3bfcab.js";import"./_createSet-3c80ad01.js";import"./toNumber-e7174cd4.js";import"./_basePickBy-a17ae44f.js";import"./mapValues-fd7519e7.js";import"./isPlainObject-8f51cb87.js";import"./uniq-f1be3f26.js";import"./use-medications-64655112.js";import"./data-list-254aa0b0.js";import"./drawer-ed34104d.js";import"./index-74f03c09.js";import"./use-watch-a9671586.js";import"./index-6de6b113.js";import"./medication-history-c36c5fa9.js";import"./collapsible-data-list-details-f7571cef.js";import"./document-icon-581c51b2.js";import"./error-boundary-784d2b69.js";import"./use-breakpoints-04232dc9.js";import"./sortBy-64fcb484.js";import"./getPrototypeOf-28a32d6e.js";import"./loading-c7ff698a.js";import"./spinner-66aa4ba7.js";import"./sort-b8885781.js";import"./isString-b8ede3fb.js";import"./uniqWith-ade993ae.js";import"./table-0bb423c6.js";import"./use-filtered-sorted-data-9e5fa73c.js";import"./index-4d501b15.js";import"./extends-98964cd2.js";import"./calculate-active-index-048f6a58.js";import"./_commonjs-dynamic-modules-302442b1.js";const mr={tags:["autodocs"],component:c,args:{sortColumn:"display",sortOrder:"asc"},decorators:[(m,{args:p})=>o.createElement(n,{env:"dev",authToken:"12345",builderId:"12345"},o.createElement(l,{patientID:"007",systemURL:M},o.createElement(m,{args:p})))]},r={...s({providerMedications:a,otherProviderMedications:d})};var t,i,e;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  ...setupMedicationMocks({
    providerMedications,
    otherProviderMedications
  })
}`,...(e=(i=r.parameters)==null?void 0:i.docs)==null?void 0:e.source}}};const pr=["Basic"];export{r as Basic,pr as __namedExportsOrder,mr as default};
