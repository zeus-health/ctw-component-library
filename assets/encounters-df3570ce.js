var J=Object.defineProperty;var Z=(e,a,t)=>a in e?J(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t;var C=(e,a,t)=>(Z(e,typeof a!="symbol"?a+"":a,t),t);import{r as D,R as o}from"./index-6f814c40.js";import{u as Y}from"./resource-details-drawer-11a3e21b.js";import{s as A,I as w,af as b,az as ee,a4 as te,w as g,aL as k,aM as ne,h as re,S as ae,aD as ie,aE as se,e as ue,T as j,aN as oe,aF as de,aK as le,aG as ce,aH as pe,aI as me,aJ as fe,aO as ye,aP as ge,aQ as Ee,aR as Me,ay as $,a6 as Se,a5 as _e,F as Re,c as L,a as O,aS as ve}from"./patient-helper-7499a61c.js";import{h as G,i as H,j as z,M,s as De,k as be,l as qe,m as he}from"./observation-d4392151.js";import{u as E,b as Ie}from"./patient-provider-aad0ed3a.js";import"./_baseToString-4993715b.js";import{c as y}from"./sortBy-df4456c4.js";import"./_baseClone-25b1595e.js";import{c as F}from"./_basePickBy-239377e6.js";import"./sortBy-d677d734.js";import"./_equalByTag-aaf39779.js";import"./_baseForOwn-d8306f34.js";import"./_createSet-12ef9b81.js";import{u as Ne}from"./details-card-fe427194.js";import{o as Te,j as N,m as T,g as h,k as Ve,l as Pe,n as Ae,q as X,r as we,v as Ce,w as Le,b as U,f as x,d as Oe,h as Fe,x as Ue}from"./values-8fd0e344.js";import{e as xe}from"./data-list-254aa0b0.js";import{L as Be}from"./loading-c41f709e.js";import{C as Qe}from"./coding-list-1d7c950f.js";import{u as B}from"./uniq-f5468222.js";const I=Te(["informationSourceNot","informationSource"]);function K(e,a={},t=!1){let r=t?He(e.resources,e.bundle):e.resources;return a.informationSource&&(r=r.filter(n=>{var i;return((i=n.informationSource)==null?void 0:i.type)===a.informationSource})),a.informationSourceNot&&(r=r.filter(n=>{var i;return((i=n.informationSource)==null?void 0:i.type)!==a.informationSourceNot})),r}async function Ye(e,a,t=[]){const[r={}]=t;try{const n=await ue("MedicationStatement",e,{patientUPID:a.UPID,_include:"MedicationStatement:medication",...I(r)}),i=K(n,r,!1);return{bundle:n.bundle,medications:i}}catch(n){throw b("Failed fetching medications for patient",n)}}async function ke(e,a,t=[]){const[r={}]=t;try{const{bundle:n,resources:i}=await A("MedicationRequest",e,{patientUPID:a.UPID,...I(r)});return i.map(s=>new H(s,w(n)))}catch(n){throw b("Failed fetching medication requests for patient",n)}}async function je(e,a,t=[]){const[r={}]=t;try{const{bundle:n,resources:i}=await A("MedicationDispense",e,{patientUPID:a.UPID,...I(r),_include:["MedicationRequest:medication","MedicationDispense:performer"]});return i.map(s=>new z(s,w(n)))}catch(n){throw b("Failed fetching medication dispenses for patient",n)}}async function $e(e,a,t=[]){const[r]=t;if(!r)return[];try{const{bundle:n,resources:i}=await ee("MedicationStatement",e,{patientUPID:a.UPID,code:`${te}|${r}`});return i.map(s=>new M(s,w(n)))}catch(n){throw b("Failed fetching medication statements for patient",n)}}async function Ge(e,a,t=[]){const[r={}]=t;try{const n=j.timeMetric("req.active_medications"),i=await oe("MedicationStatement",e,"ActiveMedications",{patientUPID:a.UPID,_include:"MedicationStatement:medication",...I(r)}),s=K(i,r,!0);return n(),{bundle:i.bundle,medications:s}}catch(n){throw b("Failed fetching medications for patient",n)}}function He(e,a){const t=ye(a);return e.filter(r=>be(r,t)!==void 0)}function ze(e,a){const t=e.filter(n=>!a.some(i=>i.rxNorm===n.rxNorm));return{builderMedications:a.map(n=>{var l,c;const i=x(p=>p.rxNorm===n.rxNorm,e);if(!i)return n;const s=F(n.resource),u=[de,le,ce,pe,me,fe];s.extension=(l=i.resource.extension)==null?void 0:l.filter(p=>u.includes(p.url));const d=F(x({url:ie},i.resource.extension));return d&&(d.url=se,(c=s.extension)==null||c.push(d)),new M(s,n.includedResources,n.revIncludes)}),otherProviderMedications:t}}function W(e){const a=e?new M(e).aggregatedFrom:[],t=N(h("reference"),we("/"),X),r=N(Ce(h("type")),Le(T(t)))(a);return E(ne,[(e==null?void 0:e.id)||"empty"],g(async(n,i)=>{try{if(!e)return{includedResources:{},medications:[]};const[s,u,d,l]=await Promise.all([q("MedicationStatement",n,i.UPID,r.MedicationStatement),q("MedicationAdministration",n,i.UPID,r.MedicationAdministration),q("MedicationRequest",n,i.UPID,r.MedicationRequest,["MedicationRequest:requester"]),q("MedicationDispense",n,i.UPID,r.MedicationDispense,["MedicationDispense:performer","MedicationDispense:prescription"])]),c=k(U([s.bundle,u.bundle,d.bundle,l.bundle])),p=U([...s.resources,...u.resources,...d.resources,...l.resources]).map(m=>new G(m,c));return{medications:De(Ne(p,(m,f)=>m.date===f.date&&m.resource.resourceType===f.resource.resourceType),"date","desc",!0),includedResources:c}}catch(s){throw new Error(`Failed fetching medication history for medication ${e==null?void 0:e.id}: ${s}`)}},"req.medication_history"))}function Xe(e){const[a,t]=D.useState(),r=W(e);return D.useEffect(()=>{const{includedResources:n={},medications:i=[]}=r.data||{};if(a===void 0&&i.length){const s=N(T(h("resource")),Ve(Pe("resourceType","MedicationRequest")),Ae(u=>Date.parse(u.authoredOn)),T(u=>new G(u,n)),X,h("prescriber"))(i);t(s||"")}},[a,r.data]),{isLoading:r.isFetching,lastPrescriber:a}}function q(e,a,t,r=[],n=[]){return r.length>0?re(e,a,{_id:r.join(","),_include:[`${e}:patient`,`${e}:medication`,...n],"_include:iterate":"Patient:organization","patient.identifier":`${ae}|${t}`}):{resources:[],bundle:void 0}}function V(e){var t;const a=W(e.resource);return{data:(t=a.data)==null?void 0:t.medications.map(Ke),isLoading:a.isLoading}}function Ke(e){if(e.resourceType==="MedicationStatement")return We(e);if(e.resourceType==="MedicationRequest")return Je(e);if(e.resourceType==="MedicationDispense")return Ze(e);if(e.resourceType==="MedicationAdministration")return et(e);throw new Error(`Unknown medication resource type "${e.resourceType}"`)}function We(e){var r,n;const a=e.resource,t=new M(a,e.includedResources);return{date:e.dateLocal,id:e.id,title:"Medication Reviewed",hideEmpty:!1,subtitle:(n=(r=t.patient)==null?void 0:r.organization)==null?void 0:n.name,details:[{label:"Status",value:Oe(t.displayStatus)},{label:"Instructions",value:t.dosage}]}}function Je(e){const a=e.resource,{prescriber:t}=e,{name:r,address:n,telecom:i}=new H(a,e.includedResources).pharmacy,{numberOfRepeatsAllowed:s="",initialFill:u}=a.dispenseRequest||{},{value:d="",unit:l=""}=(u==null?void 0:u.quantity)||{};return{date:e.dateLocal,id:e.id,title:"Prescription Ordered",subtitle:t,hideEmpty:!1,details:[{label:"Quantity",value:[d,l].join(" ")},{label:"Refills Allowed",value:s},{label:"Instructions",value:e.dosage},{label:"Prescriber",value:t},{label:"Pharmacy",value:o.createElement(o.Fragment,null,r&&o.createElement("div",null,r),n&&o.createElement("div",null,n),i&&o.createElement("div",null,"T: ",i))}]}}function Ze(e){const a=e.resource,t=new z(a,e.includedResources),{quantityDisplay:r,supplied:n,performerDetails:i}=t,{name:s,address:u,telecom:d}=i;return{date:e.dateLocal,hideEmpty:!1,id:e.id,title:"Medication Filled",subtitle:y([r,n?`${n} supplied`:null]).join(", "),details:[{label:"Quantity",value:r},{label:"Days supply",value:n},{label:"Pharmacy",value:o.createElement(o.Fragment,null,s&&o.createElement("div",null,s),u&&o.createElement("div",null,u),d&&o.createElement("div",null,"T: ",d))}]}}function et(e){const a=e.resource,t=new qe(a,e.includedResources);return{id:e.id,date:e.dateLocal,hideEmpty:!1,title:"Medication Administered",subtitle:y([t.dosageDisplay,t.dosageRoute]).join(", "),details:[{label:"Dosage",value:t.dosageDisplay},{label:"Route",value:t.dosageRoute},{label:"Start Date",value:t.effectivePeriod.start},{label:"End Date",value:t.effectivePeriod.end}]}}try{V.displayName="useMedicationHistoryEntries",V.__docgenInfo={description:"",displayName:"useMedicationHistoryEntries",props:{kind:{defaultValue:null,description:"",name:"kind",required:!0,type:{name:'"MedicationStatement"'}},builderPatientRxNormStatus:{defaultValue:null,description:"",name:"builderPatientRxNormStatus",required:!1,type:{name:"Record<string, string>"}},basedOn:{defaultValue:null,description:"",name:"basedOn",required:!0,type:{name:"string | undefined"}},category:{defaultValue:null,description:"",name:"category",required:!0,type:{name:"string"}},context:{defaultValue:null,description:"",name:"context",required:!0,type:{name:"string | undefined"}},dateAsserted:{defaultValue:null,description:"",name:"dateAsserted",required:!0,type:{name:"string | undefined"}},derivedFrom:{defaultValue:null,description:"",name:"derivedFrom",required:!0,type:{name:"string[]"}},aggregatedFrom:{defaultValue:null,description:"",name:"aggregatedFrom",required:!0,type:{name:"Reference[]"}},display:{defaultValue:null,description:"",name:"display",required:!0,type:{name:"string"}},dosage:{defaultValue:null,description:"",name:"dosage",required:!0,type:{name:"string | undefined"}},effectiveStart:{defaultValue:null,description:"",name:"effectiveStart",required:!0,type:{name:"string | undefined"}},identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string | undefined"}},informationSource:{defaultValue:null,description:"",name:"informationSource",required:!0,type:{name:"Reference | undefined"}},medicationReference:{defaultValue:null,description:"",name:"medicationReference",required:!0,type:{name:"string | undefined"}},notesDisplay:{defaultValue:null,description:"",name:"notesDisplay",required:!0,type:{name:"string[]"}},partOf:{defaultValue:null,description:"",name:"partOf",required:!0,type:{name:"string | undefined"}},patientStatus:{defaultValue:null,description:"",name:"patientStatus",required:!0,type:{name:"string"}},resourceTypeTitle:{defaultValue:null,description:"",name:"resourceTypeTitle",required:!0,type:{name:"string"}},rxNorm:{defaultValue:null,description:"",name:"rxNorm",required:!0,type:{name:"string | undefined"}},rxNormCodeableConcept:{defaultValue:null,description:'Get RxNorm coding with "display" defaulting to this Med-Statement label.',name:"rxNormCodeableConcept",required:!0,type:{name:"{ display: string; code?: string | undefined; _code?: Element | undefined; _display?: Element | undefined; system?: string | undefined; _system?: Element | undefined; ... 6 more ...; _id?: Element | undefined; }"}},reason:{defaultValue:null,description:"",name:"reason",required:!0,type:{name:"string | undefined"}},reasonReference:{defaultValue:null,description:"",name:"reasonReference",required:!0,type:{name:"Reference[] | undefined"}},isInactive:{defaultValue:null,description:"",name:"isInactive",required:!0,type:{name:"boolean"}},status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"enum",value:[{value:'"active"'},{value:'"entered-in-error"'},{value:'"unknown"'},{value:'"completed"'},{value:'"intended"'},{value:'"stopped"'},{value:'"on-hold"'},{value:'"not-taken"'}]}},displayStatus:{defaultValue:null,description:"",name:"displayStatus",required:!0,type:{name:"string"}},statusReason:{defaultValue:null,description:"",name:"statusReason",required:!0,type:{name:"string | undefined"}},subject:{defaultValue:null,description:"",name:"subject",required:!0,type:{name:"Reference"}},subjectID:{defaultValue:null,description:"",name:"subjectID",required:!0,type:{name:"string"}},patient:{defaultValue:null,description:"",name:"patient",required:!0,type:{name:"PatientModel | undefined"}},lastFillDate:{defaultValue:null,description:"",name:"lastFillDate",required:!0,type:{name:"string | undefined"}},quantity:{defaultValue:null,description:"",name:"quantity",required:!0,type:{name:"string | undefined"}},daysSupply:{defaultValue:null,description:"",name:"daysSupply",required:!0,type:{name:"string | undefined"}},refills:{defaultValue:null,description:"",name:"refills",required:!0,type:{name:"string | undefined"}},lastPrescriber:{defaultValue:null,description:"",name:"lastPrescriber",required:!0,type:{name:"string | undefined"}},lastPrescribedDate:{defaultValue:null,description:"",name:"lastPrescribedDate",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"MedicationStatement"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},key:{defaultValue:null,description:"",name:"key",required:!0,type:{name:"string"}},versionId:{defaultValue:null,description:"",name:"versionId",required:!0,type:{name:"string"}},isArchived:{defaultValue:null,description:"",name:"isArchived",required:!0,type:{name:"boolean"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},isEnriched:{defaultValue:null,description:"",name:"isEnriched",required:!0,type:{name:"() => boolean"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}const tt=()=>Y({header:e=>e.display,getHistory:V,details:e=>[{label:"Status",value:e.displayStatus},{label:"Last Fill Date",value:e.lastFillDate},{label:"Quantity",value:e.quantity},{label:"Days Supply",value:e.daysSupply},{label:"Refills",value:e.refills},{label:"Instructions",value:e.dosage},{label:"Prescriber",value:o.createElement(nt,{medication:e})},{label:"Last Prescribed Date",value:e.lastPrescribedDate},...xe("Note",e.notesDisplay)]});function nt({medication:e}){const{lastPrescriber:a,isLoading:t}=Xe(e.resource);return t?o.createElement(Be,{className:"ctw-h-3",iconClass:"!ctw-w-3 !ctw-h-3",message:""}):o.createElement("span",null,a||"n/a")}function rt(){return E(Se,[{informationSourceNot:"Patient"}],g(Ye,"req.builder_medications"))}function at(){return E(_e,[{_revinclude:"Basic:subject"}],g(Ge,"req.active_medications"))}function Tt(){return E(ge,[{informationSourceNot:"Patient"}],g(ke,"req.medication_requests_common"))}function Vt(){return E(Ee,[{informationSourceNot:"Patient"}],g(je,"req.medication_dispense_common"))}function it(e){return E(Me,[e],g($e,"req.medication_statement"))}function Pt(){const[e,a]=D.useState([]),[t,r]=D.useState([]),n=at(),i=rt();D.useEffect(()=>{var l,c;if((l=n.data)!=null&&l.bundle&&((c=i.data)!=null&&c.bundle)){const{medications:p,bundle:S}=n.data,{medications:m}=i.data,f=$(S),_=k([n.data.bundle,i.data.bundle]),R=ze(p.map(v=>new M(v,_,f.get(v.id??""))),m.map(v=>new M(v,_,f.get(v.id??""))));a(R.builderMedications),r(R.otherProviderMedications)}},[n.data,i.data]);const s=i.isLoading||n.isLoading,u=i.isFetching||n.isFetching,d=i.isError||n.isError;return{isFetching:u,isLoading:s,isError:d,builderMedications:e,otherProviderMedications:t}}function At(){return Y({header:e=>`${e.periodStart} - ${e.periodEnd}`,subHeader:e=>e.typeDisplay,getSourceDocument:!0,details:P})}const P=e=>{var a;return[{label:"Period Start",value:e.periodStart},{label:"Period End",value:e.periodEnd},{label:"Status",value:Fe(e.status)},{label:"Class",value:e.class},{label:"Type",value:e.typeCodings.length?o.createElement(Qe,{codings:e.typeCodings}):void 0},{label:"Location",value:e.location},{label:"Participants",value:e.participants},{label:"Reason",value:e.reason},{label:"Diagnosis",value:(a=e.diagnoses)==null?void 0:a.join(", ")},{label:"Discharge Disposition",value:e.dischargeDisposition}]};function wt(){const{openDrawer:e}=Ie();return a=>{e({component:t=>o.createElement(st,{medicationEventModel:a,...t})})}}const st=e=>{var n;const{medicationEventModel:a}=e,t=it(a.rxNorm),r=tt();return(n=t.data)!=null&&n.length&&r(t.data[0]),null};try{P.displayName="encounterData",P.__docgenInfo={description:"",displayName:"encounterData",props:{kind:{defaultValue:null,description:"",name:"kind",required:!0,type:{name:'"Encounter"'}},class:{defaultValue:null,description:"",name:"class",required:!0,type:{name:"string | undefined"}},diagnoses:{defaultValue:null,description:"",name:"diagnoses",required:!0,type:{name:"string[] | undefined"}},dischargeDisposition:{defaultValue:null,description:"",name:"dischargeDisposition",required:!0,type:{name:"string | undefined"}},location:{defaultValue:null,description:"",name:"location",required:!0,type:{name:"string | undefined"}},participants:{defaultValue:null,description:"",name:"participants",required:!0,type:{name:"string | undefined"}},periodEnd:{defaultValue:null,description:"",name:"periodEnd",required:!0,type:{name:"string | undefined"}},periodStart:{defaultValue:null,description:"",name:"periodStart",required:!0,type:{name:"string | undefined"}},reason:{defaultValue:null,description:"",name:"reason",required:!0,type:{name:"string | undefined"}},status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"enum",value:[{value:'"entered-in-error"'},{value:'"planned"'},{value:'"arrived"'},{value:'"triaged"'},{value:'"in-progress"'},{value:'"onleave"'},{value:'"finished"'},{value:'"cancelled"'},{value:'"unknown"'}]}},typeCodings:{defaultValue:null,description:"",name:"typeCodings",required:!0,type:{name:"Coding[]"}},typeDisplay:{defaultValue:null,description:"",name:"typeDisplay",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"Encounter"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},key:{defaultValue:null,description:"",name:"key",required:!0,type:{name:"string"}},versionId:{defaultValue:null,description:"",name:"versionId",required:!0,type:{name:"string"}},isArchived:{defaultValue:null,description:"",name:"isArchived",required:!0,type:{name:"boolean"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},resourceTypeTitle:{defaultValue:null,description:"",name:"resourceTypeTitle",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},isEnriched:{defaultValue:null,description:"",name:"isEnriched",required:!0,type:{name:"() => boolean"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}const Q=({className:e,items:a,limit:t,total:r})=>o.createElement("div",{className:e},a.slice(0,t).map((n,i)=>o.createElement("div",{key:n+i},o.createElement("div",null,n))),r>t&&o.createElement("div",{className:"ctw-font-medium"},"+ ",r-t," more"));try{Q.displayName="SimpleMoreList",Q.__docgenInfo={description:"",displayName:"SimpleMoreList",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"string[]"}},limit:{defaultValue:null,description:"",name:"limit",required:!0,type:{name:"number"}},total:{defaultValue:null,description:"",name:"total",required:!0,type:{name:"number"}}}}}catch{}class ut extends Re{constructor(){super(...arguments);C(this,"kind","Encounter")}get class(){const{display:t,code:r}=this.resource.class;return t??r!=="UNK"?r:void 0}get diagnoses(){var t;return y(B((t=this.resource.diagnosis)==null?void 0:t.map(r=>r.condition.display)))}get dischargeDisposition(){var t;return L((t=this.resource.hospitalization)==null?void 0:t.dischargeDisposition)}get location(){var r;const t=y((r=this.resource.location)==null?void 0:r.map(n=>n.location.display));return t.length?t.join(", "):void 0}get participants(){var r;const t=y(B((r=this.resource.participant)==null?void 0:r.map(n=>{var i;return(i=n.individual)==null?void 0:i.display})));return t.length?t.join(", "):void 0}get periodEnd(){var t;return O((t=this.resource.period)==null?void 0:t.end)}get periodStart(){var t;return O((t=this.resource.period)==null?void 0:t.start)}get reason(){var r;const t=y((r=this.resource.reasonCode)==null?void 0:r.map(n=>L(n)));return t.length?t.join(", "):void 0}get status(){return this.resource.status}get typeCodings(){var t;return y(Ue((t=this.resource.type)==null?void 0:t.map(r=>r.coding)))}get typeDisplay(){var S,m,f,_;const{display:t,system:r}=this.resource.class,n=(this.resource.class.code??"").toUpperCase(),i=((f=(m=(S=this.resource.type)==null?void 0:S[0])==null?void 0:m.coding)==null?void 0:f[0])??{},{text:s}=((_=this.resource.type)==null?void 0:_[0])??{},u=(i.code??"").toUpperCase(),d=he(r),l=d?u:n;let c=d?s:t;const p={AMB:"Ambulatory",IMP:"Inpatient",EMER:"Emergency"};if(l&&Object.keys(p).includes(l)){const R=p[l];if(!c)return R;c.toLowerCase()!==R.toLowerCase()&&(c+=`, ${p[l]}`)}return c??"Unknown"}}function Ct(){return E(ve,[],g(async(e,a)=>{try{const{bundle:t,resources:r}=await A("Encounter",e,{patientUPID:a.UPID});return ot(r,t)}catch(t){throw j.logError(t,"Failed fetching timeline information for patient"),new Error(`Failed fetching timeline information for patient: ${t}`)}},"req.patient_encounters"))}function ot(e,a){const t=$(a);return e.map(r=>new ut(r,void 0,t.get(r.id??"")))}export{ut as E,Q as S,Pt as a,Ct as b,At as c,Tt as d,Vt as e,wt as f,tt as u};
