import{R as s}from"./index-6f814c40.js";import{y as a,g as b,p as f,O as q,j as v,R as A}from"./patient-allergies-7913bd41.js";import{h as V}from"./request-47bfd586.js";const w=/^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/,R=/^\d{5}(-\d{4})?$/;function E(e){return a.enum(["AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"],{required_error:e})}function I(e){return e?{alabama:"AL",alaska:"AK",arizona:"AZ",arkansas:"AR",california:"CA",colorado:"CO",connecticut:"CT",delaware:"DE",florida:"FL",georgia:"GA",hawaii:"HI",idaho:"ID",illinois:"IL",indiana:"IN",iowa:"IA",kansas:"KS",kentucky:"KY",louisiana:"LA",maine:"ME",maryland:"MD",massachusetts:"MA",michigan:"MI",minnesota:"MN",mississippi:"MS",missouri:"MO",montana:"MT",nebraska:"NE",nevada:"NV","new hampshire":"NH","new jersey":"NJ","new mexico":"NM","new york":"NY","north carolina":"NC","north dakota":"ND",ohio:"OH",oklahoma:"OK",oregon:"OR",pennsylvania:"PA","rhode island":"RI","south carolina":"SC","south dakota":"SD",tennessee:"TN",texas:"TX",utah:"UT",vermont:"VT",virginia:"VA",washington:"WA","west virginia":"WV",wisconsin:"WI",wyoming:"WY"}[e.toLowerCase()]||e.toUpperCase():""}const m=e=>{var r,n,i,t,l;return[{label:"treating-provider",render:()=>s.createElement("div",{className:"ctw-font-medium"},"Who is the treating provider for this patient?")},{label:"Practitioner Name",field:"name",value:"",readonly:!1},[{label:"NPI",field:"npi",value:"",readonly:!1},{label:"Role",field:"role",value:"",readonly:!1}],{label:"patient-information",render:()=>s.createElement("div",null,s.createElement("div",{className:"ctw-font-medium"},"Is the patient information below correct and up-to-date?"),s.createElement("div",null,"Complete as many fields as possible to increase matching results."))},{label:"First Name",field:"firstName",value:e.firstName,readonly:!1},{label:"Last Name",field:"lastName",value:e.lastName,readonly:!1},[{label:"Date of Birth",field:"dateOfBirth",value:e.dob,readonly:!1},{label:"Gender",field:"gender",value:e.gender,readonly:!1}],{label:"Address",field:"address",value:(n=(r=e.homeAddress)==null?void 0:r.line)==null?void 0:n.join(", "),readonly:!1},{label:"City",field:"city",value:(i=e.homeAddress)==null?void 0:i.city,readonly:!1},[{label:"State",field:"state",value:I((t=e.homeAddress)==null?void 0:t.state),readonly:!1},{label:"Zip",field:"zipCode",value:(l=e.homeAddress)==null?void 0:l.postalCode,readonly:!1}],{label:"Phone",field:"phone",value:e.phoneNumber,readonly:!1},{label:"Email",field:"email",value:e.email,readonly:!1}]},S=a.object({name:a.string({required_error:"Practitioner name must be specified."}),npi:a.string({required_error:"NPI must be specified."}).length(10),role:a.enum(["Doctor","Nurse","Other"]),firstName:a.string({required_error:"First name must be specified."}),lastName:a.string({required_error:"Last name must be specified."}),dateOfBirth:a.date().min(new Date("1900"),{message:"Date of birth is invalid."}).max(new Date,{message:"Date of birth cannot be a future date."}),gender:a.enum(["-","male","female","other","unknown"]),address:a.string({required_error:"Address must be specified."}),city:a.string({required_error:"City must be specified."}),state:E("State must be specified."),zipCode:a.string({required_error:"Zip code must be specified."}).regex(R,{message:"Zip code is invalid."}),phone:a.string().regex(w,{message:"Phone number is invalid."}).optional(),email:a.string().email({message:"Email address is invalid."}).optional()});try{m.displayName="getRequestData",m.__docgenInfo={description:"",displayName:"getRequestData",props:{active:{defaultValue:null,description:"",name:"active",required:!0,type:{name:"boolean | undefined"}},contact:{defaultValue:null,description:"",name:"contact",required:!0,type:{name:"PatientContact[] | undefined"}},dob:{defaultValue:null,description:"",name:"dob",required:!0,type:{name:"string | undefined"}},age:{defaultValue:null,description:"",name:"age",required:!0,type:{name:"number | undefined"}},gender:{defaultValue:null,description:"",name:"gender",required:!0,type:{name:"string | undefined"}},maritalStatus:{defaultValue:null,description:"",name:"maritalStatus",required:!0,type:{name:"string | undefined"}},organization:{defaultValue:null,description:"",name:"organization",required:!0,type:{name:"OrganizationModel | undefined"}},use:{defaultValue:null,description:"",name:"use",required:!0,type:{name:"enum",value:[{value:"undefined"},{value:'"usual"'},{value:'"official"'},{value:'"temp"'},{value:'"nickname"'},{value:'"anonymous"'},{value:'"old"'},{value:'"maiden"'}]}},UPID:{defaultValue:null,description:"",name:"UPID",required:!0,type:{name:"string"}},getPhoneNumber:{defaultValue:null,description:"",name:"getPhoneNumber",required:!0,type:{name:'(use?: "temp" | "old" | "home" | "work" | "mobile" | undefined) => string | undefined'}},phoneNumber:{defaultValue:null,description:"",name:"phoneNumber",required:!0,type:{name:"string | undefined"}},email:{defaultValue:null,description:"",name:"email",required:!0,type:{name:"string | undefined"}},bestHomeAddress:{defaultValue:null,description:"",name:"bestHomeAddress",required:!0,type:{name:"Address | undefined"}},homeAddress:{defaultValue:null,description:"",name:"homeAddress",required:!0,type:{name:"Address | undefined"}},bestName:{defaultValue:null,description:"",name:"bestName",required:!0,type:{name:"HumanName"}},additionalNames:{defaultValue:null,description:"",name:"additionalNames",required:!0,type:{name:"string | undefined"}},display:{defaultValue:null,description:"",name:"display",required:!0,type:{name:"string"}},firstName:{defaultValue:null,description:"",name:"firstName",required:!0,type:{name:"string"}},fullName:{defaultValue:null,description:"",name:"fullName",required:!0,type:{name:"string"}},lastName:{defaultValue:null,description:"",name:"lastName",required:!0,type:{name:"string | undefined"}},nickname:{defaultValue:null,description:"",name:"nickname",required:!0,type:{name:"string | undefined"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!0,type:{name:"string | undefined"}},suffix:{defaultValue:null,description:"",name:"suffix",required:!0,type:{name:"string | undefined"}},resource:{defaultValue:null,description:"",name:"resource",required:!0,type:{name:"Patient"}},includedResources:{defaultValue:null,description:"",name:"includedResources",required:!1,type:{name:"ResourceMap"}},revIncludes:{defaultValue:null,description:"",name:"revIncludes",required:!1,type:{name:"Resource[]"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},isSummaryResource:{defaultValue:null,description:"",name:"isSummaryResource",required:!0,type:{name:"boolean"}},resourceType:{defaultValue:null,description:"",name:"resourceType",required:!0,type:{name:"string"}},getBasicResourceByAction:{defaultValue:null,description:"",name:"getBasicResourceByAction",required:!0,type:{name:"(profileAction: string) => Basic | undefined"}},toString:{defaultValue:null,description:"",name:"toString",required:!1,type:{name:"() => string"}}}}}catch{}const C=async(e,r,n)=>{const i=`${b(e.env)}/patient-history/patient/${r}/refresh?consent=1`;try{return await(await V(i,{method:"POST",headers:{Authorization:`Bearer ${e.authToken}`,"practitioner-npi":n.npi,"practitioner-role":n.role.toLocaleLowerCase(),"practitioner-name":n.name,...e.contextBuilderId&&{"Zus-Account":e.contextBuilderId}}})).json()}catch(t){throw f.logError(t,`Error scheduling patient history job with id of ${r}`),Error(`Error scheduling patient history job with id of ${r}`)}},p=({patient:e,header:r,isOpen:n,onClose:i,setClinicalHistoryExists:t})=>{const l=q(e),y=async(c,g)=>{try{await l(c)}catch(d){const{requestErrors:o,responseIsSuccess:N}=A(d);return N?(f.logError(d,"Failed to save patient data."),new Error("Failed to save patient data.")):new Error(o.join(","))}const h=await g(),u=await C(h,e.id,c);if("errors"in u){const d=[u.errors.map(o=>o.details)];return new Error(d.join(","))}return t(!0),u};return s.createElement(v,{header:r,title:"Request Records",action:y,data:m(e),schema:S,isOpen:n,onClose:i})};try{p.displayName="PatientHistoryRequestDrawer",p.__docgenInfo={description:"",displayName:"PatientHistoryRequestDrawer",props:{onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},header:{defaultValue:null,description:"",name:"header",required:!1,type:{name:"ReactNode"}},patient:{defaultValue:null,description:"",name:"patient",required:!0,type:{name:"PatientModel"}},setClinicalHistoryExists:{defaultValue:null,description:"",name:"setClinicalHistoryExists",required:!0,type:{name:"Dispatch<SetStateAction<boolean | undefined>>"}}}}}catch{}export{p as P};
//# sourceMappingURL=patient-history-request-drawer-d3f1d333.js.map
