{"version":3,"file":"other-provider-meds-table.stories-e2c2a7e6.js","sources":["../../src/components/content/medications/other-provider-meds-table.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from \"@storybook/react\";\nimport { setupMedicationMocks } from \"./story-helpers/mocks/requests\";\nimport { OtherProviderMedsTable, OtherProviderMedsTableProps } from \"@/components/content/medications/other-provider-meds-table\";\nimport { otherProviderMedications } from \"@/components/content/medications/story-helpers/mocks/other-provider-medications\";\nimport { providerMedications } from \"@/components/content/medications/story-helpers/mocks/provider-medications\";\nimport { CTWProvider } from \"@/components/core/providers/ctw-provider\";\nimport { PatientProvider } from \"@/components/core/providers/patient-provider\";\nimport { SYSTEM_ZUS_UNIVERSAL_ID } from \"@/fhir/system-urls\";\ntype Props = OtherProviderMedsTableProps;\nexport default ({\n  tags: [\"autodocs\"],\n  component: OtherProviderMedsTable,\n  decorators: [(Story, {\n    args\n  }) => <CTWProvider env=\"dev\" authToken=\"ey.12345\" builderId=\"12345\">\n        <PatientProvider patientID=\"007\" systemURL={SYSTEM_ZUS_UNIVERSAL_ID}>\n          <Story args={args} />\n        </PatientProvider>\n      </CTWProvider>]\n} as Meta<Props>);\nexport const Basic: StoryObj<Props> = {\n  args: {\n    sortColumn: \"display\",\n    sortOrder: \"asc\"\n  },\n  ...setupMedicationMocks({\n    providerMedications,\n    otherProviderMedications\n  })\n};\nexport const HideAddToRecord: StoryObj<Props> = {\n  ...Basic,\n  args: {\n    sortColumn: \"display\",\n    sortOrder: \"asc\",\n    hideAddToRecord: true\n  }\n};\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    sortColumn: \\\"display\\\",\\n    sortOrder: \\\"asc\\\"\\n  },\\n  ...setupMedicationMocks({\\n    providerMedications,\\n    otherProviderMedications\\n  })\\n}\",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nHideAddToRecord.parameters = {\n  ...HideAddToRecord.parameters,\n  docs: {\n    ...HideAddToRecord.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  ...Basic,\\n  args: {\\n    sortColumn: \\\"display\\\",\\n    sortOrder: \\\"asc\\\",\\n    hideAddToRecord: true\\n  }\\n}\",\n      ...HideAddToRecord.parameters?.docs?.source\n    }\n  }\n};"],"names":["otherProviderMedsTable_stories","OtherProviderMedsTable","Story","args","CTWProvider","React","PatientProvider","SYSTEM_ZUS_UNIVERSAL_ID","Basic","setupMedicationMocks","providerMedications","otherProviderMedications","HideAddToRecord","_a","_c","_b"],"mappings":"q/BASA,MAAgBA,EAAA,CACd,KAAM,CAAC,UAAU,EACjB,UAAWC,EACX,WAAY,CAAC,CAACC,EAAO,CACnB,KAAAC,CACF,oBAAOC,EAAY,CAAA,IAAI,MAAM,UAAU,WAAW,UAAU,OACtD,EAAAC,EAAA,cAACC,GAAgB,UAAU,MAAM,UAAWC,CAC1C,EAAAF,EAAA,cAACH,GAAM,KAAAC,CAAY,CAAA,CACrB,CACF,CAAc,CACpB,EACaK,EAAyB,CACpC,KAAM,CACJ,WAAY,UACZ,UAAW,KACb,EACA,GAAGC,EAAqB,CACtB,oBAAAC,EACA,yBAAAC,CAAA,CACD,CACH,EACaC,EAAmC,CAC9C,GAAGJ,EACH,KAAM,CACJ,WAAY,UACZ,UAAW,MACX,gBAAiB,EACnB,CACF,YACAA,EAAM,WAAa,CACjB,GAAGA,EAAM,WACT,KAAM,CACJ,IAAGK,EAAAL,EAAM,aAAN,YAAAK,EAAkB,KACrB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAP,EAAM,aAAN,YAAAO,EAAkB,OAAlB,YAAAD,EAAwB,MAC7B,CACF,CACF,YACAF,EAAgB,WAAa,CAC3B,GAAGA,EAAgB,WACnB,KAAM,CACJ,IAAGC,EAAAD,EAAgB,aAAhB,YAAAC,EAA4B,KAC/B,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAH,EAAgB,aAAhB,YAAAG,EAA4B,OAA5B,YAAAD,EAAkC,MACvC,CACF,CACF"}